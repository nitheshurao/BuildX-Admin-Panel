{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/ProjectCard.js","components/PostAdd.js","components/PostCard/Reactions.js","components/PostCard/Comment.js","components/PostCard/CommentAdd.js","components/PostCard/index.js","views/social/ProfileView/Header.js","views/social/ProfileView/Timeline/About.js","views/social/ProfileView/Timeline/index.js","views/social/ProfileView/Connections.js","views/social/ProfileView/Projects/index.js","views/social/ProfileView/Reviews/OverallReviews.js","views/social/ProfileView/Reviews/ReviewCard.js","views/social/ProfileView/Reviews/index.js","views/social/ProfileView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","media","height","backgroundColor","palette","background","dark","likedButton","color","colors","red","subscribersIcon","marginLeft","spacing","marginRight","ProjectCard","project","className","rest","classes","useState","isLiked","setLiked","likes","setLikes","clsx","p","image","display","alignItems","mt","alt","src","author","avatar","getInitials","ml","component","RouterLink","to","variant","title","moment","updatedAt","fromNow","pb","px","description","py","container","justify","item","location","type","technology","pl","pr","onClick","prevLikes","fontSize","subscribers","flexGrow","value","rating","size","readOnly","divider","width","fileInput","PostAdd","fileInputRef","setValue","account","useSelector","state","handleAttach","click","Box","disableUnderline","fullWidth","onChange","event","persist","target","placeholder","user","firstName","length","edge","ref","Reactions","post","liked","Tooltip","IconButton","Typography","marginBottom","bubble","borderRadius","shape","Comment","comment","Avatar","bgcolor","mb","Link","createdAt","message","CommentAdd","Paper","Input","Divider","date","backgroundPosition","PostCard","openedFile","setOpenedFile","Card","CardHeader","disableTypography","subheader","CardActionArea","CardMedia","my","comments","key","id","large","onClose","cover","position","backgroundSize","backgroundRepeat","content","top","left","backgroundImage","visibility","changeButton","bottom","right","blueGrey","common","white","breakpoints","down","addPhotoIcon","border","action","Header","connectedStatus","setConnectedStatus","handleConnectToggle","prevConnectedStatus","style","Button","Container","maxWidth","bio","Hidden","smDown","jobAvatar","secondary","main","cityAvatar","About","CardContent","LinearProgress","profileProgress","quote","List","ListItem","disableGutters","ListItemAvatar","ListItemText","primary","currentJob","href","company","previousJob","primaryTypographyProps","currentCity","originCity","email","Timeline","isMountedRef","posts","setPosts","getPosts","useCallback","axios","get","then","response","data","Grid","xs","md","lg","connectStatusMap","not_connected","pending","connected","searchInput","Connections","enqueueSnackbar","useSnackbar","connections","setConnections","search","setSearch","getConnections","SvgIcon","filter","connection","toLowerCase","includes","mx","gutterBottom","status","prevConnections","_","clone","newConnection","Projects","projects","setProjects","getProjects","lx","fontWeight","typography","fontWeightBold","OverallReviews","ratings","reduce","prev","Rating","total","ReviewCard","review","reviewer","flexWrap","mr","currency","price","pricePerHour","hours","marginTop","Reviews","reviews","setReviews","getReviews","tabs","label","minHeight","ProfileView","currentTab","setCurrentTab","setUser","Page","Tabs","scrollButtons","textColor","tab","Tab"],"mappings":"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","file":"static/js/40.27b9232b.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction ProjectCard({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likes, setLikes] = useState(project.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={project.media}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n              {' '}\n              | Updated\n              {' '}\n              {moment(project.updatedAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.description}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Location\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.type}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Type\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.technology}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Technology\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Like\">\n            <IconButton onClick={handleLike}>\n              <FavoriteBorderIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {likes}\n        </Typography>\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.subscribersIcon}\n        >\n          <UsersIcon />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {project.subscribers}\n        </Typography>\n        <Box flexGrow={1} />\n        <Rating\n          value={project.rating}\n          size=\"small\"\n          readOnly\n        />\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction PostAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n  const account = useSelector((state) => state.account);\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Paper\n            component={Box}\n            flexGrow={1}\n            py={0.5}\n            px={2}\n            variant=\"outlined\"\n          >\n            <Input\n              disableUnderline\n              fullWidth\n              onChange={handleChange}\n              placeholder={`What's on your mind, ${account.user.firstName}`}\n            />\n          </Paper>\n          <Tooltip title=\"Send\">\n            <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n              <SendIcon />\n            </IconButton>\n          </Tooltip>\n          <Divider className={classes.divider} />\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n          <input\n            className={classes.fileInput}\n            ref={fileInputRef}\n            type=\"file\"\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nPostAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PostAdd;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  }\n}));\n\nfunction Reactions({ post, className, ...rest }) {\n  const classes = useStyles();\n  const [liked, setLiked] = useState(post.liked);\n  const [likes, setLikes] = useState(post.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {liked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton\n            className={classes.likedButton}\n            onClick={handleUnlike}\n          >\n            <FavoriteIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <FavoriteBorderIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography\n        color=\"textSecondary\"\n        variant=\"h6\"\n      >\n        {likes}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n}\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    borderRadius: theme.shape.borderRadius\n  }\n}));\n\nfunction Comment({ comment, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        component={RouterLink}\n        src={comment.author.avatar}\n        to=\"#\"\n      />\n      <Box\n        flexGrow={1}\n        p={2}\n        ml={2}\n        bgcolor=\"background.dark\"\n        className={classes.bubble}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mb={1}\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {comment.author.name}\n          </Link>\n          <Box flexGrow={1} />\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {moment(comment.createdAt).fromNow()}\n          </Typography>\n        </Box>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          {comment.message}\n        </Typography>\n      </Box>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  className: PropTypes.string,\n  comment: PropTypes.object.isRequired\n};\n\nexport default Comment;\n","import React, { useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction CommentAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <Paper\n        variant=\"outlined\"\n        flexGrow={1}\n        component={Box}\n        ml={2}\n        py={0.5}\n        px={2}\n      >\n        <Input\n          disableUnderline\n          fullWidth\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach image\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n}\n\nCommentAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CommentAdd;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  }\n}));\n\nfunction PostCard({ className, post, ...rest }) {\n  const classes = useStyles();\n  const [openedFile, setOpenedFile] = useState(null);\n\n  return (\n    <>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader\n          avatar={(\n            <Avatar\n              alt=\"Person\"\n              className={classes.avatar}\n              component={RouterLink}\n              src={post.author.avatar}\n              to=\"#\"\n            />\n          )}\n          disableTypography\n          subheader={(\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          )}\n          title={(\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {post.author.name}\n            </Link>\n          )}\n        />\n        <Box px={3} pb={2}>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            {post.message}\n          </Typography>\n          {post.media && (\n          <Box mt={2}>\n            <CardActionArea onClick={() => setOpenedFile(post.media)}>\n              <CardMedia\n                className={classes.media}\n                image={post.media}\n              />\n            </CardActionArea>\n          </Box>\n          )}\n          <Box\n            mt={2}\n          >\n            <Reactions post={post} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          {post.comments.map((comment) => (\n            <Comment\n              comment={comment}\n              key={comment.id}\n            />\n          ))}\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <CommentAdd />\n        </Box>\n      </Card>\n      {openedFile && (\n        <Lightbox\n          large={openedFile}\n          onClose={() => setOpenedFile(null)}\n        />\n      )}\n    </>\n  );\n}\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 460,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage: 'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  addPhotoIcon: {\n    marginRight: theme.spacing(1)\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute'\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Header({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [connectedStatus, setConnectedStatus] = useState(user.connectedStatus);\n\n  const handleConnectToggle = () => {\n    setConnectedStatus((prevConnectedStatus) => (prevConnectedStatus === 'not_connected' ? 'pending' : 'not_connected'));\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${user.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n        >\n          <AddPhotoIcon className={classes.addPhotoIcon} />\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box\n          position=\"relative\"\n          mt={1}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Box marginLeft=\"160px\">\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {user.bio}\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {user.name}\n            </Typography>\n          </Box>\n          <Box flexGrow={1} />\n          <Hidden smDown>\n            {connectedStatus === 'not_connected' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Connect\n              </Button>\n            )}\n            {connectedStatus === 'pending' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Pending\n              </Button>\n            )}\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              size=\"small\"\n              to=\"/app/chat\"\n              variant=\"contained\"\n              className={classes.action}\n            >\n              Send message\n            </Button>\n          </Hidden>\n          <Tooltip title=\"More options\">\n            <IconButton className={classes.action}>\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  LinearProgress,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Plus as PlusIcon,\n  Home as HomeIcon,\n  Mail as MailIcon,\n  Briefcase as BriefcaseIcon\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  jobAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  cityAvatar: {\n    backgroundColor: colors.red[600]\n  }\n}));\n\nfunction About({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader title=\"Profile Progress\" />\n        <Divider />\n        <CardContent>\n          <LinearProgress\n            variant=\"determinate\"\n            value={user.profileProgress}\n          />\n          <Box mt={2}>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              50% Set Up Complete\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n      <Box mt={3}>\n        <Card>\n          <CardHeader title=\"About\" />\n          <Divider />\n          <CardContent>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              &quot;\n              {user.quote}\n              &quot;\n            </Typography>\n            <List>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.jobAvatar}>\n                    <BriefcaseIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      {user.currentJob.title}\n                      {' '}\n                      at\n                      {' '}\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        href=\"#\"\n                      >\n                        {user.currentJob.company}\n                      </Link>\n                    </Typography>\n                  )}\n                  secondary={(\n                    <Typography\n                      variant=\"caption\"\n                      color=\"textSecondary\"\n                    >\n                      Past:\n                      {user.previousJob.title}\n                      {' '}\n                      <Link\n                        variant=\"caption\"\n                        color=\"textSecondary\"\n                        href=\"#\"\n                      >\n                        {user.previousJob.company}\n                      </Link>\n                    </Typography>\n                  )}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <PlusIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Add school or collage\"\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <HomeIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      Lives in\n                      {' '}\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        href=\"#\"\n                      >\n                        {user.currentCity}\n                      </Link>\n                    </Typography>\n                  )}\n                  secondary={(\n                    <Typography\n                      variant=\"caption\"\n                      color=\"textSecondary\"\n                    >\n                      Originally from\n                      {' '}\n                      <Link\n                        variant=\"caption\"\n                        color=\"textSecondary\"\n                        href=\"#\"\n                      >\n                        {user.originCity}\n                      </Link>\n                    </Typography>\n                  )}\n                />\n              </ListItem>\n              <ListItem\n                disableGutters\n                divider\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <MailIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={user.email}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textPrimary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n}\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostAdd from 'src/components/PostAdd';\nimport PostCard from 'src/components/PostCard';\nimport About from './About';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Timeline({\n  className,\n  user,\n  ...rest\n}) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState(null);\n\n  const getPosts = useCallback(() => {\n    axios\n      .get('/api/social/users/1/posts')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setPosts(response.data.posts);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        <Grid\n          item\n          xs={12}\n          md={6}\n          lg={4}\n        >\n          <About user={user} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={6}\n          lg={8}\n        >\n          <PostAdd />\n          {posts && posts.map((post) => (\n            <Box\n              mt={3}\n              key={post.id}\n            >\n              <PostCard post={post} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nTimeline.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default Timeline;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  Input,\n  Link,\n  Paper,\n  Typography,\n  makeStyles,\n  SvgIcon\n} from '@material-ui/core';\nimport {\n  Search as SearchIcon,\n  MoreVertical as MoreIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst connectStatusMap = {\n  not_connected: 'Connect',\n  pending: 'Pending',\n  connected: 'Connected'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 60,\n    width: 60\n  }\n}));\n\nfunction Connections({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar } = useSnackbar();\n  const [connections, setConnections] = useState(null);\n  const [search, setSearch] = useState('');\n\n  const handleConnectToggle = (id) => {\n    setConnections((prevConnections) => {\n      const newConnections = _.map(prevConnections, _.clone);\n\n      return newConnections.map((connection) => {\n        if (connection.id === id) {\n          const newConnection = { ...connection };\n\n          newConnection.status = connection.status === 'connected' || connection.status === 'pending'\n            ? 'not_connected'\n            : 'pending';\n\n          if (newConnection.status === 'pending') {\n            enqueueSnackbar('Connection request sent', {\n              variant: 'success'\n            });\n          }\n\n          return newConnection;\n        }\n\n        return connection;\n      });\n    });\n  };\n\n  const getConnections = useCallback(() => {\n    axios\n      .get('/api/social/users/1/connections')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setConnections(response.data.connections);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getConnections();\n  }, [getConnections]);\n\n  if (!connections) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Connections\" />\n      <Divider />\n      <Box\n        py={2}\n        px={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n        >\n          <SearchIcon />\n        </SvgIcon>\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n          placeholder=\"Search connections\"\n        />\n      </Box>\n      <Divider />\n      <Box p={3}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {connections\n            .filter((connection) => connection.name.toLowerCase().includes(search))\n            .map((connection) => (\n              <Grid\n                item\n                key={connection.id}\n                xs={12}\n                md={6}\n              >\n                <Paper variant=\"outlined\">\n                  <Box\n                    p={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    <Avatar\n                      alt=\"Profile image\"\n                      className={classes.avatar}\n                      component={RouterLink}\n                      src={connection.avatar}\n                      to=\"#\"\n                    />\n                    <Box\n                      flexGrow={1}\n                      mx={2}\n                    >\n                      <Link\n                        variant=\"h5\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        {connection.name}\n                      </Link>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        {connection.common}\n                        {' '}\n                        connections in common\n                      </Typography>\n                      {connection.status !== 'rejected' && (\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => handleConnectToggle(connection.id)}\n                        >\n                          {connectStatusMap[connection.status]}\n                        </Button>\n                      )}\n                    </Box>\n                    <IconButton>\n                      <SvgIcon fontSize=\"small\">\n                        <MoreIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </Box>\n                </Paper>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nConnections.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Connections;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Projects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    if (isMountedRef.current) {\n      axios\n        .get('/api/social/users/1/projects')\n        .then((response) => setProjects(response.data.projects));\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            lg={4}\n            lx={4}\n            md={6}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(2),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction OverallReviews({ ratings, className, ...rest }) {\n  const classes = useStyles();\n  let rating = 0;\n\n  if (ratings.length > 0) {\n    rating = ratings.reduce((prev, current) => prev + current, 0) / ratings.length;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Overall Reviews\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <Rating value={rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                {rating}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Typography\n              className={classes.total}\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {ratings.length}\n              {' '}\n              reviews in total\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  ratings: PropTypes.array.isRequired\n};\n\nexport default OverallReviews;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction ReviewCard({ review, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar\n            alt=\"Reviewer\"\n            className={classes.avatar}\n            src={review.reviewer.avatar}\n          >\n            {getInitials(review.reviewer.name)}\n          </Avatar>\n        )}\n        disableTypography\n        subheader={(\n          <Box\n            flexWrap=\"wrap\"\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              mr={1}\n            >\n              <Rating value={review.rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n              >\n                {review.rating}\n              </Typography>\n            </Box>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              | Reviewd by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {review.reviewer.name}\n              </Link>\n              {' '}\n              |\n              {' '}\n              {moment(review.createdAt).fromNow()}\n            </Typography>\n          </Box>\n        )}\n        title={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h5\"\n          >\n            {review.project.title}\n          </Link>\n        )}\n      />\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {review.message}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.currency}\n              {review.project.price}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Project price\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.currency}\n              {review.pricePerHour}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Per project\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {review.hours}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Hours\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nReviewCard.propTypes = {\n  className: PropTypes.string,\n  review: PropTypes.object.isRequired\n};\n\nexport default ReviewCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport OverallReviews from './OverallReviews';\nimport ReviewCard from './ReviewCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  review: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction Reviews({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [reviews, setReviews] = useState(null);\n\n  const getReviews = useCallback(() => {\n    if (isMountedRef.current) {\n      axios\n        .get('/api/social/users/1/reviews')\n        .then((response) => setReviews(response.data.reviews));\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReviews();\n  }, [getReviews]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <OverallReviews ratings={reviews.map((review) => review.rating)} />\n      {reviews.map((review) => (\n        <ReviewCard\n          className={classes.review}\n          key={review.id}\n          review={review}\n        />\n      ))}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Reviews;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Timeline from './Timeline';\nimport Connections from './Connections';\nimport Projects from './Projects';\nimport Reviews from './Reviews';\n\nconst tabs = [\n  { value: 'timeline', label: 'Timeline' },\n  { value: 'connections', label: 'Connections' },\n  { value: 'projects', label: 'Projects' },\n  { value: 'reviews', label: 'Reviews' }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nfunction ProfileView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState('timeline');\n  const [user, setUser] = useState(null);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getPosts = useCallback(() => {\n    axios\n      .get('/api/social/profile')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setUser(response.data.user);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Profile\"\n    >\n      <Header user={user} />\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box\n          py={3}\n          pb={6}\n        >\n          {currentTab === 'timeline' && <Timeline user={user} />}\n          {currentTab === 'connections' && <Connections />}\n          {currentTab === 'projects' && <Projects />}\n          {currentTab === 'reviews' && <Reviews />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProfileView;\n"],"sourceRoot":""}