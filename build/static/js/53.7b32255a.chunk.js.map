{"version":3,"sources":["hooks/useIsMountedRef.js","components/Label.js","views/management/CustomerDetailsView/Header.js","views/management/CustomerDetailsView/Details/CustomerInfo.js","views/management/CustomerDetailsView/Details/Emails.js","views/management/CustomerDetailsView/Details/index.js","views/management/CustomerDetailsView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","actionIcon","marginRight","Header","customer","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","fullName","CustomerInfo","Card","CardHeader","title","Divider","Table","TableBody","TableRow","TableCell","email","verified","phone","state","country","address1","address2","cell","Emails","Details","lg","md","xl","xs","background","dark","minHeight","paddingTop","paddingBottom","CustomerDetailsView","isMountedRef","useState","setCustomer","currentTab","setCurrentTab","getCustomer","useCallback","axios","get","then","response","data","Page","Container","maxWidth","Box","mt","Tabs","onChange","event","value","scrollButtons","textColor","tabs","label","map","tab","Tab","key"],"mappings":"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","file":"static/js/53.7b32255a.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Edit as EditIcon } from 'react-feather';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, customer, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Users\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {customer.fullName}\n        </Typography>\n      </Grid>\n      {/* <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          component={RouterLink}\n          to=\"/app/management/customers/1/edit\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <EditIcon />\n          </SvgIcon>\n          Edit\n        </Button>\n      </Grid> */}\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  fontWeightMedium: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction CustomerInfo({ customer, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.fontWeightMedium}>\n              Email\n            </TableCell>\n            <TableCell>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {customer.email}\n              </Typography>\n              <Label color={customer.verified ? 'success' : 'error'}>\n                {customer.verified\n                  ? 'Email verified'\n                  : 'Email not verified'}\n              </Label>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.fontWeightMedium}>\n              Phone\n            </TableCell>\n            <TableCell>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {customer.phone}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.fontWeightMedium}>\n              State/Region\n            </TableCell>\n            <TableCell>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {customer.state}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.fontWeightMedium}>\n              Country\n            </TableCell>\n            <TableCell>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {customer.country}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.fontWeightMedium}>\n              Address 1\n            </TableCell>\n            <TableCell>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {customer.address1}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.fontWeightMedium}>\n              Address 2\n            </TableCell>\n            <TableCell>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {customer.address2}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      {/* <Box\n        p={1}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"flex-start\"\n      >\n        <Button>\n          <LockOpenIcon className={classes.actionIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.actionIcon} />\n          Login as Customer\n        </Button>\n      </Box> */}\n    </Card>\n  );\n}\n\nCustomerInfo.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerInfo;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport MaiIcon from '@material-ui/icons/MailOutline';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  },\n  cell: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst emailOptions = [\n  'Resend last invoice',\n  'Send password reset',\n  'Send verification'\n];\n\nfunction Emails({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [emailOption, setEmailOption] = useState(emailOptions[0]);\n  const [emails, setEmails] = useState(null);\n\n  const getMails = useCallback(() => {\n    axios\n      .get('/api/management/customers/1/emails')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEmails(response.data.emails);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getMails();\n  }, [getMails]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Send emails\" />\n      <Divider />\n      <CardContent>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={(event) => setEmailOption(event.target.value)}\n          select\n          SelectProps={{ native: true }}\n          value={emailOption}\n          variant=\"outlined\"\n        >\n          {emailOptions.map((option) => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Box mt={2}>\n          <Button\n            variant=\"contained\"\n          >\n            <MaiIcon className={classes.actionIcon} />\n            Send email\n          </Button>\n        </Box>\n        {emails && (\n          <Box mt={2}>\n            <Table>\n              <TableBody>\n                {emails.map((email) => (\n                  <TableRow key={email.id}>\n                    <TableCell className={classes.cell}>\n                      {moment(email.createdAt).format('DD/MM/YYYY | HH:MM')}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {email.description}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nEmails.propTypes = {\n  className: PropTypes.string,\n  emails: PropTypes.array\n};\n\nexport default Emails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport CustomerInfo from './CustomerInfo';\nimport Emails from './Emails';\n// import Invoices from './Invoices';\n// import OtherActions from './OtherActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Details({ customer, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <CustomerInfo customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        {/* <Invoices customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      > */}\n        {/* <Emails /> */}\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        {/* <OtherActions /> */}\n      </Grid>\n    </Grid>\n  );\n}\n\nDetails.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default Details;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Details from './Details';\n// import Invoices from './Invoices';\n// import Logs from './Logs';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction CustomerDetailsView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [customer, setCustomer] = useState(null);\n  const [currentTab, setCurrentTab] = useState('details');\n  const tabs = [\n    { value: 'details', label: 'Details' },\n    // { value: 'invoices', label: 'Invoices' },\n    // { value: 'logs', label: 'Logs' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getCustomer = useCallback(() => {\n    axios\n      .get('/api/management/customers/1')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setCustomer(response.data.customer);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCustomer();\n  }, [getCustomer]);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Details\"\n    >\n      <Container maxWidth={false}>\n        <Header customer={customer} />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            variant=\"scrollable\"\n            textColor=\"secondary\"\n            className={classes.tabs}\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'details' && <Details customer={customer} />}\n          {/* {currentTab === 'invoices' && <Invoices />}\n          {currentTab === 'logs' && <Logs />} */}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default CustomerDetailsView;\n"],"sourceRoot":""}