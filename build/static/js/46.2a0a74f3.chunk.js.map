{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","../node_modules/react-feather/dist/icons/arrow-right.js","../node_modules/react-feather/dist/icons/edit.js","views/management/CustomerListView/Header.js","views/management/CustomerListView/Results.js","views/management/CustomerListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRight","props","color","size","otherProps","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","string","oneOfType","number","defaultProps","Edit","d","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","actionIcon","marginRight","Header","className","rest","classes","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","to","component","RouterLink","Typography","tabs","value","label","sortOptions","descendingComparator","a","b","orderBy","applySort","customers","sort","comparator","order","getComparator","stabilizedThis","el","index","queryField","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","default","bulkAction","avatar","Results","useState","currentTab","setCurrentTab","selectedCustomers","setSelectedCustomers","page","setPage","limit","setLimit","query","setQuery","setSort","isProspect","isReturning","acceptsMarketing","filters","setFilters","filteredCustomers","filter","customer","matches","containsQuery","forEach","property","toLowerCase","includes","applyFilters","paginatedCustomers","applyPagination","Card","Tabs","onChange","event","updatedFilters","scrollButtons","textColor","tab","Tab","Divider","Box","p","minHeight","display","alignItems","TextField","InputProps","startAdornment","InputAdornment","SvgIcon","persist","placeholder","flexGrow","select","SelectProps","native","option","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","isCustomerSelected","id","hover","selected","Avatar","src","getInitials","email","location","orders","currency","spent","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","dark","paddingTop","paddingBottom","CustomerListView","isMountedRef","setCustomers","getCustomers","useCallback","axios","get","then","response","data","Page","title","Container","maxWidth","mt"],"mappings":"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","file":"static/js/46.2a0a74f3.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar ArrowRight = function ArrowRight(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"12 5 19 12 12 19\"\n  }));\n};\n\nArrowRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowRight.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default ArrowRight;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Edit = function Edit(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), React.createElement(\"path\", {\n    d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"\n  }), React.createElement(\"path\", {\n    d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"\n  }));\n};\n\nEdit.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default Edit;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport {\n  PlusCircle as PlusCircleIcon,\n  Download as DownloadIcon,\n  Upload as UploadIcon\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Customers\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          All Users\n        </Typography>\n        {/* <Box mt={2}>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <UploadIcon />\n            </SvgIcon>\n            Import\n          </Button>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <DownloadIcon />\n            </SvgIcon>\n            Export\n          </Button>\n        </Box> */}\n      </Grid>\n      {/* <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.action}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <PlusCircleIcon />\n          </SvgIcon>\n          New Customer\n        </Button>\n      </Grid> */}\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n  Link,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst tabs = [\n  {\n    value: 'all',\n    label: 'All'\n  }//,\n  // {\n  //   value: 'acceptsMarketing',\n  //   label: 'Accepts Marketing'\n  // },\n  // {\n  //   value: 'isProspect',\n  //   label: 'Prospect'\n  // },\n  // {\n  //   value: 'isReturning',\n  //   label: 'Returning'\n  // }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'orders|desc',\n    label: 'Total orders (high to low)'\n  },\n  {\n    value: 'orders|asc',\n    label: 'Total orders (low to high)'\n  }\n];\n\nfunction applyFilters(customers, query, filters) {\n  return customers.filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySort(customers, sort) {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    // eslint-disable-next-line no-shadow\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Results({ className, customers, ...rest }) {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    isProspect: null,\n    isReturning: null,\n    acceptsMarketing: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      isProspect: null,\n      isReturning: null,\n      acceptsMarketing: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedCustomers([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  const handleSelectOneCustomer = (event, customerId) => {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n    } else {\n      setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkOperations = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0 && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Tabs\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        textColor=\"secondary\"\n        value={currentTab}\n        variant=\"scrollable\"\n      >\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.value}\n            value={tab.value}\n            label={tab.label}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <Box\n        p={2}\n        minHeight={56}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <TextField\n          className={classes.queryField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SvgIcon\n                  fontSize=\"small\"\n                  color=\"action\"\n                >\n                  <SearchIcon />\n                </SvgIcon>\n              </InputAdornment>\n            )\n          }}\n          onChange={handleQueryChange}\n          placeholder=\"Search Customers\"\n          value={query}\n          variant=\"outlined\"\n        />\n        <Box flexGrow={1} />\n        <TextField\n          label=\"Sort By\"\n          name=\"sort\"\n          onChange={handleSortChange}\n          select\n          SelectProps={{ native: true }}\n          value={sort}\n          variant=\"outlined\"\n        >\n          {sortOptions.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n      {/* {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllCustomers}\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button> */}\n          {/* </div> */}\n        {/* </div> */}\n      {/* )} */}\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell> */}\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Orders\n                </TableCell>\n                <TableCell>\n                  Spent\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      /> */}\n                    {/* </TableCell> */}\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          src={customer.avatar}\n                        >\n                          {getInitials(customer.name)}\n                        </Avatar>\n                        <div>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to=\"/app/management/customers/1\"\n                            variant=\"h6\"\n                          >\n                            {customer.name}\n                          </Link>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            {customer.email}\n                          </Typography>\n                        </div>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {customer.location}\n                    </TableCell>\n                    <TableCell>\n                      {customer.orders}\n                    </TableCell>\n                    <TableCell>\n                      {customer.currency}\n                      {customer.spent}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        // component={RouterLink}\n                        // to=\"/app/management/customers/Id/edit\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton\n                        // component={RouterLink}\n                        // to=\"/app/management/customers/{Id}\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction CustomerListView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [customers, setCustomers] = useState(null);\n\n  const getCustomers = useCallback(() => {\n    axios\n      .get('/api/management/customers')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setCustomers(response.data.customers);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n\n  if (!customers) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer List\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        {customers && (\n          <Box mt={3}>\n            <Results customers={customers} />\n          </Box>\n        )}\n      </Container>\n    </Page>\n  );\n}\n\nexport default CustomerListView;\n"],"sourceRoot":""}