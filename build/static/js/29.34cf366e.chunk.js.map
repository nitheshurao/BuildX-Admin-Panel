{"version":3,"sources":["hooks/useIsMountedRef.js","components/Label.js","../node_modules/typescript/lib sync","views/management/ProductListView/Header.js","views/management/ProductListView/Results.js","views/management/ProductListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","action","marginBottom","marginLeft","actionIcon","marginRight","Header","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","sortOptions","value","label","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","width","zIndex","background","default","bulkAction","queryField","categoryField","flexBasis","availabilityField","stockField","shippableField","imageCell","image","Results","products","useState","selectedProducts","setSelectedProducts","page","setPage","limit","setLimit","query","setQuery","sort","setSort","category","availability","inStock","isShippable","filters","setFilters","handleSelectAllProducts","event","target","checked","map","product","isMountedRef","categories","setcategories","getcategories","useCallback","axios","get","then","response","console","log","data","frmtedctgory","name","catch","err","paginatedProducts","slice","applyPagination","filter","matches","toLowerCase","includes","isAvailable","inventoryType","applyFilters","enableBulkOperations","length","selectedSomeProducts","selectedAllProducts","Card","Box","p","TextField","InputProps","startAdornment","InputAdornment","SvgIcon","onChange","persist","placeholder","select","SelectProps","native","option","key","mt","prevFilters","handleCategoryChange","categoryOption","Checkbox","indeterminate","Button","type","Table","TableHead","TableRow","TableCell","align","TableBody","isProductSelected","hover","selected","productId","prevSelected","alt","src","bgcolor","underline","description","total_amount","IconButton","TablePagination","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","category_items","dark","minHeight","paddingTop","paddingBottom","ProductListView","setProducts","getProducts","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/29.34cf366e.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1611;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  PlusCircle as PlusCircleIcon,\n  Download as DownloadIcon,\n  Upload as UploadIcon\n} from 'react-feather';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Products\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          All Products\n        </Typography>\n        {/* <Box mt={2}>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <UploadIcon />\n            </SvgIcon>\n            Import\n          </Button>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <DownloadIcon />\n            </SvgIcon>\n            Export\n          </Button>\n        </Box> */}\n      </Grid>\n      {/* <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.action}\n          component={RouterLink}\n          to=\"/app/management/products/create\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <PlusCircleIcon />\n          </SvgIcon>\n          New Product\n        </Button>\n      </Grid> */}\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useCallback  } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef'\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  FormControlLabel,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Image as ImageIcon,\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\nimport { isDeleteExpression } from 'typescript';\nimport { Category } from '@material-ui/icons';\n\nconst categoryOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'dress',\n    name: 'Dress'\n  },\n  {\n    id: 'jewelry',\n    name: 'Jewelry'\n  },\n  {\n    id: 'blouse',\n    name: 'Blouse'\n  },\n  {\n    id: 'beauty',\n    name: 'Beauty'\n  }\n];\n\nconst avalabilityOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'available',\n    name: 'Available'\n  },\n  {\n    id: 'unavailable',\n    name: 'Unavailable'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'createdAt|desc',\n    label: 'Creation date (newest first)'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Creation date (oldest first)'\n  }\n];\n\n// function getInventoryLabel(inventoryType) {\n//   const map = {\n//     in_stock: {\n//       text: 'In Stock',\n//       color: 'success'\n//     },\n//     out_of_stock: {\n//       text: 'Out of Stock',\n//       color: 'error'\n//     },\n//     limited: {\n//       text: 'Limited',\n//       color: 'warning'\n//     }\n//   };\n\n//   const { text, color } = map[inventoryType];\n\n//   return (\n//     <Label color={color}>\n//       {text}\n//     </Label>\n//   );\n// }\n\nfunction applyFilters(products, query, filters) {\n  return products.filter((products) => {\n    let matches = true;\n\n    if (query && !products.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    // if (filters.category && products.category !== filters.category) {\n    //   matches = false;\n    // }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !products.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && products.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (filters.inStock && !['in_stock', 'limited'].includes(products.inventoryType)) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !products.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(products, page, limit) {\n   return products.slice(page * limit, page * limit + limit);\n }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  bulkOperations: {\n    position :'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  queryField: {\n    width: 500\n  },\n  categoryField: {\n    flexBasis: 200\n  },\n  availabilityField: {\n    marginLeft: theme.spacing(2),\n    flexBasis: 200\n  },\n  stockField: {\n    marginLeft: theme.spacing(2)\n  },\n  shippableField: {\n    marginLeft: theme.spacing(2)\n  },\n  imageCell: {\n    fontSize: 0,\n    width: 68,\n    flexBasis: 68,\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  image: {\n    height: 68,\n    width: 68\n  }\n}));\n\nfunction Results({ className, products, ...rest }) {\n  const classes = useStyles();\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllProducts = (event) => {\n    setSelectedProducts(event.target.checked\n      ? products.map((product) => product.id)\n      : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n  ////\n  const isMountedRef = useIsMountedRef();\n\n\n const [categories, setcategories] = useState([]);\n const getcategories = useCallback(() => {\n   axios\n     .get(' https://15.207.7.54:8081/category/fetch-by-filter')\n     .then(response => {\n       console.log('----------response---------- crty-');\n       // console.log(response.data.categories)\n       console.log(response.data.data.categories);\n       if (isMountedRef.current) {\n         let frmtedctgory = response.data.data.categories.map(item => {\n           return ({\n             value: item.id,\n             label: item.name\n           })\n         })\n         console.log(frmtedctgory);\n         setcategories([...frmtedctgory]);\n       }\n     })\n\n     .catch(err => {\n       console.log('----------err-------cry----');\n       console.log(err);\n     });\n }, [isMountedRef]);\n\n\n useEffect(() => {\n   getcategories();\n }, [getcategories]);\n  ///\n\n  // Usually query is done on backend with indexing solutions\n  const filteredProducts = applyFilters(products, query, filters);\n  const paginatedProducts = applyPagination(filteredProducts ,page, limit);\n  const enableBulkOperations = selectedProducts.length > 0;\n  const selectedSomeProducts = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  const selectedAllProducts = selectedProducts.length === products.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon\n                    fontSize=\"small\"\n                    color=\"action\"\n                  >\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search products\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          mt={3}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            // className={classes.categoryField}\n            label=\"Category\"\n            name=\"category\"\n            onChange={(e)=> handleCategoryChange(e)}\n            select\n            SelectProps={{ native: true }}\n            value={filters.category || 'all'}\n            \n            variant=\"outlined\"\n          >\n            {categories.map((categoryOption) => (\n              <option\n                key={categoryOption.value}\n                value={categoryOption.value}\n              >\n                {categoryOption.label}\n              </option>\n            ))}\n          </TextField>\n          {/* <TextField\n            className={classes.availabilityField}\n            label=\"Availability\"\n            name=\"availability\"\n            onChange={handleAvailabilityChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.availability || 'all'}\n            variant=\"outlined\"\n          >\n            {avalabilityOptions.map((avalabilityOption) => (\n              <option\n                key={avalabilityOption.id}\n                value={avalabilityOption.id}\n              >\n                {avalabilityOption.name}\n              </option>\n            ))}\n          </TextField> */}\n          {/* <FormControlLabel\n            className={classes.stockField}\n            control={(\n              <Checkbox\n                checked={!!filters.inStock}\n                onChange={handleStockChange}\n                name=\"inStock\"\n              />\n            )}\n            label=\"In Stock\"\n          />\n          <FormControlLabel\n            className={classes.shippableField}\n            control={(\n              <Checkbox\n                checked={!!filters.isShippable}\n                onChange={handleShippableChange}\n                name=\"Shippable\"\n              />\n            )}\n            label=\"Shippable\"\n          /> */}\n        </Box>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllProducts}\n              indeterminate={selectedSomeProducts}\n              onChange={handleSelectAllProducts}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n              type=\"delete\"\n           \n            >\n              Delete\n            </Button>\n            \n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllProducts}\n                    indeterminate={selectedSomeProducts}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell />\n                <TableCell>\n                  Name\n                </TableCell>\n            \n                <TableCell>\n                  Details\n                </TableCell>\n                {/* <TableCell>\n                  Invetory\n                </TableCell> */}\n                {/* <TableCell>\n                  Attributes\n                </TableCell> */}\n                <TableCell>\n                  Price\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map((products) => {\n                const isProductSelected = selectedProducts.includes(products.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={products.id}\n                    selected={isProductSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        onChange={(event) => handleSelectOneProduct(event, products.id)}\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                    <TableCell className={classes.imageCell}>\n                      {products.image ? (\n                        <img\n                          alt=\"Product\"\n                          src={products.image}\n                          className={classes.image}\n                        />\n                      ) : (\n                        <Box\n                          p={2}\n                          bgcolor=\"background.dark\"\n                        >\n                          <SvgIcon>\n                            <ImageIcon />\n                          </SvgIcon>\n                        </Box>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        underline=\"none\"\n                        to=\"#\"\n                      >\n                        {products.name}\n                      </Link>\n                    </TableCell>\n                    {/* <TableCell>\n                      {getInventoryLabel(products.inventoryType)}\n                    </TableCell> */}\n                    {/* <TableCell>\n                      {products.available_quantity}\n                      {' '}\n                      in stock\n                      {products.available_quantity > 1 && ` in ${products.available_quantity} variants`}\n                    </TableCell> */}\n                    {/* <TableCell>\n                      {products.attributes.map((attr) => attr)}\n                    </TableCell> */}\n                      <TableCell>\n                      {products.description}\n                      \n                      \n                    </TableCell>\n                    <TableCell>\n                    {products.total_amount}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton>\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton  \n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            // count={filteredProducts.length}\n            onChangePage={handlePageChange}\n            onChangeRowsPerPage={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array\n};\n\nResults.defaultProps = {\n  category_items: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'axios';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: 100\n  }\n}));\n\nfunction ProductListView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState(null);\n\n  const getProducts = useCallback(() => {\n    axios\n      .get(' https://15.207.7.54:8081/products/fetch-by-filter')\n      .then((response) => {\n\n        console.log('----------response-----------')\n\n        console.log(response.data.data.products)\n        if (isMountedRef.current) {\n          setProducts(response.data.data.products)\n        }\n      }).catch(err => {\n        console.log('----------err-----------')\n        console.log(err)\n      })\n  }, [isMountedRef]);\n\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  if (!products) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Product List\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        {products && (\n          <Box mt={3}>\n            <Results products={products} />\n          </Box>\n        )}\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProductListView;\n"],"sourceRoot":""}