{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","views/auth/RegisterView/RegisterForm.js","views/auth/RegisterView/index.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","useStyles","makeStyles","RegisterForm","onSubmitSuccess","rest","dispatch","useDispatch","initialValues","firstName","lastName","email","password","validationSchema","Yup","shape","max","required","min","onSubmit","values","a","setErrors","setStatus","setSubmitting","register","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","TextField","error","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","type","value","variant","Box","mt","Button","color","disabled","size","default","theme","justifyContent","backgroundColor","palette","background","dark","display","height","minHeight","flexDirection","paddingTop","RegisterView","history","useHistory","Page","title","Container","maxWidth","Typography","gutterBottom","push","my","Divider","Link","RouterLink","to"],"mappings":"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","file":"static/js/13.c7bc8c4d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport { register } from 'src/actions/accountActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction RegisterForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        // policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        firstName: Yup.string().max(255).required('First name is required'),\n        lastName: Yup.string().max(255).required('Last name is required'),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().min(7).max(255).required('Password is required'),\n        // policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await dispatch(register(values));\n          onSubmitSuccess();\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.firstName && errors.firstName)}\n            fullWidth\n            helperText={touched.firstName && errors.firstName}\n            label=\"First Name\"\n            margin=\"normal\"\n            name=\"firstName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"firstName\"\n            value={values.firstName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.lastName && errors.lastName)}\n            fullWidth\n            helperText={touched.lastName && errors.lastName}\n            label=\"Last Name\"\n            margin=\"normal\"\n            name=\"lastName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"lastName\"\n            value={values.lastName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          {/* <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            mt={2}\n            ml={-1}\n          >\n            <Checkbox\n              checked={values.policy}\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              I have read the\n              {' '}\n              <Link\n                component=\"a\"\n                href=\"#\"\n                color=\"secondary\"\n              >\n                Terms and Conditions\n              </Link>\n            </Typography>\n          </Box> */}\n          {/* {Boolean(touched.policy && errors.policy) && (\n            <FormHelperText error>\n              {errors.policy}\n            </FormHelperText>\n          )} */}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Create account\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nRegisterForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\n\nRegisterForm.default = {\n  onSubmitSuccess: () => {}\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\nimport RegisterForm from './RegisterForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    minHeight: '100%',\n    flexDirection: 'column',\n    paddingBottom: 80,\n    paddingTop: 80\n  }\n}));\n\nfunction RegisterView() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleSubmitSuccess = () => {\n    history.push('/app/login');\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Container maxWidth=\"sm\">\n        {/* <Box\n          mb={5}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n          <Button\n            component={RouterLink}\n            to=\"/\"\n            className={classes.backButton}\n          >\n            Back to home\n          </Button>\n        </Box> */}\n        <Card>\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n              color=\"textPrimary\"\n            >\n              Sign up\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              Sign up on the internal platform\n            </Typography>\n            <Box mt={3}>\n              <RegisterForm onSubmitSuccess={handleSubmitSuccess} />\n            </Box>\n            <Box my={2}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Have an account?\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\nexport default RegisterView;\n"],"sourceRoot":""}