{"ast":null,"code":"import _toConsumableArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerListView/Results.js\";\n\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Avatar, Box, Button, Card, Checkbox, Divider, IconButton, InputAdornment, Link, SvgIcon, Tab, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Tabs, TextField, Typography, makeStyles } from '@material-ui/core';\nimport { Edit as EditIcon, ArrowRight as ArrowRightIcon, Search as SearchIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\nvar tabs = [{\n  value: 'all',\n  label: 'All'\n}, {\n  value: 'acceptsMarketing',\n  label: 'Accepts Marketing'\n}, {\n  value: 'isProspect',\n  label: 'Prospect'\n}, {\n  value: 'isReturning',\n  label: 'Returning'\n}];\nvar sortOptions = [{\n  value: 'updatedAt|desc',\n  label: 'Last update (newest first)'\n}, {\n  value: 'updatedAt|asc',\n  label: 'Last update (oldest first)'\n}, {\n  value: 'orders|desc',\n  label: 'Total orders (high to low)'\n}, {\n  value: 'orders|asc',\n  label: 'Total orders (low to high)'\n}];\n\nfunction applyFilters(customers, query, filters) {\n  return customers.filter(function (customer) {\n    var matches = true;\n\n    if (query) {\n      var properties = ['email', 'name'];\n      var containsQuery = false;\n      properties.forEach(function (property) {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach(function (key) {\n      var value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return descendingComparator(a, b, orderBy);\n  } : function (a, b) {\n    return -descendingComparator(a, b, orderBy);\n  };\n}\n\nfunction applySort(customers, sort) {\n  var _sort$split = sort.split('|'),\n      _sort$split2 = _slicedToArray(_sort$split, 2),\n      orderBy = _sort$split2[0],\n      order = _sort$split2[1];\n\n  var comparator = getComparator(order, orderBy);\n  var stabilizedThis = customers.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    // eslint-disable-next-line no-shadow\n    var order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    queryField: {\n      width: 500\n    },\n    bulkOperations: {\n      position: 'relative'\n    },\n    bulkActions: {\n      paddingLeft: 4,\n      paddingRight: 4,\n      marginTop: 6,\n      position: 'absolute',\n      width: '100%',\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    },\n    bulkAction: {\n      marginLeft: theme.spacing(2)\n    },\n    avatar: {\n      height: 42,\n      width: 42,\n      marginRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      customers = _ref.customers,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"customers\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState('all'),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentTab = _useState2[0],\n      setCurrentTab = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCustomers = _useState4[0],\n      setSelectedCustomers = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(10),\n      _useState8 = _slicedToArray(_useState7, 2),\n      limit = _useState8[0],\n      setLimit = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      query = _useState10[0],\n      setQuery = _useState10[1];\n\n  var _useState11 = useState(sortOptions[0].value),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sort = _useState12[0],\n      setSort = _useState12[1];\n\n  var _useState13 = useState({\n    isProspect: null,\n    isReturning: null,\n    acceptsMarketing: null\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      filters = _useState14[0],\n      setFilters = _useState14[1];\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    var updatedFilters = _objectSpread({}, filters, {\n      isProspect: null,\n      isReturning: null,\n      acceptsMarketing: null\n    });\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedCustomers([]);\n    setCurrentTab(value);\n  };\n\n  var handleQueryChange = function handleQueryChange(event) {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  var handleSortChange = function handleSortChange(event) {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  var handleSelectAllCustomers = function handleSelectAllCustomers(event) {\n    setSelectedCustomers(event.target.checked ? customers.map(function (customer) {\n      return customer.id;\n    }) : []);\n  };\n\n  var handleSelectOneCustomer = function handleSelectOneCustomer(event, customerId) {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers(function (prevSelected) {\n        return [].concat(_toConsumableArray(prevSelected), [customerId]);\n      });\n    } else {\n      setSelectedCustomers(function (prevSelected) {\n        return prevSelected.filter(function (id) {\n          return id !== customerId;\n        });\n      });\n    }\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleLimitChange = function handleLimitChange(event) {\n    setLimit(event.target.value);\n  }; // Usually query is done on backend with indexing solutions\n\n\n  var filteredCustomers = applyFilters(customers, query, filters);\n  var sortedCustomers = applySort(filteredCustomers, sort);\n  var paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  var enableBulkOperations = selectedCustomers.length > 0;\n  var selectedSomeCustomers = selectedCustomers.length > 0 && selectedCustomers.length < customers.length;\n  var selectedAllCustomers = selectedCustomers.length === customers.length;\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Tabs, {\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      textColor: \"secondary\",\n      value: currentTab,\n      variant: \"scrollable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }\n    }, tabs.map(function (tab) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Tab, {\n          key: tab.value,\n          value: tab.value,\n          label: tab.label,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }\n        })\n      );\n    })),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      p: 2,\n      minHeight: 56,\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      className: classes.queryField,\n      InputProps: {\n        startAdornment:\n        /*#__PURE__*/\n        React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          color: \"action\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SearchIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 19\n          }\n        })))\n      },\n      onChange: handleQueryChange,\n      placeholder: \"Search customers\",\n      value: query,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      label: \"Sort By\",\n      name: \"sort\",\n      onChange: handleSortChange,\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: sort,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, sortOptions.map(function (option) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }\n        }, option.label)\n      );\n    }))), enableBulkOperations &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.bulkOperations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.bulkActions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Checkbox, {\n      checked: selectedAllCustomers,\n      indeterminate: selectedSomeCustomers,\n      onChange: handleSelectAllCustomers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.bulkAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, \"Delete\"),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.bulkAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, \"Edit\"))),\n    /*#__PURE__*/\n    React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      minWidth: 700,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Checkbox, {\n      checked: selectedAllCustomers,\n      indeterminate: selectedSomeCustomers,\n      onChange: handleSelectAllCustomers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, \"Name\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }, \"Location\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, \"Orders\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }, \"Spent\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }, \"Actions\"))),\n    /*#__PURE__*/\n    React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }, paginatedCustomers.map(function (customer) {\n      var isCustomerSelected = selectedCustomers.includes(customer.id);\n      return (\n        /*#__PURE__*/\n        React.createElement(TableRow, {\n          hover: true,\n          key: customer.id,\n          selected: isCustomerSelected,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Checkbox, {\n          checked: isCustomerSelected,\n          onChange: function onChange(event) {\n            return handleSelectOneCustomer(event, customer.id);\n          },\n          value: isCustomerSelected,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 23\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Avatar, {\n          className: classes.avatar,\n          src: customer.avatar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 25\n          }\n        }, getInitials(customer.name)),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Link, {\n          color: \"inherit\",\n          component: RouterLink,\n          to: \"/app/management/customers/1\",\n          variant: \"h6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 27\n          }\n        }, customer.name),\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 27\n          }\n        }, customer.email)))),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 21\n          }\n        }, customer.location),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 21\n          }\n        }, customer.orders),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 21\n          }\n        }, customer.currency, customer.spent),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          align: \"right\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          component: RouterLink,\n          to: \"/app/management/customers/1/edit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(EditIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 27\n          }\n        }))),\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          component: RouterLink,\n          to: \"/app/management/customers/1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ArrowRightIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 27\n          }\n        })))))\n      );\n    }))))),\n    /*#__PURE__*/\n    React.createElement(TablePagination, {\n      component: \"div\",\n      count: filteredCustomers.length,\n      onChangePage: handlePageChange,\n      onChangeRowsPerPage: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array\n};\nResults.defaultProps = {\n  customers: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerListView/Results.js"],"names":["React","useState","Link","RouterLink","clsx","PropTypes","PerfectScrollbar","Avatar","Box","Button","Card","Checkbox","Divider","IconButton","InputAdornment","SvgIcon","Tab","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Tabs","TextField","Typography","makeStyles","Edit","EditIcon","ArrowRight","ArrowRightIcon","Search","SearchIcon","getInitials","tabs","value","label","sortOptions","applyFilters","customers","query","filters","filter","customer","matches","properties","containsQuery","forEach","property","toLowerCase","includes","Object","keys","key","applyPagination","page","limit","slice","descendingComparator","a","b","orderBy","getComparator","order","applySort","sort","split","comparator","stabilizedThis","map","el","index","useStyles","theme","root","queryField","width","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","default","bulkAction","marginLeft","spacing","avatar","height","marginRight","Results","className","rest","classes","currentTab","setCurrentTab","selectedCustomers","setSelectedCustomers","setPage","setLimit","setQuery","setSort","isProspect","isReturning","acceptsMarketing","setFilters","handleTabsChange","event","updatedFilters","handleQueryChange","persist","target","handleSortChange","handleSelectAllCustomers","checked","id","handleSelectOneCustomer","customerId","prevSelected","handlePageChange","newPage","handleLimitChange","filteredCustomers","sortedCustomers","paginatedCustomers","enableBulkOperations","length","selectedSomeCustomers","selectedAllCustomers","tab","startAdornment","native","option","isCustomerSelected","name","email","location","orders","currency","spent","propTypes","string","array","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n  Link,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst tabs = [\n  {\n    value: 'all',\n    label: 'All'\n  },\n  {\n    value: 'acceptsMarketing',\n    label: 'Accepts Marketing'\n  },\n  {\n    value: 'isProspect',\n    label: 'Prospect'\n  },\n  {\n    value: 'isReturning',\n    label: 'Returning'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'orders|desc',\n    label: 'Total orders (high to low)'\n  },\n  {\n    value: 'orders|asc',\n    label: 'Total orders (low to high)'\n  }\n];\n\nfunction applyFilters(customers, query, filters) {\n  return customers.filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySort(customers, sort) {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    // eslint-disable-next-line no-shadow\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Results({ className, customers, ...rest }) {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    isProspect: null,\n    isReturning: null,\n    acceptsMarketing: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      isProspect: null,\n      isReturning: null,\n      acceptsMarketing: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedCustomers([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  const handleSelectOneCustomer = (event, customerId) => {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n    } else {\n      setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkOperations = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0 && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Tabs\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        textColor=\"secondary\"\n        value={currentTab}\n        variant=\"scrollable\"\n      >\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.value}\n            value={tab.value}\n            label={tab.label}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <Box\n        p={2}\n        minHeight={56}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <TextField\n          className={classes.queryField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SvgIcon\n                  fontSize=\"small\"\n                  color=\"action\"\n                >\n                  <SearchIcon />\n                </SvgIcon>\n              </InputAdornment>\n            )\n          }}\n          onChange={handleQueryChange}\n          placeholder=\"Search customers\"\n          value={query}\n          variant=\"outlined\"\n        />\n        <Box flexGrow={1} />\n        <TextField\n          label=\"Sort By\"\n          name=\"sort\"\n          onChange={handleSortChange}\n          select\n          SelectProps={{ native: true }}\n          value={sort}\n          variant=\"outlined\"\n        >\n          {sortOptions.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllCustomers}\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Orders\n                </TableCell>\n                <TableCell>\n                  Spent\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          src={customer.avatar}\n                        >\n                          {getInitials(customer.name)}\n                        </Avatar>\n                        <div>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to=\"/app/management/customers/1\"\n                            variant=\"h6\"\n                          >\n                            {customer.name}\n                          </Link>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            {customer.email}\n                          </Typography>\n                        </div>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {customer.location}\n                    </TableCell>\n                    <TableCell>\n                      {customer.orders}\n                    </TableCell>\n                    <TableCell>\n                      {customer.currency}\n                      {customer.spent}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/app/management/customers/1/edit\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/app/management/customers/1\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}