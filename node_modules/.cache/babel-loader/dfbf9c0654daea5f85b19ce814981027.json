{"ast":null,"code":"import _toConsumableArray from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import moment from'moment';import{v4 as uuidv4}from'uuid';import mock from'src/utils/mock';import _ from'lodash';var db={contacts:[{id:'5e8891ab188cd2855e6029b7',avatar:'/static/images/avatars/avatar_1.png',isActive:true,lastActivity:moment().toDate().getTime(),name:'Cooper Murray',username:'cooper.murray'},{id:'5e887a62195cc5aef7e8ca5d',avatar:'/static/images/avatars/avatar_2.png',isActive:false,lastActivity:moment().subtract(2,'hours').toDate().getTime(),name:'Ekaterina Tankova',username:'ekaterina.tankova'},{id:'5e887ac47eed253091be10cb',avatar:'/static/images/avatars/avatar_3.png',isActive:false,lastActivity:moment().subtract(15,'minutes').toDate().getTime(),name:'Cao Yu',username:'cao.yu'},{id:'5e887b209c28ac3dd97f6db5',avatar:'/static/images/avatars/avatar_4.png',isActive:true,lastActivity:moment().toDate().getTime(),name:'Alex Richardson',username:'alex.richardson'},{id:'5e887b7602bdbc4dbb234b27',avatar:'/static/images/avatars/avatar_5.png',isActive:true,lastActivity:moment().toDate().getTime(),name:'Anje Keizer',username:'anje.keizer'},{id:'5e86805e2bafd54f66cc95c3',avatar:'/static/images/avatars/avatar_7.png',isActive:false,lastActivity:moment().subtract(2,'days').toDate().getTime(),name:'Adam Denisov',username:'adam.denisov'},{id:'5e887a1fbefd7938eea9c981',avatar:'/static/images/avatars/avatar_8.png',isActive:false,lastActivity:moment().subtract(6,'hours').toDate().getTime(),name:'Miller Edwards',username:'miller.edwards'},{id:'5e887d0b3d090c1b8f162003',avatar:'/static/images/avatars/avatar_9.png',isActive:true,lastActivity:moment().toDate().getTime(),name:'Emilee Simchenko',username:'emilee.simchenko'},{id:'5e88792be2d4cfb4bf0971d9',avatar:'/static/images/avatars/avatar_10.png',isActive:true,lastActivity:moment().toDate().getTime(),name:'Elliott Stone',username:'elliott.stone'},{id:'5e8877da9a65442b11551975',avatar:'/static/images/avatars/avatar_11.png',isActive:true,lastActivity:moment().toDate().getTime(),name:'Shen Zhi',username:'shen.zhi'},{id:'5e8680e60cba5019c5ca6fda',avatar:'/static/images/avatars/avatar_12.png',isActive:true,lastActivity:moment().toDate().getTime(),name:'Merrile Burgett',username:'merrile.burgett'}],threads:[{id:'5e867eb9de721aecaccf4f7b',key:'adam.denisov',type:'ONE_TO_ONE',messages:[{id:'5e867f0a5bc0ff2bfa07bfa6',body:'Hey, nice projects! I really liked the one in react. What\\'s your quote on kinda similar project?',contentType:'text',createdAt:moment().subtract(10,'hours').toDate().getTime(),senderId:'5e86805e2bafd54f66cc95c3'},{id:'5e867f167d5f78109ae9f2a4',body:'I would need to know more details, but my hourly rate stats at $35/hour. Thanks!',contentType:'text',createdAt:moment().subtract(2,'hours').toDate().getTime(),senderId:'5e86809283e28b96d2d38537'},{id:'5e867f1c9ca72084693528f4',body:'Well it\\'s a really easy one, I\\'m sure we can make it half of the price.',contentType:'text',createdAt:moment().subtract(5,'minutes').toDate().getTime(),senderId:'5e86809283e28b96d2d38537'},{id:'5e867f22fd2e27a09849b4db',body:'Then why don\\'t you make it if it\\'s that easy? Sorry I\\'m not interetes, have fantastic day Adam!',contentType:'text',createdAt:moment().subtract(3,'minutes').toDate().getTime(),senderId:'5e86805e2bafd54f66cc95c3'},{id:'5e867f28a34d45ac6eb5c41f',body:'Last offer, $25 per hour',contentType:'text',createdAt:moment().subtract(1,'minute').toDate().getTime(),senderId:'5e86805e2bafd54f66cc95c3'},{id:'5e867f2dba984a3f78b33526',body:'/static/images/projects/project_4.png',contentType:'image',createdAt:moment().subtract(1,'minute').toDate().getTime(),senderId:'5e86805e2bafd54f66cc95c3'}],participantIds:['5e86805e2bafd54f66cc95c3','5e86809283e28b96d2d38537'],unreadCount:2},{id:'5e867fa7082c3c5921403a26',key:'merrile.burgett',type:'ONE_TO_ONE',messages:[{id:'5e867fc180837d901bd9bca1',body:'Hey, would you like to collaborate?',contentType:'text',createdAt:moment().subtract(6,'minutes').toDate().getTime(),senderId:'5e8680e60cba5019c5ca6fda'},{id:'5e8d6fb695df7971237fc173',body:'I don\\'t think that\\'s ideal',contentType:'text',createdAt:moment().subtract(5,'minutes').toDate().getTime(),senderId:'5e86809283e28b96d2d38537'}],participantIds:['5e8680e60cba5019c5ca6fda','5e86809283e28b96d2d38537'],unreadCount:0}]};mock.onGet('/api/chat/contacts').reply(200,{contacts:db.contacts});mock.onGet('/api/chat/threads').reply(200,{threads:db.threads});mock.onGet('/api/chat/thread').reply(function(config){var threadKey=config.params.threadKey;var thread=db.threads.find(function(_thread){return _thread.key===threadKey;});if(!thread){return[200,{thread:null}];}return[200,{thread:thread}];});mock.onGet('/api/chat/thread/mark-as-seen').reply(function(config){var threadKey=config.params.threadKey;var thread=db.threads.find(function(_thread){return _thread.key===threadKey;});if(thread){thread.unreadCount=0;}return[200,true];});mock.onPost('/api/chat/messages/new').reply(function(request){var _JSON$parse=JSON.parse(request.data),userId=_JSON$parse.userId,threadKey=_JSON$parse.threadKey,body=_JSON$parse.body;var message={id:uuidv4(),body:body,contentType:'text',createdAt:moment().toDate().getTime(),senderId:userId};var thread=db.threads.find(function(_thread){return _thread.key===threadKey;});var otherUser=db.contacts.find(function(contact){return contact.username===threadKey;});if(!thread){thread={id:uuidv4(),key:threadKey,type:'ONE_TO_ONE',messages:[message],participantIds:[otherUser.id,userId],unreadCount:0};_.assign(db,{threads:[].concat(_toConsumableArray(db.threads),[thread])});}else{_.assign(thread,{messages:[].concat(_toConsumableArray(thread.messages),[message])});}return[200,{threadKey:threadKey,otherUserId:otherUser.id,message:message}];});","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/mock/chatMock.js"],"names":["moment","v4","uuidv4","mock","_","db","contacts","id","avatar","isActive","lastActivity","toDate","getTime","name","username","subtract","threads","key","type","messages","body","contentType","createdAt","senderId","participantIds","unreadCount","onGet","reply","config","threadKey","params","thread","find","_thread","onPost","request","JSON","parse","data","userId","message","otherUser","contact","assign","otherUserId"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport mock from 'src/utils/mock';\nimport _ from 'lodash';\n\nconst db = {\n  contacts: [\n    {\n      id: '5e8891ab188cd2855e6029b7',\n      avatar: '/static/images/avatars/avatar_1.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Cooper Murray',\n      username: 'cooper.murray'\n    },\n    {\n      id: '5e887a62195cc5aef7e8ca5d',\n      avatar: '/static/images/avatars/avatar_2.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(2, 'hours')\n        .toDate()\n        .getTime(),\n      name: 'Ekaterina Tankova',\n      username: 'ekaterina.tankova'\n    },\n    {\n      id: '5e887ac47eed253091be10cb',\n      avatar: '/static/images/avatars/avatar_3.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(15, 'minutes')\n        .toDate()\n        .getTime(),\n      name: 'Cao Yu',\n      username: 'cao.yu'\n    },\n    {\n      id: '5e887b209c28ac3dd97f6db5',\n      avatar: '/static/images/avatars/avatar_4.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Alex Richardson',\n      username: 'alex.richardson'\n    },\n    {\n      id: '5e887b7602bdbc4dbb234b27',\n      avatar: '/static/images/avatars/avatar_5.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Anje Keizer',\n      username: 'anje.keizer'\n    },\n    {\n      id: '5e86805e2bafd54f66cc95c3',\n      avatar: '/static/images/avatars/avatar_7.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(2, 'days')\n        .toDate()\n        .getTime(),\n      name: 'Adam Denisov',\n      username: 'adam.denisov'\n    },\n    {\n      id: '5e887a1fbefd7938eea9c981',\n      avatar: '/static/images/avatars/avatar_8.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(6, 'hours')\n        .toDate()\n        .getTime(),\n      name: 'Miller Edwards',\n      username: 'miller.edwards'\n    },\n    {\n      id: '5e887d0b3d090c1b8f162003',\n      avatar: '/static/images/avatars/avatar_9.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Emilee Simchenko',\n      username: 'emilee.simchenko',\n    },\n    {\n      id: '5e88792be2d4cfb4bf0971d9',\n      avatar: '/static/images/avatars/avatar_10.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Elliott Stone',\n      username: 'elliott.stone'\n    },\n    {\n      id: '5e8877da9a65442b11551975',\n      avatar: '/static/images/avatars/avatar_11.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Shen Zhi',\n      username: 'shen.zhi'\n    },\n    {\n      id: '5e8680e60cba5019c5ca6fda',\n      avatar: '/static/images/avatars/avatar_12.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Merrile Burgett',\n      username: 'merrile.burgett'\n    }\n  ],\n  threads: [\n    {\n      id: '5e867eb9de721aecaccf4f7b',\n      key: 'adam.denisov',\n      type: 'ONE_TO_ONE',\n      messages: [\n        {\n          id: '5e867f0a5bc0ff2bfa07bfa6',\n          body: 'Hey, nice projects! I really liked the one in react. What\\'s your quote on kinda similar project?',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(10, 'hours')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n        {\n          id: '5e867f167d5f78109ae9f2a4',\n          body: 'I would need to know more details, but my hourly rate stats at $35/hour. Thanks!',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(2, 'hours')\n            .toDate()\n            .getTime(),\n          senderId: '5e86809283e28b96d2d38537'\n        },\n        {\n          id: '5e867f1c9ca72084693528f4',\n          body: 'Well it\\'s a really easy one, I\\'m sure we can make it half of the price.',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(5, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e86809283e28b96d2d38537'\n        },\n        {\n          id: '5e867f22fd2e27a09849b4db',\n          body: 'Then why don\\'t you make it if it\\'s that easy? Sorry I\\'m not interetes, have fantastic day Adam!',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(3, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n        {\n          id: '5e867f28a34d45ac6eb5c41f',\n          body: 'Last offer, $25 per hour',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(1, 'minute')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n        {\n          id: '5e867f2dba984a3f78b33526',\n          body: '/static/images/projects/project_4.png',\n          contentType: 'image',\n          createdAt: moment()\n            .subtract(1, 'minute')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n      ],\n      participantIds: [\n        '5e86805e2bafd54f66cc95c3',\n        '5e86809283e28b96d2d38537'\n      ],\n      unreadCount: 2\n    },\n    {\n      id: '5e867fa7082c3c5921403a26',\n      key: 'merrile.burgett',\n      type: 'ONE_TO_ONE',\n      messages: [\n        {\n          id: '5e867fc180837d901bd9bca1',\n          body: 'Hey, would you like to collaborate?',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(6, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e8680e60cba5019c5ca6fda'\n        },\n        {\n          id: '5e8d6fb695df7971237fc173',\n          body: 'I don\\'t think that\\'s ideal',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(5, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e86809283e28b96d2d38537'\n        }\n      ],\n      participantIds: [\n        '5e8680e60cba5019c5ca6fda',\n        '5e86809283e28b96d2d38537'\n      ],\n      unreadCount: 0\n    }\n  ]\n};\n\nmock.onGet('/api/chat/contacts').reply(200, {\n  contacts: db.contacts\n});\n\nmock.onGet('/api/chat/threads').reply(200, {\n  threads: db.threads\n});\n\nmock.onGet('/api/chat/thread').reply((config) => {\n  const { threadKey } = config.params;\n  const thread = db.threads.find((_thread) => _thread.key === threadKey);\n\n  if (!thread) {\n    return [200, { thread: null }];\n  }\n\n  return [200, { thread }];\n});\n\nmock.onGet('/api/chat/thread/mark-as-seen').reply((config) => {\n  const { threadKey } = config.params;\n  const thread = db.threads.find((_thread) => _thread.key === threadKey);\n\n  if (thread) {\n    thread.unreadCount = 0;\n  }\n\n  return [200, true];\n});\n\nmock.onPost('/api/chat/messages/new').reply((request) => {\n  const { userId, threadKey, body } = JSON.parse(request.data);\n  const message = {\n    id: uuidv4(),\n    body,\n    contentType: 'text',\n    createdAt: moment()\n      .toDate()\n      .getTime(),\n    senderId: userId\n  };\n\n  let thread = db.threads.find((_thread) => _thread.key === threadKey);\n  const otherUser = db.contacts.find((contact) => contact.username === threadKey);\n\n  if (!thread) {\n    thread = {\n      id: uuidv4(),\n      key: threadKey,\n      type: 'ONE_TO_ONE',\n      messages: [message],\n      participantIds: [\n        otherUser.id,\n        userId\n      ],\n      unreadCount: 0\n    };\n\n    _.assign(db, {\n      threads: [...db.threads, thread]\n    });\n  } else {\n    _.assign(thread, {\n      messages: [...thread.messages, message]\n    });\n  }\n\n  return [200, {\n    threadKey,\n    otherUserId: otherUser.id,\n    message\n  }];\n});\n"]},"metadata":{},"sourceType":"module"}