{"ast":null,"code":"import _slicedToArray from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useCallback,useState,useEffect}from'react';import clsx from'clsx';import{Grid,makeStyles}from'@material-ui/core';import axios from'src/utils/axios';import useIsMountedRef from'src/hooks/useIsMountedRef';import ProjectCard from'src/components/ProjectCard';var useStyles=makeStyles(function(){return{root:{}};});function Projects(_ref){var className=_ref.className,rest=_objectWithoutProperties(_ref,[\"className\"]);var classes=useStyles();var isMountedRef=useIsMountedRef();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),projects=_useState2[0],setProjects=_useState2[1];var getProjects=useCallback(function(){if(isMountedRef.current){axios.get('/api/social/users/1/projects').then(function(response){return setProjects(response.data.projects);});}},[isMountedRef]);useEffect(function(){getProjects();},[getProjects]);if(!projects){return null;}return(/*#__PURE__*/React.createElement(\"div\",Object.assign({className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},projects.map(function(project){return(/*#__PURE__*/React.createElement(Grid,{item:true,key:project.id,lg:4,lx:4,md:6,xs:12},/*#__PURE__*/React.createElement(ProjectCard,{project:project})));}))));}export default Projects;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/social/ProfileView/Projects/index.js"],"names":["React","useCallback","useState","useEffect","clsx","Grid","makeStyles","axios","useIsMountedRef","ProjectCard","useStyles","root","Projects","className","rest","classes","isMountedRef","projects","setProjects","getProjects","current","get","then","response","data","map","project","id"],"mappings":"4UAAA,MAAOA,CAAAA,KAAP,EACEC,WADF,CAEEC,QAFF,CAGEC,SAHF,KAIO,OAJP,CAMA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,mBAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,iBAAO,CAClCK,IAAI,CAAE,EAD4B,CAAP,EAAD,CAA5B,CAIA,QAASC,CAAAA,QAAT,MAA0C,IAAtBC,CAAAA,SAAsB,MAAtBA,SAAsB,CAARC,IAAQ,8CACxC,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CACA,GAAMM,CAAAA,YAAY,CAAGR,eAAe,EAApC,CAFwC,cAGRN,QAAQ,CAAC,IAAD,CAHA,wCAGjCe,QAHiC,eAGvBC,WAHuB,eAKxC,GAAMC,CAAAA,WAAW,CAAGlB,WAAW,CAAC,UAAM,CACpC,GAAIe,YAAY,CAACI,OAAjB,CAA0B,CACxBb,KAAK,CACFc,GADH,CACO,8BADP,EAEGC,IAFH,CAEQ,SAACC,QAAD,QAAcL,CAAAA,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcP,QAAf,CAAzB,EAFR,EAGD,CACF,CAN8B,CAM5B,CAACD,YAAD,CAN4B,CAA/B,CAQAb,SAAS,CAAC,UAAM,CACdgB,WAAW,GACZ,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,GAAI,CAACF,QAAL,CAAe,CACb,MAAO,KAAP,CACD,CAED,oBACE,yCACE,SAAS,CAAEb,IAAI,CAACW,OAAO,CAACJ,IAAT,CAAeE,SAAf,CADjB,EAEMC,IAFN,eAIE,oBAAC,IAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAE,CAFX,EAIGG,QAAQ,CAACQ,GAAT,CAAa,SAACC,OAAD,sBACZ,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,GAAG,CAAEA,OAAO,CAACC,EAFf,CAGE,EAAE,CAAE,CAHN,CAIE,EAAE,CAAE,CAJN,CAKE,EAAE,CAAE,CALN,CAME,EAAE,CAAE,EANN,eAQE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EARF,CADY,GAAb,CAJH,CAJF,CADF,EAwBD,CAMD,cAAed,CAAAA,QAAf","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Projects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    if (isMountedRef.current) {\n      axios\n        .get('/api/social/users/1/projects')\n        .then((response) => setProjects(response.data.projects));\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            lg={4}\n            lx={4}\n            md={6}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}