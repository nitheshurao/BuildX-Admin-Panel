{"ast":null,"code":"import _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/social/ProfileView/Reviews/OverallReviews.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Card, CardContent, Grid, Typography, makeStyles } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    rating: {\n      marginLeft: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold\n    }\n  };\n});\n\nfunction OverallReviews(_ref) {\n  var ratings = _ref.ratings,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"ratings\", \"className\"]);\n\n  var classes = useStyles();\n  var rating = 0;\n\n  if (ratings.length > 0) {\n    rating = ratings.reduce(function (prev, current) {\n      return prev + current;\n    }, 0) / ratings.length;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      alignItems: \"center\",\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Overall Reviews\")),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Rating, {\n      value: rating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      className: classes.rating,\n      variant: \"h6\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, rating))),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      className: classes.total,\n      color: \"textSecondary\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, ratings.length, ' ', \"reviews in total\")))))\n  );\n}\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  ratings: PropTypes.array.isRequired\n};\nexport default OverallReviews;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/social/ProfileView/Reviews/OverallReviews.js"],"names":["React","PropTypes","clsx","Box","Card","CardContent","Grid","Typography","makeStyles","Rating","useStyles","theme","root","rating","marginLeft","spacing","fontWeight","typography","fontWeightBold","OverallReviews","ratings","className","rest","classes","length","reduce","prev","current","total","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(2),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction OverallReviews({ ratings, className, ...rest }) {\n  const classes = useStyles();\n  let rating = 0;\n\n  if (ratings.length > 0) {\n    rating = ratings.reduce((prev, current) => prev + current, 0) / ratings.length;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Overall Reviews\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <Rating value={rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                {rating}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Typography\n              className={classes.total}\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {ratings.length}\n              {' '}\n              reviews in total\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  ratings: PropTypes.array.isRequired\n};\n\nexport default OverallReviews;\n"]},"metadata":{},"sourceType":"module"}