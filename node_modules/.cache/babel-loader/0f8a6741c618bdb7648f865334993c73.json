{"ast":null,"code":"import _regeneratorRuntime from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import*as Yup from'yup';import{Formik}from'formik';import{Box,Button,Card,CardContent,CardHeader,Checkbox,CircularProgress,Divider,FormHelperText,Grid,Link,TextField,Typography}from'@material-ui/core';import{Alert}from'@material-ui/lab';import wait from'src/utils/wait';function BasicForm(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isAlertVisible=_useState2[0],setAlertVisible=_useState2[1];return(/*#__PURE__*/React.createElement(Formik,{initialValues:{email:'johnnydoe@yahoo.com',firstName:'John',lastName:'Doe',password:'thisisasecuredpassword',policy:false},validationSchema:Yup.object().shape({email:Yup.string().email().required('Required'),firstName:Yup.string().required('Required'),lastName:Yup.string().required('Required'),password:Yup.string().min(7,'Must be at least 7 characters').max(255).required('Required'),policy:Yup.boolean().oneOf([true],'This field must be checked')}),onSubmit:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var resetForm,setErrors,setStatus,setSubmitting;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:resetForm=_ref.resetForm,setErrors=_ref.setErrors,setStatus=_ref.setStatus,setSubmitting=_ref.setSubmitting;_context.prev=1;_context.next=4;return wait(1000);case 4:resetForm();setStatus({success:true});setSubmitting(false);_context.next=14;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);setStatus({success:false});setErrors({submit:_context.t0.message});setSubmitting(false);case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}()},function(_ref3){var errors=_ref3.errors,handleBlur=_ref3.handleBlur,handleChange=_ref3.handleChange,handleSubmit=_ref3.handleSubmit,isSubmitting=_ref3.isSubmitting,touched=_ref3.touched,values=_ref3.values;return(/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{title:\"Basic Form\"}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CardContent,null,isAlertVisible&&/*#__PURE__*/React.createElement(Box,{mb:3},/*#__PURE__*/React.createElement(Alert,{onClose:function onClose(){return setAlertVisible(false);},severity:\"info\"},\"This is an info alert - check it out!\")),isSubmitting?/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"center\",my:5},/*#__PURE__*/React.createElement(CircularProgress,null)):/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.firstName&&errors.firstName),fullWidth:true,helperText:touched.firstName&&errors.firstName,label:\"First Name\",name:\"firstName\",onBlur:handleBlur,onChange:handleChange,value:values.firstName,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.lastName&&errors.lastName),fullWidth:true,helperText:touched.lastName&&errors.lastName,label:\"Last Name\",name:\"lastName\",onBlur:handleBlur,onChange:handleChange,value:values.lastName,variant:\"outlined\"}))),/*#__PURE__*/React.createElement(Box,{mt:2},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.email&&errors.email),fullWidth:true,helperText:touched.email&&errors.email,label:\"Email Address\",name:\"email\",onBlur:handleBlur,onChange:handleChange,type:\"email\",value:values.email,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Box,{mt:2},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.password&&errors.password),fullWidth:true,helperText:touched.password&&errors.password,label:\"Password\",name:\"password\",onBlur:handleBlur,onChange:handleChange,type:\"password\",value:values.password,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Box,{alignItems:\"center\",display:\"flex\",mt:2,ml:-1},/*#__PURE__*/React.createElement(Checkbox,{checked:values.policy,name:\"policy\",onChange:handleChange}),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\"},\"I have read the\",' ',/*#__PURE__*/React.createElement(Link,{component:\"a\",href:\"#\",color:\"secondary\"},\"Terms and Conditions\"))),Boolean(touched.policy&&errors.policy)&&/*#__PURE__*/React.createElement(FormHelperText,{error:true},errors.policy),/*#__PURE__*/React.createElement(Box,{mt:2},/*#__PURE__*/React.createElement(Button,{color:\"secondary\",disabled:isSubmitting,fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\"},\"Sign up\"))))));}));}export default BasicForm;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/extra/forms/FormikView/BasicForm.js"],"names":["React","useState","Yup","Formik","Box","Button","Card","CardContent","CardHeader","Checkbox","CircularProgress","Divider","FormHelperText","Grid","Link","TextField","Typography","Alert","wait","BasicForm","isAlertVisible","setAlertVisible","email","firstName","lastName","password","policy","object","shape","string","required","min","max","boolean","oneOf","values","resetForm","setErrors","setStatus","setSubmitting","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"idAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OACEC,GADF,CAEEC,MAFF,CAGEC,IAHF,CAIEC,WAJF,CAKEC,UALF,CAMEC,QANF,CAOEC,gBAPF,CAQEC,OARF,CASEC,cATF,CAUEC,IAVF,CAWEC,IAXF,CAYEC,SAZF,CAaEC,UAbF,KAcO,mBAdP,CAeA,OAASC,KAAT,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CAEA,QAASC,CAAAA,SAAT,EAAqB,eACuBlB,QAAQ,CAAC,IAAD,CAD/B,wCACZmB,cADY,eACIC,eADJ,eAGnB,oBACE,oBAAC,MAAD,EACE,aAAa,CAAE,CACbC,KAAK,CAAE,qBADM,CAEbC,SAAS,CAAE,MAFE,CAGbC,QAAQ,CAAE,KAHG,CAIbC,QAAQ,CAAE,wBAJG,CAKbC,MAAM,CAAE,KALK,CADjB,CAQE,gBAAgB,CAAExB,GAAG,CAACyB,MAAJ,GAAaC,KAAb,CAAmB,CACnCN,KAAK,CAAEpB,GAAG,CAAC2B,MAAJ,GAAaP,KAAb,GAAqBQ,QAArB,CAA8B,UAA9B,CAD4B,CAEnCP,SAAS,CAAErB,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAFwB,CAGnCN,QAAQ,CAAEtB,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAHyB,CAInCL,QAAQ,CAAEvB,GAAG,CAAC2B,MAAJ,GAAaE,GAAb,CAAiB,CAAjB,CAAoB,+BAApB,EAAqDC,GAArD,CAAyD,GAAzD,EAA8DF,QAA9D,CAAuE,UAAvE,CAJyB,CAKnCJ,MAAM,CAAExB,GAAG,CAAC+B,OAAJ,GAAcC,KAAd,CAAoB,CAAC,IAAD,CAApB,CAA4B,4BAA5B,CAL2B,CAAnB,CARpB,CAeE,QAAQ,2FAAE,iBAAOC,MAAP,uKACRC,SADQ,MACRA,SADQ,CAERC,SAFQ,MAERA,SAFQ,CAGRC,SAHQ,MAGRA,SAHQ,CAIRC,aAJQ,MAIRA,aAJQ,uCAQArB,CAAAA,IAAI,CAAC,IAAD,CARJ,QASNkB,SAAS,GACTE,SAAS,CAAC,CAAEE,OAAO,CAAE,IAAX,CAAD,CAAT,CACAD,aAAa,CAAC,KAAD,CAAb,CAXM,+EAaND,SAAS,CAAC,CAAEE,OAAO,CAAE,KAAX,CAAD,CAAT,CACAH,SAAS,CAAC,CAAEI,MAAM,CAAE,YAAMC,OAAhB,CAAD,CAAT,CACAH,aAAa,CAAC,KAAD,CAAb,CAfM,oEAAF,mEAfV,EAkCG,mBACCI,CAAAA,MADD,OACCA,MADD,CAECC,UAFD,OAECA,UAFD,CAGCC,YAHD,OAGCA,YAHD,CAICC,YAJD,OAICA,YAJD,CAKCC,YALD,OAKCA,YALD,CAMCC,OAND,OAMCA,OAND,CAOCb,MAPD,OAOCA,MAPD,qBASC,oBAAC,IAAD,mBACE,oBAAC,UAAD,EAAY,KAAK,CAAC,YAAlB,EADF,cAEE,oBAAC,OAAD,MAFF,cAGE,oBAAC,WAAD,MACGf,cAAc,eACb,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,KAAD,EACE,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,KAAD,CAArB,EADX,CAEE,QAAQ,CAAC,MAFX,0CADF,CAFJ,CAWG0B,YAAY,cACX,oBAAC,GAAD,EACE,OAAO,CAAC,MADV,CAEE,cAAc,CAAC,QAFjB,CAGE,EAAE,CAAE,CAHN,eAKE,oBAAC,gBAAD,MALF,CADW,cASX,4BAAM,QAAQ,CAAED,YAAhB,eACE,oBAAC,IAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAE,CAFX,eAIE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,KAAK,CAAEG,OAAO,CAACD,OAAO,CAACzB,SAAR,EAAqBoB,MAAM,CAACpB,SAA7B,CADhB,CAEE,SAAS,KAFX,CAGE,UAAU,CAAEyB,OAAO,CAACzB,SAAR,EAAqBoB,MAAM,CAACpB,SAH1C,CAIE,KAAK,CAAC,YAJR,CAKE,IAAI,CAAC,WALP,CAME,MAAM,CAAEqB,UANV,CAOE,QAAQ,CAAEC,YAPZ,CAQE,KAAK,CAAEV,MAAM,CAACZ,SARhB,CASE,OAAO,CAAC,UATV,EALF,CAJF,cAqBE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,KAAK,CAAE0B,OAAO,CAACD,OAAO,CAACxB,QAAR,EAAoBmB,MAAM,CAACnB,QAA5B,CADhB,CAEE,SAAS,KAFX,CAGE,UAAU,CAAEwB,OAAO,CAACxB,QAAR,EAAoBmB,MAAM,CAACnB,QAHzC,CAIE,KAAK,CAAC,WAJR,CAKE,IAAI,CAAC,UALP,CAME,MAAM,CAAEoB,UANV,CAOE,QAAQ,CAAEC,YAPZ,CAQE,KAAK,CAAEV,MAAM,CAACX,QARhB,CASE,OAAO,CAAC,UATV,EALF,CArBF,CADF,cAwCE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,SAAD,EACE,KAAK,CAAEyB,OAAO,CAACD,OAAO,CAAC1B,KAAR,EAAiBqB,MAAM,CAACrB,KAAzB,CADhB,CAEE,SAAS,KAFX,CAGE,UAAU,CAAE0B,OAAO,CAAC1B,KAAR,EAAiBqB,MAAM,CAACrB,KAHtC,CAIE,KAAK,CAAC,eAJR,CAKE,IAAI,CAAC,OALP,CAME,MAAM,CAAEsB,UANV,CAOE,QAAQ,CAAEC,YAPZ,CAQE,IAAI,CAAC,OARP,CASE,KAAK,CAAEV,MAAM,CAACb,KAThB,CAUE,OAAO,CAAC,UAVV,EADF,CAxCF,cAsDE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,SAAD,EACE,KAAK,CAAE2B,OAAO,CAACD,OAAO,CAACvB,QAAR,EAAoBkB,MAAM,CAAClB,QAA5B,CADhB,CAEE,SAAS,KAFX,CAGE,UAAU,CAAEuB,OAAO,CAACvB,QAAR,EAAoBkB,MAAM,CAAClB,QAHzC,CAIE,KAAK,CAAC,UAJR,CAKE,IAAI,CAAC,UALP,CAME,MAAM,CAAEmB,UANV,CAOE,QAAQ,CAAEC,YAPZ,CAQE,IAAI,CAAC,UARP,CASE,KAAK,CAAEV,MAAM,CAACV,QAThB,CAUE,OAAO,CAAC,UAVV,EADF,CAtDF,cAoEE,oBAAC,GAAD,EACE,UAAU,CAAC,QADb,CAEE,OAAO,CAAC,MAFV,CAGE,EAAE,CAAE,CAHN,CAIE,EAAE,CAAE,CAAC,CAJP,eAME,oBAAC,QAAD,EACE,OAAO,CAAEU,MAAM,CAACT,MADlB,CAEE,IAAI,CAAC,QAFP,CAGE,QAAQ,CAAEmB,YAHZ,EANF,cAWE,oBAAC,UAAD,EACE,OAAO,CAAC,OADV,CAEE,KAAK,CAAC,eAFR,oBAKG,GALH,cAME,oBAAC,IAAD,EACE,SAAS,CAAC,GADZ,CAEE,IAAI,CAAC,GAFP,CAGE,KAAK,CAAC,WAHR,yBANF,CAXF,CApEF,CA8FGI,OAAO,CAACD,OAAO,CAACtB,MAAR,EAAkBiB,MAAM,CAACjB,MAA1B,CAAP,eACD,oBAAC,cAAD,EAAgB,KAAK,KAArB,EACGiB,MAAM,CAACjB,MADV,CA/FF,cAmGE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,MAAD,EACE,KAAK,CAAC,WADR,CAEE,QAAQ,CAAEqB,YAFZ,CAGE,SAAS,KAHX,CAIE,IAAI,CAAC,OAJP,CAKE,IAAI,CAAC,QALP,CAME,OAAO,CAAC,WANV,YADF,CAnGF,CApBJ,CAHF,CATD,GAlCH,CADF,EAyLD,CAED,cAAe5B,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nfunction BasicForm() {\n  const [isAlertVisible, setAlertVisible] = useState(true);\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'johnnydoe@yahoo.com',\n        firstName: 'John',\n        lastName: 'Doe',\n        password: 'thisisasecuredpassword',\n        policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required('Required'),\n        firstName: Yup.string().required('Required'),\n        lastName: Yup.string().required('Required'),\n        password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(1000);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <Card>\n          <CardHeader title=\"Basic Form\" />\n          <Divider />\n          <CardContent>\n            {isAlertVisible && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setAlertVisible(false)}\n                  severity=\"info\"\n                >\n                  This is an info alert - check it out!\n                </Alert>\n              </Box>\n            )}\n            {isSubmitting ? (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                my={5}\n              >\n                <CircularProgress />\n              </Box>\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      fullWidth\n                      helperText={touched.firstName && errors.firstName}\n                      label=\"First Name\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.firstName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      fullWidth\n                      helperText={touched.lastName && errors.lastName}\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.lastName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  mt={2}\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      component=\"a\"\n                      href=\"#\"\n                      color=\"secondary\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                <FormHelperText error>\n                  {errors.policy}\n                </FormHelperText>\n                )}\n                <Box mt={2}>\n                  <Button\n                    color=\"secondary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Formik>\n  );\n}\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}