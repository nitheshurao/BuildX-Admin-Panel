{"ast":null,"code":"import _defineProperty from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/projects/OverviewView/Todos.js\";\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Button, Card, CardHeader, Divider, IconButton, List, ListItem, ListItemIcon, ListItemText, Radio, Tooltip, Typography, makeStyles } from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\n\nvar getLabel = function getLabel(todo) {\n  if (todo.done) {\n    return null;\n  }\n\n  if (moment(todo.deadline).isBefore(moment(), 'day')) {\n    return (\n      /*#__PURE__*/\n      React.createElement(Label, {\n        color: \"error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, \"Due \".concat(moment(todo.deadline).fromNow()))\n    );\n  }\n\n  if (moment(todo.deadline).isSame(moment(), 'day')) {\n    return (\n      /*#__PURE__*/\n      React.createElement(Label, {\n        color: \"warning\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, \"Due today\")\n    );\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, \"Due \".concat(moment(todo.deadline).fromNow()))\n  );\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    done: {\n      textDecoration: 'line-through',\n      color: theme.palette.text.secondary\n    }\n  };\n});\n\nfunction Todos(_ref) {\n  var _this2 = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var handleChange = function handleChange(event, todo) {\n    event.persist();\n    setTodos(function (prevTodos) {\n      return prevTodos.map(function (prevTodo) {\n        if (prevTodo.id === todo.id) {\n          return _objectSpread({}, todo, {\n            done: !todo.done\n          });\n        }\n\n        return prevTodo;\n      });\n    });\n  };\n\n  var getTodos = useCallback(function () {\n    axios.get('/api/projects/account/todos').then(function (response) {\n      if (isMountedRef.current) {\n        setTodos(response.data.todos);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getTodos();\n  }, [getTodos]);\n\n  if (!todos) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      action:\n      /*#__PURE__*/\n      React.createElement(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, \"Add Todo\"),\n      title: \"Todos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, todos.map(function (todo, i) {\n      return (\n        /*#__PURE__*/\n        React.createElement(ListItem, {\n          divider: i < todos.length - 1,\n          key: todo.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ListItemIcon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Radio, {\n          checked: todo.done,\n          onClick: function onClick(event) {\n            return handleChange(event, todo);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(ListItemText, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          className: clsx(_defineProperty({}, classes.done, todo.done)),\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }\n        }, todo.title)), getLabel(todo),\n        /*#__PURE__*/\n        React.createElement(Tooltip, {\n          title: \"Archive\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ArchiveIcon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }\n        }))))\n      );\n    })))\n  );\n}\n\nTodos.propTypes = {\n  className: PropTypes.string\n};\nexport default Todos;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/projects/OverviewView/Todos.js"],"names":["React","useCallback","useState","useEffect","PropTypes","clsx","moment","Button","Card","CardHeader","Divider","IconButton","List","ListItem","ListItemIcon","ListItemText","Radio","Tooltip","Typography","makeStyles","ArchiveIcon","axios","useIsMountedRef","Label","getLabel","todo","done","deadline","isBefore","fromNow","isSame","useStyles","theme","root","textDecoration","color","palette","text","secondary","Todos","className","rest","classes","isMountedRef","todos","setTodos","handleChange","event","persist","prevTodos","map","prevTodo","id","getTodos","get","then","response","current","data","i","length","title","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Radio,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\n\nconst getLabel = (todo) => {\n  if (todo.done) {\n    return null;\n  }\n\n  if (moment(todo.deadline).isBefore(moment(), 'day')) {\n    return (\n      <Label color=\"error\">\n        {`Due ${moment(todo.deadline).fromNow()}`}\n      </Label>\n    );\n  }\n\n  if (moment(todo.deadline).isSame(moment(), 'day')) {\n    return (\n      <Label color=\"warning\">\n        Due today\n      </Label>\n    );\n  }\n\n  return (\n    <Label>\n      {`Due ${moment(todo.deadline).fromNow()}`}\n    </Label>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  done: {\n    textDecoration: 'line-through',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Todos({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [todos, setTodos] = useState();\n\n  const handleChange = (event, todo) => {\n    event.persist();\n\n    setTodos((prevTodos) => prevTodos.map((prevTodo) => {\n      if (prevTodo.id === todo.id) {\n        return {\n          ...todo,\n          done: !todo.done\n        };\n      }\n\n      return prevTodo;\n    }));\n  };\n\n  const getTodos = useCallback(() => {\n    axios\n      .get('/api/projects/account/todos')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setTodos(response.data.todos);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getTodos();\n  }, [getTodos]);\n\n  if (!todos) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Button\n            color=\"secondary\"\n            size=\"small\"\n          >\n            Add Todo\n          </Button>\n        )}\n        title=\"Todos\"\n      />\n      <Divider />\n      <List>\n        {todos.map((todo, i) => (\n          <ListItem\n            divider={i < todos.length - 1}\n            key={todo.id}\n          >\n            <ListItemIcon>\n              <Radio\n                checked={todo.done}\n                onClick={(event) => handleChange(event, todo)}\n              />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography\n                className={clsx({\n                  [classes.done]: todo.done\n                })}\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {todo.title}\n              </Typography>\n            </ListItemText>\n            {getLabel(todo)}\n            <Tooltip title=\"Archive\">\n              <IconButton>\n                <ArchiveIcon />\n              </IconButton>\n            </Tooltip>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nTodos.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}