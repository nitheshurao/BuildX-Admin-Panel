{"ast":null,"code":"import _defineProperty from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/chat/ChatView/Sidebar/ThreadList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getThreads } from 'src/actions/chatActions';\nimport { Avatar, Box, ClickAwayListener, Input, SvgIcon, List, ListItem, ListItemText, ListItemAvatar, Typography, makeStyles } from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport ThreadItem from './ThreadItem';\n\nfunction filterContacts(contacts, searchText) {\n  if (!searchText) {\n    return contacts.allIds;\n  }\n\n  return contacts.allIds.filter(function (contactId) {\n    return contacts.byId[contactId].name.toLowerCase().includes(searchText.toLowerCase());\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    searchContainer: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n    search: {\n      display: 'flex',\n      alignItems: 'center',\n      height: 44,\n      borderRadius: 22,\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      backgroundColor: theme.palette.background.dark\n    },\n    searchInput: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(1)\n    },\n    contactAvatar: {\n      height: 32,\n      width: 32\n    },\n    threadList: {},\n    hideThreadList: {\n      display: 'none'\n    }\n  };\n});\n\nfunction ThreadList(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var location = useLocation();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.chat;\n  }),\n      threads = _useSelector.threads,\n      contacts = _useSelector.contacts;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displaySearchResults = _useState4[0],\n      setDisplaySearchResults = _useState4[1];\n\n  var handleSearchFocus = function handleSearchFocus(event) {\n    event.persist();\n    setDisplaySearchResults(true);\n  };\n\n  var handleSearchChange = function handleSearchChange(event) {\n    event.persist();\n    setSearchText(event.target.value);\n  };\n\n  var handleSearchClickAway = function handleSearchClickAway() {\n    if (displaySearchResults) {\n      setSearchText('');\n      setDisplaySearchResults(false);\n    }\n  };\n\n  useEffect(function () {\n    dispatch(getThreads());\n  }, [dispatch]);\n  useEffect(function () {\n    if (displaySearchResults) {\n      setDisplaySearchResults(false);\n    } // eslint-disable-next-line\n\n  }, [location.pathname]);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(ClickAwayListener, {\n      onClickAway: handleSearchClickAway,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.searchContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      color: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Input, {\n      className: classes.searchInput,\n      disableUnderline: true,\n      onChange: handleSearchChange,\n      onFocus: handleSearchFocus,\n      placeholder: \"Search contacts\",\n      value: searchText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })), displaySearchResults &&\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Contacts\"),\n    /*#__PURE__*/\n    React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, filterContacts(contacts, searchText).map(function (contactId) {\n      var contact = contacts.byId[contactId];\n      return (\n        /*#__PURE__*/\n        React.createElement(ListItem, {\n          button: true,\n          component: RouterLink,\n          key: contact.id,\n          to: \"/app/chat/\".concat(contact.username),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ListItemAvatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Avatar, {\n          src: contact.avatar,\n          className: classes.contactAvatar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 23\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(ListItemText, {\n          primary: contact.name,\n          primaryTypographyProps: {\n            noWrap: true,\n            variant: 'h6',\n            color: 'textPrimary'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }\n        }))\n      );\n    }))))),\n    /*#__PURE__*/\n    React.createElement(List, {\n      className: clsx(classes.threadList, _defineProperty({}, classes.hideThreadList, displaySearchResults)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, threads.allKeys.map(function (threadKey) {\n      return (\n        /*#__PURE__*/\n        React.createElement(ThreadItem, {\n          key: threadKey,\n          thread: threads.byKey[threadKey],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }\n        })\n      );\n    })))\n  );\n}\n\nThreadList.propTypes = {\n  className: PropTypes.string\n};\nexport default ThreadList;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/chat/ChatView/Sidebar/ThreadList/index.js"],"names":["React","useState","useEffect","Link","RouterLink","useLocation","clsx","PropTypes","useDispatch","useSelector","getThreads","Avatar","Box","ClickAwayListener","Input","SvgIcon","List","ListItem","ListItemText","ListItemAvatar","Typography","makeStyles","Search","SearchIcon","ThreadItem","filterContacts","contacts","searchText","allIds","filter","contactId","byId","name","toLowerCase","includes","useStyles","theme","root","searchContainer","paddingLeft","spacing","paddingRight","search","display","alignItems","height","borderRadius","backgroundColor","palette","background","dark","searchInput","flexGrow","marginLeft","contactAvatar","width","threadList","hideThreadList","ThreadList","className","rest","classes","location","dispatch","state","chat","threads","setSearchText","displaySearchResults","setDisplaySearchResults","handleSearchFocus","event","persist","handleSearchChange","target","value","handleSearchClickAway","pathname","map","contact","id","username","avatar","noWrap","variant","color","allKeys","threadKey","byKey","propTypes","string"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,QAGO,OAHP;AAIA,SACEC,IAAI,IAAIC,UADV,EAEEC,WAFF,QAGO,kBAHP;AAIA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,WADF,EAEEC,WAFF,QAGO,aAHP;AAIA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,iBAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,QAPF,EAQEC,YARF,EASEC,cATF,EAUEC,UAVF,EAWEC,UAXF,QAYO,mBAZP;AAaA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,eAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAC5C,MAAI,CAACA,UAAL,EAAiB;AACf,WAAOD,QAAQ,CAACE,MAAhB;AACD;;AAED,SAAOF,QAAQ,CAACE,MAAT,CAAgBC,MAAhB,CACL,UAACC,SAAD;AAAA,WAAeJ,QAAQ,CAACK,IAAT,CAAcD,SAAd,EAAyBE,IAAzB,CAA8BC,WAA9B,GAA4CC,QAA5C,CAAqDP,UAAU,CAACM,WAAX,EAArD,CAAf;AAAA,GADK,CAAP;AAGD;;AAED,IAAME,SAAS,GAAGd,UAAU,CAAC,UAACe,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,eAAe,EAAE;AACfC,MAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADE;AAEfC,MAAAA,YAAY,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd;AAFC,KAFsB;AAMvCE,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,UAAU,EAAE,QAFN;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,YAAY,EAAE,EAJR;AAKNP,MAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CALP;AAMNC,MAAAA,YAAY,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,CANR;AAONO,MAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,CAAcC,UAAd,CAAyBC;AAPpC,KAN+B;AAevCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,QAAQ,EAAE,CADC;AAEXC,MAAAA,UAAU,EAAEjB,KAAK,CAACI,OAAN,CAAc,CAAd;AAFD,KAf0B;AAmBvCc,IAAAA,aAAa,EAAE;AACbT,MAAAA,MAAM,EAAE,EADK;AAEbU,MAAAA,KAAK,EAAE;AAFM,KAnBwB;AAuBvCC,IAAAA,UAAU,EAAE,EAvB2B;AAwBvCC,IAAAA,cAAc,EAAE;AACdd,MAAAA,OAAO,EAAE;AADK;AAxBuB,GAAZ;AAAA,CAAD,CAA5B;;AA6BA,SAASe,UAAT,OAA4C;AAAA;;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAARC,IAAQ;;AAC1C,MAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,MAAM2B,QAAQ,GAAGzD,WAAW,EAA5B;AACA,MAAM0D,QAAQ,GAAGvD,WAAW,EAA5B;;AAH0C,qBAIZC,WAAW,CAAC,UAACuD,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAJC;AAAA,MAIlCC,OAJkC,gBAIlCA,OAJkC;AAAA,MAIzBxC,QAJyB,gBAIzBA,QAJyB;;AAAA,kBAKNzB,QAAQ,CAAC,EAAD,CALF;AAAA;AAAA,MAKnC0B,UALmC;AAAA,MAKvBwC,aALuB;;AAAA,mBAMclE,QAAQ,CAAC,KAAD,CANtB;AAAA;AAAA,MAMnCmE,oBANmC;AAAA,MAMbC,uBANa;;AAQ1C,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnCA,IAAAA,KAAK,CAACC,OAAN;AACAH,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,GAHD;;AAKA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,KAAD,EAAW;AACpCA,IAAAA,KAAK,CAACC,OAAN;AACAL,IAAAA,aAAa,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAb;AACD,GAHD;;AAKA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAIR,oBAAJ,EAA0B;AACxBD,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD;AACF,GALD;;AAOAnE,EAAAA,SAAS,CAAC,YAAM;AACd6D,IAAAA,QAAQ,CAACrD,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACqD,QAAD,CAFM,CAAT;AAIA7D,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkE,oBAAJ,EAA0B;AACxBC,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD,KAHa,CAId;;AACD,GALQ,EAKN,CAACP,QAAQ,CAACe,QAAV,CALM,CAAT;AAOA;AAAA;AACE;AACE,MAAA,SAAS,EAAEvE,IAAI,CAACuD,OAAO,CAACxB,IAAT,EAAesB,SAAf;AADjB,OAEMC,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,wBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAEgB,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACvB,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAK,MAAA,SAAS,EAAEuB,OAAO,CAACnB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,OAAD;AACE,MAAA,QAAQ,EAAC,OADX;AAEE,MAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,wBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAAA;AAOE,wBAAC,KAAD;AACE,MAAA,SAAS,EAAEmB,OAAO,CAACV,WADrB;AAEE,MAAA,gBAAgB,MAFlB;AAGE,MAAA,QAAQ,EAAEsB,kBAHZ;AAIE,MAAA,OAAO,EAAEH,iBAJX;AAKE,MAAA,WAAW,EAAC,iBALd;AAME,MAAA,KAAK,EAAE3C,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,EAiBGyC,oBAAoB;AAAA;AACrB,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAC,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAOE,wBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG3C,cAAc,CAACC,QAAD,EAAWC,UAAX,CAAd,CAAqCmD,GAArC,CAAyC,UAAChD,SAAD,EAAe;AACvD,UAAMiD,OAAO,GAAGrD,QAAQ,CAACK,IAAT,CAAcD,SAAd,CAAhB;AAEA;AAAA;AACE,4BAAC,QAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,SAAS,EAAE1B,UAFb;AAGE,UAAA,GAAG,EAAE2E,OAAO,CAACC,EAHf;AAIE,UAAA,EAAE,sBAAeD,OAAO,CAACE,QAAvB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAME,4BAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,4BAAC,MAAD;AACE,UAAA,GAAG,EAAEF,OAAO,CAACG,MADf;AAEE,UAAA,SAAS,EAAErB,OAAO,CAACP,aAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CANF;AAAA;AAYE,4BAAC,YAAD;AACE,UAAA,OAAO,EAAEyB,OAAO,CAAC/C,IADnB;AAEE,UAAA,sBAAsB,EAAE;AACtBmD,YAAAA,MAAM,EAAE,IADc;AAEtBC,YAAAA,OAAO,EAAE,IAFa;AAGtBC,YAAAA,KAAK,EAAE;AAHe,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF;AADF;AAuBD,KA1BA,CADH,CAPF,CAlBF,CADF,CAJF;AAAA;AA+DE,wBAAC,IAAD;AAAM,MAAA,SAAS,EAAE/E,IAAI,CAACuD,OAAO,CAACL,UAAT,sBAChBK,OAAO,CAACJ,cADQ,EACSW,oBADT,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGF,OAAO,CAACoB,OAAR,CAAgBR,GAAhB,CAAoB,UAACS,SAAD;AAAA;AAAA;AACnB,4BAAC,UAAD;AACE,UAAA,GAAG,EAAEA,SADP;AAEE,UAAA,MAAM,EAAErB,OAAO,CAACsB,KAAR,CAAcD,SAAd,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADmB;AAAA,KAApB,CAHH,CA/DF;AADF;AA4ED;;AAED7B,UAAU,CAAC+B,SAAX,GAAuB;AACrB9B,EAAAA,SAAS,EAAEpD,SAAS,CAACmF;AADA,CAAvB;AAIA,eAAehC,UAAf","sourcesContent":["import React, {\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Link as RouterLink,\n  useLocation\n} from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux';\nimport { getThreads } from 'src/actions/chatActions';\nimport {\n  Avatar,\n  Box,\n  ClickAwayListener,\n  Input,\n  SvgIcon,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport ThreadItem from './ThreadItem';\n\nfunction filterContacts(contacts, searchText) {\n  if (!searchText) {\n    return contacts.allIds;\n  }\n\n  return contacts.allIds.filter(\n    (contactId) => contacts.byId[contactId].name.toLowerCase().includes(searchText.toLowerCase())\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchContainer: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  search: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 44,\n    borderRadius: 22,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    backgroundColor: theme.palette.background.dark\n  },\n  searchInput: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(1)\n  },\n  contactAvatar: {\n    height: 32,\n    width: 32\n  },\n  threadList: {},\n  hideThreadList: {\n    display: 'none'\n  }\n}));\n\nfunction ThreadList({ className, ...rest }) {\n  const classes = useStyles();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { threads, contacts } = useSelector((state) => state.chat);\n  const [searchText, setSearchText] = useState('');\n  const [displaySearchResults, setDisplaySearchResults] = useState(false);\n\n  const handleSearchFocus = (event) => {\n    event.persist();\n    setDisplaySearchResults(true);\n  };\n\n  const handleSearchChange = (event) => {\n    event.persist();\n    setSearchText(event.target.value);\n  };\n\n  const handleSearchClickAway = () => {\n    if (displaySearchResults) {\n      setSearchText('');\n      setDisplaySearchResults(false);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getThreads());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (displaySearchResults) {\n      setDisplaySearchResults(false);\n    }\n    // eslint-disable-next-line\n  }, [location.pathname]);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <ClickAwayListener onClickAway={handleSearchClickAway}>\n        <div className={classes.searchContainer}>\n          <div className={classes.search}>\n            <SvgIcon\n              fontSize=\"small\"\n              color=\"action\"\n            >\n              <SearchIcon />\n            </SvgIcon>\n            <Input\n              className={classes.searchInput}\n              disableUnderline\n              onChange={handleSearchChange}\n              onFocus={handleSearchFocus}\n              placeholder=\"Search contacts\"\n              value={searchText}\n            />\n          </div>\n          {displaySearchResults && (\n          <Box mt={2}>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              Contacts\n            </Typography>\n            <List>\n              {filterContacts(contacts, searchText).map((contactId) => {\n                const contact = contacts.byId[contactId];\n\n                return (\n                  <ListItem\n                    button\n                    component={RouterLink}\n                    key={contact.id}\n                    to={`/app/chat/${contact.username}`}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        src={contact.avatar}\n                        className={classes.contactAvatar}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={contact.name}\n                      primaryTypographyProps={{\n                        noWrap: true,\n                        variant: 'h6',\n                        color: 'textPrimary'\n                      }}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Box>\n          )}\n        </div>\n      </ClickAwayListener>\n      <List className={clsx(classes.threadList,\n        { [classes.hideThreadList]: displaySearchResults })}\n      >\n        {threads.allKeys.map((threadKey) => (\n          <ThreadItem\n            key={threadKey}\n            thread={threads.byKey[threadKey]}\n          />\n        ))}\n      </List>\n    </div>\n  );\n}\n\nThreadList.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ThreadList;\n"]},"metadata":{},"sourceType":"module"}