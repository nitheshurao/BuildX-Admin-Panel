{"ast":null,"code":"/* eslint-disable no-param-reassign */import produce from'immer';import{GET_CONTACTS,GET_THREADS,GET_THREAD,MARK_THREAD_AS_SEEN,ADD_MESSAGE,OPEN_SIDEBAR,CLOSE_SIDEBAR}from'src/actions/chatActions';import objFromArray from'src/utils/objFromArray';var initialState={contacts:{byId:{},allIds:[]},threads:{byKey:{},allKeys:[]},sidebarOpen:false};var chatReducer=function chatReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_CONTACTS:{var contacts=action.payload.contacts;return produce(state,function(draft){draft.contacts.byId=objFromArray(contacts);draft.contacts.allIds=Object.keys(draft.contacts.byId);});}case GET_THREADS:{var threads=action.payload.threads;return produce(state,function(draft){draft.threads.byKey=objFromArray(threads,'key');draft.threads.allKeys=Object.keys(draft.threads.byKey);});}case GET_THREAD:{var thread=action.payload.thread;return produce(state,function(draft){draft.threads.byKey[thread.key]=thread;if(!draft.threads.allKeys.includes(thread.key)){draft.threads.allKeys.push(thread.key);}});}case MARK_THREAD_AS_SEEN:{var threadKey=action.payload.threadKey;return produce(state,function(draft){var thread=draft.threads.byKey[threadKey];if(thread){thread.unreadCount=0;}});}case ADD_MESSAGE:{var _action$payload=action.payload,_threadKey=_action$payload.threadKey,message=_action$payload.message,userId=_action$payload.userId,otherUserId=_action$payload.otherUserId;return produce(state,function(draft){var thread=draft.threads.byKey[_threadKey];if(!thread){thread={key:_threadKey,messages:[message],participantIds:[otherUserId,userId],unreadCount:0};draft.threads.byKey[_threadKey]=thread;draft.threads.allKeys.push(_threadKey);}else{thread.messages.push(message);}});}case OPEN_SIDEBAR:{return produce(state,function(draft){draft.sidebarOpen=true;});}case CLOSE_SIDEBAR:{return produce(state,function(draft){draft.sidebarOpen=false;});}default:{return state;}}};export default chatReducer;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/reducers/chatReducer.js"],"names":["produce","GET_CONTACTS","GET_THREADS","GET_THREAD","MARK_THREAD_AS_SEEN","ADD_MESSAGE","OPEN_SIDEBAR","CLOSE_SIDEBAR","objFromArray","initialState","contacts","byId","allIds","threads","byKey","allKeys","sidebarOpen","chatReducer","state","action","type","payload","draft","Object","keys","thread","key","includes","push","threadKey","unreadCount","message","userId","otherUserId","messages","participantIds"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport {\n  GET_CONTACTS,\n  GET_THREADS,\n  GET_THREAD,\n  MARK_THREAD_AS_SEEN,\n  ADD_MESSAGE,\n  OPEN_SIDEBAR,\n  CLOSE_SIDEBAR\n} from 'src/actions/chatActions';\nimport objFromArray from 'src/utils/objFromArray';\n\nconst initialState = {\n  contacts: {\n    byId: {},\n    allIds: []\n  },\n  threads: {\n    byKey: {},\n    allKeys: []\n  },\n  sidebarOpen: false\n};\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CONTACTS: {\n      const { contacts } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.contacts.byId = objFromArray(contacts);\n        draft.contacts.allIds = Object.keys(draft.contacts.byId);\n      });\n    }\n\n    case GET_THREADS: {\n      const { threads } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.threads.byKey = objFromArray(threads, 'key');\n        draft.threads.allKeys = Object.keys(draft.threads.byKey);\n      });\n    }\n\n    case GET_THREAD: {\n      const { thread } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.threads.byKey[thread.key] = thread;\n\n        if (!draft.threads.allKeys.includes(thread.key)) {\n          draft.threads.allKeys.push(thread.key);\n        }\n      });\n    }\n\n    case MARK_THREAD_AS_SEEN: {\n      const { threadKey } = action.payload;\n\n      return produce(state, (draft) => {\n        const thread = draft.threads.byKey[threadKey];\n\n        if (thread) {\n          thread.unreadCount = 0;\n        }\n      });\n    }\n\n    case ADD_MESSAGE: {\n      const {\n        threadKey,\n        message,\n        userId,\n        otherUserId\n      } = action.payload;\n\n      return produce(state, (draft) => {\n        let thread = draft.threads.byKey[threadKey];\n\n        if (!thread) {\n          thread = {\n            key: threadKey,\n            messages: [message],\n            participantIds: [otherUserId, userId],\n            unreadCount: 0\n          };\n\n          draft.threads.byKey[threadKey] = thread;\n          draft.threads.allKeys.push(threadKey);\n        } else {\n          thread.messages.push(message);\n        }\n      });\n    }\n\n    case OPEN_SIDEBAR: {\n      return produce(state, (draft) => {\n        draft.sidebarOpen = true;\n      });\n    }\n\n    case CLOSE_SIDEBAR: {\n      return produce(state, (draft) => {\n        draft.sidebarOpen = false;\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default chatReducer;\n"]},"metadata":{},"sourceType":"module"}