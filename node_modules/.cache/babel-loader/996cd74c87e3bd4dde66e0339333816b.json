{"ast":null,"code":"import _toConsumableArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/ProductListView/Results.js\";\n\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, Checkbox, InputAdornment, FormControlLabel, IconButton, Link, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, makeStyles } from '@material-ui/core';\nimport { Image as ImageIcon, Edit as EditIcon, ArrowRight as ArrowRightIcon, Search as SearchIcon } from 'react-feather';\nimport Label from 'src/components/Label';\nvar categoryOptions = [{\n  id: 'all',\n  name: 'All'\n}, {\n  id: 'dress',\n  name: 'Dress'\n}, {\n  id: 'jewelry',\n  name: 'Jewelry'\n}, {\n  id: 'blouse',\n  name: 'Blouse'\n}, {\n  id: 'beauty',\n  name: 'Beauty'\n}];\nvar avalabilityOptions = [{\n  id: 'all',\n  name: 'All'\n}, {\n  id: 'available',\n  name: 'Available'\n}, {\n  id: 'unavailable',\n  name: 'Unavailable'\n}];\nvar sortOptions = [{\n  value: 'updatedAt|desc',\n  label: 'Last update (newest first)'\n}, {\n  value: 'updatedAt|asc',\n  label: 'Last update (oldest first)'\n}, {\n  value: 'createdAt|desc',\n  label: 'Creation date (newest first)'\n}, {\n  value: 'createdAt|asc',\n  label: 'Creation date (oldest first)'\n}];\n\nfunction getInventoryLabel(inventoryType) {\n  var map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    }\n  };\n  var _map$inventoryType = map[inventoryType],\n      text = _map$inventoryType.text,\n      color = _map$inventoryType.color;\n  return (\n    /*#__PURE__*/\n    React.createElement(Label, {\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, text)\n  );\n}\n\nfunction applyFilters(products, query, filters) {\n  return products.filter(function (product) {\n    var matches = true;\n\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    if (filters.category && product.category !== filters.category) {\n      matches = false;\n    }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !product.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && product.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (filters.inStock && !['in_stock', 'limited'].includes(product.inventoryType)) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !product.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    bulkOperations: {\n      position: 'relative'\n    },\n    bulkActions: {\n      paddingLeft: 4,\n      paddingRight: 4,\n      marginTop: 6,\n      position: 'absolute',\n      width: '100%',\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    },\n    bulkAction: {\n      marginLeft: theme.spacing(2)\n    },\n    queryField: {\n      width: 500\n    },\n    categoryField: {\n      flexBasis: 200\n    },\n    availabilityField: {\n      marginLeft: theme.spacing(2),\n      flexBasis: 200\n    },\n    stockField: {\n      marginLeft: theme.spacing(2)\n    },\n    shippableField: {\n      marginLeft: theme.spacing(2)\n    },\n    imageCell: {\n      fontSize: 0,\n      width: 68,\n      flexBasis: 68,\n      flexGrow: 0,\n      flexShrink: 0\n    },\n    image: {\n      height: 68,\n      width: 68\n    }\n  };\n});\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      products = _ref.products,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"products\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedProducts = _useState2[0],\n      setSelectedProducts = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      limit = _useState6[0],\n      setLimit = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState(sortOptions[0].value),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sort = _useState10[0],\n      setSort = _useState10[1];\n\n  var _useState11 = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filters = _useState12[0],\n      setFilters = _useState12[1];\n\n  var handleQueryChange = function handleQueryChange(event) {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  var handleCategoryChange = function handleCategoryChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread({}, prevFilters, {\n        category: value\n      });\n    });\n  };\n\n  var handleAvailabilityChange = function handleAvailabilityChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread({}, prevFilters, {\n        availability: value\n      });\n    });\n  };\n\n  var handleStockChange = function handleStockChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread({}, prevFilters, {\n        inStock: value\n      });\n    });\n  };\n\n  var handleShippableChange = function handleShippableChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread({}, prevFilters, {\n        isShippable: value\n      });\n    });\n  };\n\n  var handleSortChange = function handleSortChange(event) {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  var handleSelectAllProducts = function handleSelectAllProducts(event) {\n    setSelectedProducts(event.target.checked ? products.map(function (product) {\n      return product.id;\n    }) : []);\n  };\n\n  var handleSelectOneProduct = function handleSelectOneProduct(event, productId) {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts(function (prevSelected) {\n        return [].concat(_toConsumableArray(prevSelected), [productId]);\n      });\n    } else {\n      setSelectedProducts(function (prevSelected) {\n        return prevSelected.filter(function (id) {\n          return id !== productId;\n        });\n      });\n    }\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleLimitChange = function handleLimitChange(event) {\n    setLimit(event.target.value);\n  }; // Usually query is done on backend with indexing solutions\n\n\n  var filteredProducts = applyFilters(products, query, filters);\n  var paginatedProducts = applyPagination(filteredProducts, page, limit);\n  var enableBulkOperations = selectedProducts.length > 0;\n  var selectedSomeProducts = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  var selectedAllProducts = selectedProducts.length === products.length;\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      p: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      className: classes.queryField,\n      InputProps: {\n        startAdornment:\n        /*#__PURE__*/\n        React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          color: \"action\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SearchIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }\n        })))\n      },\n      onChange: handleQueryChange,\n      placeholder: \"Search products\",\n      value: query,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      label: \"Sort By\",\n      name: \"sort\",\n      onChange: handleSortChange,\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: sort,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }\n    }, sortOptions.map(function (option) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }\n        }, option.label)\n      );\n    }))),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 3,\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      className: classes.categoryField,\n      label: \"Category\",\n      name: \"category\",\n      onChange: handleCategoryChange,\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: filters.category || 'all',\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }, categoryOptions.map(function (categoryOption) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: categoryOption.id,\n          value: categoryOption.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }\n        }, categoryOption.name)\n      );\n    })),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      className: classes.availabilityField,\n      label: \"Availability\",\n      name: \"availability\",\n      onChange: handleAvailabilityChange,\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: filters.availability || 'all',\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }\n    }, avalabilityOptions.map(function (avalabilityOption) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: avalabilityOption.id,\n          value: avalabilityOption.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }\n        }, avalabilityOption.name)\n      );\n    })),\n    /*#__PURE__*/\n    React.createElement(FormControlLabel, {\n      className: classes.stockField,\n      control:\n      /*#__PURE__*/\n      React.createElement(Checkbox, {\n        checked: !!filters.inStock,\n        onChange: handleStockChange,\n        name: \"inStock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }\n      }),\n      label: \"In Stock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(FormControlLabel, {\n      className: classes.shippableField,\n      control:\n      /*#__PURE__*/\n      React.createElement(Checkbox, {\n        checked: !!filters.isShippable,\n        onChange: handleShippableChange,\n        name: \"Shippable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }\n      }),\n      label: \"Shippable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }\n    }))), enableBulkOperations &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.bulkOperations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.bulkActions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Checkbox, {\n      checked: selectedAllProducts,\n      indeterminate: selectedSomeProducts,\n      onChange: handleSelectAllProducts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.bulkAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    }, \"Delete\"),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.bulkAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }\n    }, \"Edit\"))),\n    /*#__PURE__*/\n    React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      minWidth: 1200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Checkbox, {\n      checked: selectedAllProducts,\n      indeterminate: selectedSomeProducts,\n      onChange: handleSelectAllProducts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 19\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    }, \"Name\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }, \"Invetory\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }, \"Details\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }, \"Attributes\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, \"Price\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }, \"Actions\"))),\n    /*#__PURE__*/\n    React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 13\n      }\n    }, paginatedProducts.map(function (product) {\n      var isProductSelected = selectedProducts.includes(product.id);\n      return (\n        /*#__PURE__*/\n        React.createElement(TableRow, {\n          hover: true,\n          key: product.id,\n          selected: isProductSelected,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Checkbox, {\n          checked: isProductSelected,\n          onChange: function onChange(event) {\n            return handleSelectOneProduct(event, product.id);\n          },\n          value: isProductSelected,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 23\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          className: classes.imageCell,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 21\n          }\n        }, product.image ?\n        /*#__PURE__*/\n        React.createElement(\"img\", {\n          alt: \"Product\",\n          src: product.image,\n          className: classes.image,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }\n        }) :\n        /*#__PURE__*/\n        React.createElement(Box, {\n          p: 2,\n          bgcolor: \"background.dark\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 27\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ImageIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 29\n          }\n        })))),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Link, {\n          variant: \"subtitle2\",\n          color: \"textPrimary\",\n          component: RouterLink,\n          underline: \"none\",\n          to: \"#\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 23\n          }\n        }, product.name)),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 21\n          }\n        }, getInventoryLabel(product.inventoryType)),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 21\n          }\n        }, product.quantity, ' ', \"in stock\", product.variants > 1 && \" in \".concat(product.variants, \" variants\")),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 21\n          }\n        }, product.attributes.map(function (attr) {\n          return attr;\n        })),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 21\n          }\n        }, product.currency, product.price.toFixed(2)),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          align: \"right\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(EditIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 27\n          }\n        }))),\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ArrowRightIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 27\n          }\n        })))))\n      );\n    }))),\n    /*#__PURE__*/\n    React.createElement(TablePagination, {\n      component: \"div\",\n      count: filteredProducts.length,\n      onChangePage: handlePageChange,\n      onChangeRowsPerPage: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }\n    }))))\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array\n};\nResults.defaultProps = {\n  products: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/ProductListView/Results.js"],"names":["React","useState","Link","RouterLink","clsx","PropTypes","PerfectScrollbar","Box","Button","Card","Checkbox","InputAdornment","FormControlLabel","IconButton","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","makeStyles","Image","ImageIcon","Edit","EditIcon","ArrowRight","ArrowRightIcon","Search","SearchIcon","Label","categoryOptions","id","name","avalabilityOptions","sortOptions","value","label","getInventoryLabel","inventoryType","map","in_stock","text","color","out_of_stock","limited","applyFilters","products","query","filters","filter","product","matches","toLowerCase","includes","category","availability","isAvailable","inStock","isShippable","applyPagination","customers","page","limit","slice","useStyles","theme","root","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","width","zIndex","backgroundColor","palette","background","default","bulkAction","marginLeft","spacing","queryField","categoryField","flexBasis","availabilityField","stockField","shippableField","imageCell","fontSize","flexGrow","flexShrink","image","height","Results","className","rest","classes","selectedProducts","setSelectedProducts","setPage","setLimit","setQuery","sort","setSort","setFilters","handleQueryChange","event","persist","target","handleCategoryChange","prevFilters","handleAvailabilityChange","handleStockChange","checked","handleShippableChange","handleSortChange","handleSelectAllProducts","handleSelectOneProduct","productId","prevSelected","handlePageChange","newPage","handleLimitChange","filteredProducts","paginatedProducts","enableBulkOperations","length","selectedSomeProducts","selectedAllProducts","startAdornment","native","option","categoryOption","avalabilityOption","isProductSelected","quantity","variants","attributes","attr","currency","price","toFixed","propTypes","string","array","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  FormControlLabel,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Image as ImageIcon,\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\n\nconst categoryOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'dress',\n    name: 'Dress'\n  },\n  {\n    id: 'jewelry',\n    name: 'Jewelry'\n  },\n  {\n    id: 'blouse',\n    name: 'Blouse'\n  },\n  {\n    id: 'beauty',\n    name: 'Beauty'\n  }\n];\n\nconst avalabilityOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'available',\n    name: 'Available'\n  },\n  {\n    id: 'unavailable',\n    name: 'Unavailable'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'createdAt|desc',\n    label: 'Creation date (newest first)'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Creation date (oldest first)'\n  }\n];\n\nfunction getInventoryLabel(inventoryType) {\n  const map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    }\n  };\n\n  const { text, color } = map[inventoryType];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n}\n\nfunction applyFilters(products, query, filters) {\n  return products.filter((product) => {\n    let matches = true;\n\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    if (filters.category && product.category !== filters.category) {\n      matches = false;\n    }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !product.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && product.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (filters.inStock && !['in_stock', 'limited'].includes(product.inventoryType)) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !product.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  queryField: {\n    width: 500\n  },\n  categoryField: {\n    flexBasis: 200\n  },\n  availabilityField: {\n    marginLeft: theme.spacing(2),\n    flexBasis: 200\n  },\n  stockField: {\n    marginLeft: theme.spacing(2)\n  },\n  shippableField: {\n    marginLeft: theme.spacing(2)\n  },\n  imageCell: {\n    fontSize: 0,\n    width: 68,\n    flexBasis: 68,\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  image: {\n    height: 68,\n    width: 68\n  }\n}));\n\nfunction Results({ className, products, ...rest }) {\n  const classes = useStyles();\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllProducts = (event) => {\n    setSelectedProducts(event.target.checked\n      ? products.map((product) => product.id)\n      : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredProducts = applyFilters(products, query, filters);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n  const enableBulkOperations = selectedProducts.length > 0;\n  const selectedSomeProducts = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  const selectedAllProducts = selectedProducts.length === products.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon\n                    fontSize=\"small\"\n                    color=\"action\"\n                  >\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search products\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          mt={3}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.categoryField}\n            label=\"Category\"\n            name=\"category\"\n            onChange={handleCategoryChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.category || 'all'}\n            variant=\"outlined\"\n          >\n            {categoryOptions.map((categoryOption) => (\n              <option\n                key={categoryOption.id}\n                value={categoryOption.id}\n              >\n                {categoryOption.name}\n              </option>\n            ))}\n          </TextField>\n          <TextField\n            className={classes.availabilityField}\n            label=\"Availability\"\n            name=\"availability\"\n            onChange={handleAvailabilityChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.availability || 'all'}\n            variant=\"outlined\"\n          >\n            {avalabilityOptions.map((avalabilityOption) => (\n              <option\n                key={avalabilityOption.id}\n                value={avalabilityOption.id}\n              >\n                {avalabilityOption.name}\n              </option>\n            ))}\n          </TextField>\n          <FormControlLabel\n            className={classes.stockField}\n            control={(\n              <Checkbox\n                checked={!!filters.inStock}\n                onChange={handleStockChange}\n                name=\"inStock\"\n              />\n            )}\n            label=\"In Stock\"\n          />\n          <FormControlLabel\n            className={classes.shippableField}\n            control={(\n              <Checkbox\n                checked={!!filters.isShippable}\n                onChange={handleShippableChange}\n                name=\"Shippable\"\n              />\n            )}\n            label=\"Shippable\"\n          />\n        </Box>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllProducts}\n              indeterminate={selectedSomeProducts}\n              onChange={handleSelectAllProducts}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllProducts}\n                    indeterminate={selectedSomeProducts}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell />\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Invetory\n                </TableCell>\n                <TableCell>\n                  Details\n                </TableCell>\n                <TableCell>\n                  Attributes\n                </TableCell>\n                <TableCell>\n                  Price\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map((product) => {\n                const isProductSelected = selectedProducts.includes(product.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={product.id}\n                    selected={isProductSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        onChange={(event) => handleSelectOneProduct(event, product.id)}\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                    <TableCell className={classes.imageCell}>\n                      {product.image ? (\n                        <img\n                          alt=\"Product\"\n                          src={product.image}\n                          className={classes.image}\n                        />\n                      ) : (\n                        <Box\n                          p={2}\n                          bgcolor=\"background.dark\"\n                        >\n                          <SvgIcon>\n                            <ImageIcon />\n                          </SvgIcon>\n                        </Box>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        underline=\"none\"\n                        to=\"#\"\n                      >\n                        {product.name}\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      {getInventoryLabel(product.inventoryType)}\n                    </TableCell>\n                    <TableCell>\n                      {product.quantity}\n                      {' '}\n                      in stock\n                      {product.variants > 1 && ` in ${product.variants} variants`}\n                    </TableCell>\n                    <TableCell>\n                      {product.attributes.map((attr) => attr)}\n                    </TableCell>\n                    <TableCell>\n                      {product.currency}\n                      {product.price.toFixed(2)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton>\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton>\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={filteredProducts.length}\n            onChangePage={handlePageChange}\n            onChangeRowsPerPage={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array\n};\n\nResults.defaultProps = {\n  products: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}