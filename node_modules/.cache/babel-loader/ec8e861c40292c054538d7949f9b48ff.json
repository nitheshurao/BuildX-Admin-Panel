{"ast":null,"code":"import _regeneratorRuntime from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/extra/forms/FormikView/BasicForm.js\";\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, CardContent, CardHeader, Checkbox, CircularProgress, Divider, FormHelperText, Grid, Link, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nfunction BasicForm() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlertVisible = _useState2[0],\n      setAlertVisible = _useState2[1];\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Formik, {\n      initialValues: {\n        email: 'johnnydoe@yahoo.com',\n        firstName: 'John',\n        lastName: 'Doe',\n        password: 'thisisasecuredpassword',\n        policy: false\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email().required('Required'),\n        firstName: Yup.string().required('Required'),\n        lastName: Yup.string().required('Required'),\n        password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      }),\n      onSubmit:\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(values, _ref) {\n          var resetForm, setErrors, setStatus, setSubmitting;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  resetForm = _ref.resetForm, setErrors = _ref.setErrors, setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n                  _context.prev = 1;\n                  _context.next = 4;\n                  return wait(1000);\n\n                case 4:\n                  resetForm();\n                  setStatus({\n                    success: true\n                  });\n                  setSubmitting(false);\n                  _context.next = 14;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](1);\n                  setStatus({\n                    success: false\n                  });\n                  setErrors({\n                    submit: _context.t0.message\n                  });\n                  setSubmitting(false);\n\n                case 14:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[1, 9]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, function (_ref3) {\n      var errors = _ref3.errors,\n          handleBlur = _ref3.handleBlur,\n          handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit,\n          isSubmitting = _ref3.isSubmitting,\n          touched = _ref3.touched,\n          values = _ref3.values;\n      return (\n        /*#__PURE__*/\n        React.createElement(Card, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(CardHeader, {\n          title: \"Basic Form\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Divider, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(CardContent, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, isAlertVisible &&\n        /*#__PURE__*/\n        React.createElement(Box, {\n          mb: 3,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Alert, {\n          onClose: function onClose() {\n            return setAlertVisible(false);\n          },\n          severity: \"info\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, \"This is an info alert - check it out!\")), isSubmitting ?\n        /*#__PURE__*/\n        React.createElement(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          my: 5,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(CircularProgress, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        })) :\n        /*#__PURE__*/\n        React.createElement(\"form\", {\n          onSubmit: handleSubmit,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.firstName && errors.firstName),\n          fullWidth: true,\n          helperText: touched.firstName && errors.firstName,\n          label: \"First Name\",\n          name: \"firstName\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.firstName,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.lastName && errors.lastName),\n          fullWidth: true,\n          helperText: touched.lastName && errors.lastName,\n          label: \"Last Name\",\n          name: \"lastName\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.lastName,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }))),\n        /*#__PURE__*/\n        React.createElement(Box, {\n          mt: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.email && errors.email),\n          fullWidth: true,\n          helperText: touched.email && errors.email,\n          label: \"Email Address\",\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          type: \"email\",\n          value: values.email,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Box, {\n          mt: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.password && errors.password),\n          fullWidth: true,\n          helperText: touched.password && errors.password,\n          label: \"Password\",\n          name: \"password\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          type: \"password\",\n          value: values.password,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Box, {\n          alignItems: \"center\",\n          display: \"flex\",\n          mt: 2,\n          ml: -1,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Checkbox, {\n          checked: values.policy,\n          name: \"policy\",\n          onChange: handleChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }\n        }, \"I have read the\", ' ',\n        /*#__PURE__*/\n        React.createElement(Link, {\n          component: \"a\",\n          href: \"#\",\n          color: \"secondary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }\n        }, \"Terms and Conditions\"))), Boolean(touched.policy && errors.policy) &&\n        /*#__PURE__*/\n        React.createElement(FormHelperText, {\n          error: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }\n        }, errors.policy),\n        /*#__PURE__*/\n        React.createElement(Box, {\n          mt: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Button, {\n          color: \"secondary\",\n          disabled: isSubmitting,\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }\n        }, \"Sign up\")))))\n      );\n    })\n  );\n}\n\nexport default BasicForm;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/extra/forms/FormikView/BasicForm.js"],"names":["React","useState","Yup","Formik","Box","Button","Card","CardContent","CardHeader","Checkbox","CircularProgress","Divider","FormHelperText","Grid","Link","TextField","Typography","Alert","wait","BasicForm","isAlertVisible","setAlertVisible","email","firstName","lastName","password","policy","object","shape","string","required","min","max","boolean","oneOf","values","resetForm","setErrors","setStatus","setSubmitting","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nfunction BasicForm() {\n  const [isAlertVisible, setAlertVisible] = useState(true);\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'johnnydoe@yahoo.com',\n        firstName: 'John',\n        lastName: 'Doe',\n        password: 'thisisasecuredpassword',\n        policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required('Required'),\n        firstName: Yup.string().required('Required'),\n        lastName: Yup.string().required('Required'),\n        password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(1000);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <Card>\n          <CardHeader title=\"Basic Form\" />\n          <Divider />\n          <CardContent>\n            {isAlertVisible && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setAlertVisible(false)}\n                  severity=\"info\"\n                >\n                  This is an info alert - check it out!\n                </Alert>\n              </Box>\n            )}\n            {isSubmitting ? (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                my={5}\n              >\n                <CircularProgress />\n              </Box>\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      fullWidth\n                      helperText={touched.firstName && errors.firstName}\n                      label=\"First Name\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.firstName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      fullWidth\n                      helperText={touched.lastName && errors.lastName}\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.lastName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  mt={2}\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      component=\"a\"\n                      href=\"#\"\n                      color=\"secondary\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                <FormHelperText error>\n                  {errors.policy}\n                </FormHelperText>\n                )}\n                <Box mt={2}>\n                  <Button\n                    color=\"secondary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Formik>\n  );\n}\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}