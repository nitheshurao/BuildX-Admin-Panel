{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerDetailsView/Invoices.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, CardHeader, Divider, IconButton, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, makeStyles } from '@material-ui/core';\nimport { ArrowRight as ArrowRightIcon } from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nvar statusColors = {\n  paid: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nfunction Invoices(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      invoices = _useState2[0],\n      setInvoices = _useState2[1];\n\n  var getInvoices = useCallback(function () {\n    axios.get('/api/management/customers/1/invoices').then(function (response) {\n      if (isMountedRef.current) {\n        setInvoices(response.data.invoices);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getInvoices();\n  }, [getInvoices]);\n\n  if (!invoices) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      action:\n      /*#__PURE__*/\n      React.createElement(GenericMoreButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }),\n      title: \"Customer invoices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      minWidth: 1150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, \"ID\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Date\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"Description\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \"Payment Method\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, \"Total\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"Status\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, \"Actions\"))),\n    /*#__PURE__*/\n    React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, invoices.map(function (invoice) {\n      return (\n        /*#__PURE__*/\n        React.createElement(TableRow, {\n          key: invoice.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }\n        }, \"#\", invoice.id.split('-').shift()),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, moment(invoice.date).format('DD/MM/YYYY | HH:MM')),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, invoice.description),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }, invoice.paymentMethod),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }, invoice.currency, invoice.value),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Label, {\n          color: statusColors[invoice.status],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 23\n          }\n        }, invoice.status)),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          align: \"right\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          component: RouterLink,\n          to: \"/app/management/invoices/1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ArrowRightIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 27\n          }\n        })))))\n      );\n    }))))),\n    /*#__PURE__*/\n    React.createElement(TablePagination, {\n      component: \"div\",\n      count: invoices.length,\n      onChangePage: function onChangePage() {},\n      onChangeRowsPerPage: function onChangeRowsPerPage() {},\n      page: 0,\n      rowsPerPage: 5,\n      rowsPerPageOptions: [5, 10, 25],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    })))\n  );\n}\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\nexport default Invoices;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerDetailsView/Invoices.js"],"names":["React","useState","useEffect","useCallback","Link","RouterLink","clsx","moment","PropTypes","PerfectScrollbar","Box","Card","CardHeader","Divider","IconButton","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","makeStyles","ArrowRight","ArrowRightIcon","axios","useIsMountedRef","Label","GenericMoreButton","statusColors","paid","pending","rejected","useStyles","root","Invoices","className","rest","classes","isMountedRef","invoices","setInvoices","getInvoices","get","then","response","current","data","map","invoice","id","split","shift","date","format","description","paymentMethod","currency","value","status","length","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\nimport { ArrowRight as ArrowRightIcon } from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst statusColors = {\n  paid: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Invoices({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [invoices, setInvoices] = useState(null);\n\n  const getInvoices = useCallback(() => {\n    axios\n      .get('/api/management/customers/1/invoices')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setInvoices(response.data.invoices);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getInvoices();\n  }, [getInvoices]);\n\n  if (!invoices) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <PerfectScrollbar>\n          <Box minWidth={1150}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Payment Method</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {invoices.map((invoice) => (\n                  <TableRow key={invoice.id}>\n                    <TableCell>\n                      #\n                      {invoice.id.split('-').shift()}\n                    </TableCell>\n                    <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                    </TableCell>\n                    <TableCell>{invoice.description}</TableCell>\n                    <TableCell>{invoice.paymentMethod}</TableCell>\n                    <TableCell>\n                      {invoice.currency}\n                      {invoice.value}\n                    </TableCell>\n                    <TableCell>\n                      <Label color={statusColors[invoice.status]}>\n                        {invoice.status}\n                      </Label>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/app/management/invoices/1\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Box>\n        </PerfectScrollbar>\n        <TablePagination\n          component=\"div\"\n          count={invoices.length}\n          onChangePage={() => {}}\n          onChangeRowsPerPage={() => {}}\n          page={0}\n          rowsPerPage={5}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </Card>\n    </div>\n  );\n}\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n"]},"metadata":{},"sourceType":"module"}