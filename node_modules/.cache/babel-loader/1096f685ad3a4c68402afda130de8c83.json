{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/chat/ChatView/ThreadDetails/Toolbar.js\";\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Avatar, Box, Hidden, IconButton, Input, ListItemIcon, ListItemText, Menu, MenuItem, Paper, Tooltip, Typography, makeStyles, SvgIcon } from '@material-ui/core';\nimport { Slash as SlashIcon, Menu as MenuIcon, MoreVertical as MoreIcon, Search as SearchIcon, Trash as TrashIcon, Archive as ArchiveIcon, BellOff as BellOffIcon } from 'react-feather';\nimport OnlineIndicator from 'src/components/OnlineIndicator';\nimport { openSidebar } from 'src/actions/chatActions';\n\nfunction contactSelector(state, participantIds) {\n  var contacts = state.chat.contacts;\n  var user = state.account.user; // In most apps one thread can have more than two participants\n  // We could display all participants, but for now we only select one\n\n  var contactId = participantIds.filter(function (participantId) {\n    return participantId !== user.id;\n  })[0];\n  return contacts.byId[contactId];\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.default,\n      height: 64,\n      flexShrink: 0,\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    onlineIndicator: {\n      marginRight: theme.spacing(1)\n    },\n    searchInput: {\n      marginLeft: theme.spacing(2),\n      flexGrow: 1\n    }\n  };\n});\n\nfunction Toolbar(_ref) {\n  var className = _ref.className,\n      thread = _ref.thread,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"thread\"]);\n\n  var classes = useStyles();\n  var moreRef = useRef(null);\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openMenu = _useState2[0],\n      setOpenMenu = _useState2[1];\n\n  var contact = useSelector(function (state) {\n    return contactSelector(state, thread.participantIds);\n  });\n\n  var handleOpenSidebar = function handleOpenSidebar() {\n    dispatch(openSidebar());\n  };\n\n  var handleMenuOpen = function handleMenuOpen() {\n    setOpenMenu(true);\n  };\n\n  var handleMenuClose = function handleMenuClose() {\n    setOpenMenu(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(IconButton, {\n      className: classes.menuButton,\n      onClick: handleOpenSidebar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })))), contact &&\n    /*#__PURE__*/\n    React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Avatar, {\n      src: contact.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      ml: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, contact.name),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, contact.isActive ?\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(OnlineIndicator, {\n      className: classes.onlineIndicator,\n      status: \"online\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, \"Active now\")) :\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \"Active\", ' ', moment(contact.lastActivity).fromNow())))),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Paper, {\n      component: Box,\n      display: \"flex\",\n      alignItems: \"center\",\n      variant: \"outlined\",\n      py: 0.5,\n      px: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      color: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Input, {\n      className: classes.searchInput,\n      disableUnderline: true,\n      placeholder: \"Search message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(Tooltip, {\n      title: \"More options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(IconButton, {\n      onClick: handleMenuOpen,\n      ref: moreRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(MoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    })))),\n    /*#__PURE__*/\n    React.createElement(Menu, {\n      anchorEl: moreRef.current,\n      keepMounted: true,\n      elevation: 1,\n      onClose: handleMenuClose,\n      open: openMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SlashIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(ListItemText, {\n      primary: \"Block contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TrashIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(ListItemText, {\n      primary: \"Delete thread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ArchiveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(ListItemText, {\n      primary: \"Archive thread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(BellOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(ListItemText, {\n      primary: \"Mute notifications\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }))))\n  );\n}\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  thread: PropTypes.object.isRequired\n};\nexport default Toolbar;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/chat/ChatView/ThreadDetails/Toolbar.js"],"names":["React","useRef","useState","PropTypes","clsx","moment","useSelector","useDispatch","Avatar","Box","Hidden","IconButton","Input","ListItemIcon","ListItemText","Menu","MenuItem","Paper","Tooltip","Typography","makeStyles","SvgIcon","Slash","SlashIcon","MenuIcon","MoreVertical","MoreIcon","Search","SearchIcon","Trash","TrashIcon","Archive","ArchiveIcon","BellOff","BellOffIcon","OnlineIndicator","openSidebar","contactSelector","state","participantIds","contacts","chat","user","account","contactId","filter","participantId","id","byId","useStyles","theme","root","backgroundColor","palette","background","default","height","flexShrink","display","alignItems","paddingLeft","spacing","paddingRight","menuButton","marginRight","onlineIndicator","searchInput","marginLeft","flexGrow","Toolbar","className","thread","rest","classes","moreRef","dispatch","openMenu","setOpenMenu","contact","handleOpenSidebar","handleMenuOpen","handleMenuClose","avatar","name","isActive","lastActivity","fromNow","current","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  useSelector,\n  useDispatch\n} from 'react-redux';\nimport {\n  Avatar,\n  Box,\n  Hidden,\n  IconButton,\n  Input,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Paper,\n  Tooltip,\n  Typography,\n  makeStyles,\n  SvgIcon\n} from '@material-ui/core';\nimport {\n  Slash as SlashIcon,\n  Menu as MenuIcon,\n  MoreVertical as MoreIcon,\n  Search as SearchIcon,\n  Trash as TrashIcon,\n  Archive as ArchiveIcon,\n  BellOff as BellOffIcon\n} from 'react-feather';\nimport OnlineIndicator from 'src/components/OnlineIndicator';\nimport { openSidebar } from 'src/actions/chatActions';\n\nfunction contactSelector(state, participantIds) {\n  const { contacts } = state.chat;\n  const { user } = state.account;\n\n  // In most apps one thread can have more than two participants\n  // We could display all participants, but for now we only select one\n  const contactId = participantIds.filter((participantId) => participantId !== user.id)[0];\n\n  return contacts.byId[contactId];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: 64,\n    flexShrink: 0,\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  onlineIndicator: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1\n  }\n}));\n\nfunction Toolbar({\n  className,\n  thread,\n  ...rest\n}) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const dispatch = useDispatch();\n  const [openMenu, setOpenMenu] = useState(false);\n  const contact = useSelector((state) => contactSelector(state, thread.participantIds));\n\n  const handleOpenSidebar = () => {\n    dispatch(openSidebar());\n  };\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Hidden mdUp>\n        <IconButton\n          className={classes.menuButton}\n          onClick={handleOpenSidebar}\n        >\n          <SvgIcon fontSize=\"small\">\n            <MenuIcon />\n          </SvgIcon>\n        </IconButton>\n      </Hidden>\n      {contact && (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Avatar src={contact.avatar} />\n          <Box ml={1}>\n            <Typography\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n              {contact.name}\n            </Typography>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              {contact.isActive ? (\n                <>\n                  <OnlineIndicator\n                    className={classes.onlineIndicator}\n                    status=\"online\"\n                    size=\"small\"\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"caption\"\n                  >\n                    Active now\n                  </Typography>\n                </>\n              ) : (\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"caption\"\n                >\n                  Active\n                  {' '}\n                  {moment(contact.lastActivity).fromNow()}\n                </Typography>\n              )}\n            </Box>\n          </Box>\n        </Box>\n      )}\n      <Box flexGrow={1} />\n      <Hidden smDown>\n        <Paper\n          component={Box}\n          display=\"flex\"\n          alignItems=\"center\"\n          variant=\"outlined\"\n          py={0.5}\n          px={1}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            color=\"action\"\n          >\n            <SearchIcon />\n          </SvgIcon>\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            placeholder=\"Search message\"\n          />\n        </Paper>\n      </Hidden>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <SvgIcon fontSize=\"small\">\n            <MoreIcon />\n          </SvgIcon>\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        keepMounted\n        elevation={1}\n        onClose={handleMenuClose}\n        open={openMenu}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <SlashIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Block contact\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <TrashIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Delete thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <ArchiveIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Archive thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <BellOffIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Mute notifications\" />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  thread: PropTypes.object.isRequired\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}