{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/layouts/DashboardLayout/TopBar/Contacts.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Box, IconButton, Link, List, ListItem, ListItemAvatar, ListItemText, Popover, SvgIcon, Tooltip, Typography, makeStyles } from '@material-ui/core';\nimport { Users as UsersIcon } from 'react-feather';\nimport OnlineIndicator from 'src/components/OnlineIndicator';\nimport { getContacts } from 'src/actions/chatActions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    popover: {\n      width: 320,\n      padding: theme.spacing(2)\n    },\n    list: {\n      padding: theme.spacing(1, 3)\n    },\n    listItemText: {\n      marginRight: theme.spacing(1)\n    },\n    lastActivity: {\n      whiteSpace: 'nowrap'\n    }\n  };\n});\n\nfunction Contacts() {\n  var _this = this;\n\n  var classes = useStyles();\n  var ref = useRef(null);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.chat;\n  }),\n      contacts = _useSelector.contacts;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  useEffect(function () {\n    dispatch(getContacts());\n  }, [dispatch]);\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(Tooltip, {\n      title: \"Contacts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: handleOpen,\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(UsersIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })))),\n    /*#__PURE__*/\n    React.createElement(Popover, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      classes: {\n        paper: classes.popover\n      },\n      anchorEl: ref.current,\n      onClose: handleClose,\n      open: isOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h4\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Contacts\"),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(List, {\n      disablePadding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, contacts.allIds.map(function (contactId) {\n      var contact = contacts.byId[contactId];\n      return (\n        /*#__PURE__*/\n        React.createElement(ListItem, {\n          disableGutters: true,\n          key: contact.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ListItemAvatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Avatar, {\n          alt: \"Person\",\n          src: contact.avatar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(ListItemText, {\n          className: classes.listItemText,\n          disableTypography: true,\n          primary:\n          /*#__PURE__*/\n          React.createElement(Link, {\n            color: \"textPrimary\",\n            component: RouterLink,\n            display: \"block\",\n            underline: \"none\",\n            noWrap: true,\n            to: \"#\",\n            variant: \"h6\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 23\n            }\n          }, contact.name),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }\n        }), contact.isActive ?\n        /*#__PURE__*/\n        React.createElement(OnlineIndicator, {\n          size: \"small\",\n          status: \"online\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }\n        }) :\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          color: \"textSecondary\",\n          noWrap: true,\n          variant: \"caption\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        }, moment(contact.lastActivity).fromNow()))\n      );\n    })))))\n  );\n}\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/layouts/DashboardLayout/TopBar/Contacts.js"],"names":["React","useRef","useState","useEffect","Link","RouterLink","moment","useDispatch","useSelector","Avatar","Box","IconButton","List","ListItem","ListItemAvatar","ListItemText","Popover","SvgIcon","Tooltip","Typography","makeStyles","Users","UsersIcon","OnlineIndicator","getContacts","useStyles","theme","popover","width","padding","spacing","list","listItemText","marginRight","lastActivity","whiteSpace","Contacts","classes","ref","dispatch","state","chat","contacts","isOpen","setOpen","handleOpen","handleClose","vertical","horizontal","paper","current","allIds","map","contactId","contact","byId","id","avatar","name","isActive","fromNow"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  useState,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux';\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Users as UsersIcon } from 'react-feather';\nimport OnlineIndicator from 'src/components/OnlineIndicator';\nimport { getContacts } from 'src/actions/chatActions';\n\nconst useStyles = makeStyles((theme) => ({\n  popover: {\n    width: 320,\n    padding: theme.spacing(2)\n  },\n  list: {\n    padding: theme.spacing(1, 3)\n  },\n  listItemText: {\n    marginRight: theme.spacing(1)\n  },\n  lastActivity: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction Contacts() {\n  const classes = useStyles();\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n  const { contacts } = useSelector((state) => state.chat);\n  const [isOpen, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Tooltip title=\"Contacts\">\n        <IconButton\n          color=\"inherit\"\n          onClick={handleOpen}\n          ref={ref}\n        >\n          <SvgIcon fontSize=\"small\">\n            <UsersIcon />\n          </SvgIcon>\n        </IconButton>\n      </Tooltip>\n      <Popover\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        classes={{ paper: classes.popover }}\n        anchorEl={ref.current}\n        onClose={handleClose}\n        open={isOpen}\n      >\n\n        <Typography\n          variant=\"h4\"\n          color=\"textPrimary\"\n        >\n          Contacts\n        </Typography>\n        <Box mt={2}>\n          <List disablePadding>\n            {contacts.allIds.map((contactId) => {\n              const contact = contacts.byId[contactId];\n\n              return (\n                <ListItem\n                  disableGutters\n                  key={contact.id}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      alt=\"Person\"\n                      src={contact.avatar}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    className={classes.listItemText}\n                    disableTypography\n                    primary={(\n                      <Link\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        display=\"block\"\n                        underline=\"none\"\n                        noWrap\n                        to=\"#\"\n                        variant=\"h6\"\n                      >\n                        {contact.name}\n                      </Link>\n                    )}\n                  />\n                  {contact.isActive ? (\n                    <OnlineIndicator\n                      size=\"small\"\n                      status=\"online\"\n                    />\n                  ) : (\n                    <Typography\n                      color=\"textSecondary\"\n                      noWrap\n                      variant=\"caption\"\n                    >\n                      {moment(contact.lastActivity).fromNow()}\n                    </Typography>\n                  )}\n                </ListItem>\n              );\n            })}\n          </List>\n        </Box>\n      </Popover>\n    </>\n  );\n}\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}