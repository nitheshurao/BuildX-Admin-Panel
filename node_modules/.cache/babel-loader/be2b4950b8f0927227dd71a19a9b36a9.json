{"ast":null,"code":"import _toConsumableArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/InvoiceListView/Results.js\";\n\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Avatar, Box, Button, Card, Checkbox, InputAdornment, IconButton, Link, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, Typography, colors, makeStyles } from '@material-ui/core';\nimport { Edit as EditIcon, ArrowRight as ArrowRightIcon, Search as SearchIcon } from 'react-feather';\nimport Label from 'src/components/Label';\nimport getInitials from 'src/utils/getInitials';\nvar statusOptions = [{\n  id: 'all',\n  name: 'All'\n}, {\n  id: 'paid',\n  name: 'Paid'\n}, {\n  id: 'pending',\n  name: 'Pending'\n}, {\n  id: 'canceled',\n  name: 'Canceled'\n}];\nvar sortOptions = [{\n  value: 'createdAt|desc',\n  label: 'Newest first'\n}, {\n  value: 'createdAt|asc',\n  label: 'Oldest first'\n}];\n\nfunction getStatusLabel(inventoryType) {\n  var map = {\n    paid: {\n      text: 'Paid',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    },\n    canceled: {\n      text: 'Canceled',\n      color: 'error'\n    }\n  };\n  var _map$inventoryType = map[inventoryType],\n      text = _map$inventoryType.text,\n      color = _map$inventoryType.color;\n  return (\n    /*#__PURE__*/\n    React.createElement(Label, {\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, text)\n  );\n}\n\nfunction applyFilters(invoices, query, filters) {\n  return invoices.filter(function (invoice) {\n    var matches = true;\n\n    if (query) {\n      var properties = ['name', 'email'];\n      var containsQuery = false;\n      properties.forEach(function (property) {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    queryField: {\n      width: 500\n    },\n    statusField: {\n      flexBasis: 200\n    },\n    bulkOperations: {\n      position: 'relative'\n    },\n    bulkActions: {\n      paddingLeft: 4,\n      paddingRight: 4,\n      marginTop: 6,\n      position: 'absolute',\n      width: '100%',\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    },\n    bulkAction: {\n      marginLeft: theme.spacing(2)\n    },\n    avatar: {\n      backgroundColor: colors.red[500],\n      color: colors.common.white\n    }\n  };\n});\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      invoices = _ref.invoices,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"invoices\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedInvoices = _useState2[0],\n      setSelectedInvoices = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      limit = _useState6[0],\n      setLimit = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState(sortOptions[0].value),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sort = _useState10[0],\n      setSort = _useState10[1];\n\n  var _useState11 = useState({\n    status: null\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filters = _useState12[0],\n      setFilters = _useState12[1];\n\n  var handleQueryChange = function handleQueryChange(event) {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  var handleStatusChange = function handleStatusChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread({}, prevFilters, {\n        status: value\n      });\n    });\n  };\n\n  var handleSortChange = function handleSortChange(event) {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  var handleSelectAllInvoices = function handleSelectAllInvoices(event) {\n    setSelectedInvoices(event.target.checked ? invoices.map(function (invoice) {\n      return invoice.id;\n    }) : []);\n  };\n\n  var handleSelectOneInvoice = function handleSelectOneInvoice(event, invoiceId) {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices(function (prevSelected) {\n        return [].concat(_toConsumableArray(prevSelected), [invoiceId]);\n      });\n    } else {\n      setSelectedInvoices(function (prevSelected) {\n        return prevSelected.filter(function (id) {\n          return id !== invoiceId;\n        });\n      });\n    }\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleLimitChange = function handleLimitChange(event) {\n    setLimit(event.target.value);\n  }; // Usually query is done on backend with indexing solutions\n\n\n  var filteredInvoices = applyFilters(invoices, query, filters);\n  var paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  var enableBulkOperations = selectedInvoices.length > 0;\n  var selectedSomeInvoices = selectedInvoices.length > 0 && selectedInvoices.length < invoices.length;\n  var selectedAllInvoices = selectedInvoices.length === invoices.length;\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      p: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      className: classes.queryField,\n      InputProps: {\n        startAdornment:\n        /*#__PURE__*/\n        React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          color: \"action\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SearchIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }\n        })))\n      },\n      onChange: handleQueryChange,\n      placeholder: \"Search invoices by customer\",\n      value: query,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      label: \"Sort By\",\n      name: \"sort\",\n      onChange: handleSortChange,\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: sort,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, sortOptions.map(function (option) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }\n        }, option.label)\n      );\n    }))),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      className: classes.statusField,\n      label: \"Status\",\n      name: \"status\",\n      onChange: handleStatusChange,\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: filters.status || 'all',\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, statusOptions.map(function (statusOption) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: statusOption.id,\n          value: statusOption.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }\n        }, statusOption.name)\n      );\n    })))), enableBulkOperations &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.bulkOperations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.bulkActions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Checkbox, {\n      checked: selectedAllInvoices,\n      indeterminate: selectedSomeInvoices,\n      onChange: handleSelectAllInvoices,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.bulkAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, \"Delete\"),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outlined\",\n      className: classes.bulkAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, \"Edit\"))),\n    /*#__PURE__*/\n    React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      minWidth: 1200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Checkbox, {\n      checked: selectedAllInvoices,\n      indeterminate: selectedSomeInvoices,\n      onChange: handleSelectAllInvoices,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, \"Customer\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, \"Status\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, \"Amount\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, \"ID\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, \"Date\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, \"Actions\"))),\n    /*#__PURE__*/\n    React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, paginatedInvoices.map(function (invoice) {\n      var isInvoiceSelected = selectedInvoices.includes(invoice.id);\n      return (\n        /*#__PURE__*/\n        React.createElement(TableRow, {\n          hover: true,\n          key: invoice.id,\n          selected: isInvoiceSelected,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Checkbox, {\n          checked: isInvoiceSelected,\n          onChange: function onChange(event) {\n            return handleSelectOneInvoice(event, invoice.id);\n          },\n          value: isInvoiceSelected,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 23\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Avatar, {\n          className: classes.avatar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }\n        }, getInitials(invoice.customer.name)),\n        /*#__PURE__*/\n        React.createElement(Box, {\n          ml: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Link, {\n          variant: \"subtitle2\",\n          color: \"textPrimary\",\n          component: RouterLink,\n          underline: \"none\",\n          to: \"#\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 27\n          }\n        }, invoice.customer.name),\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 27\n          }\n        }, invoice.customer.email)))),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 21\n          }\n        }, getStatusLabel(invoice.status)),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 21\n          }\n        }, invoice.currency, invoice.amount.toFixed(2)),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 21\n          }\n        }, invoice.id),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 21\n          }\n        }, moment(invoice.createdAt).format('DD/MM/YYYY')),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          align: \"right\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          component: RouterLink,\n          to: \"#\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(EditIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 27\n          }\n        }))),\n        /*#__PURE__*/\n        React.createElement(IconButton, {\n          component: RouterLink,\n          to: \"/app/management/invoices/1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(SvgIcon, {\n          fontSize: \"small\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ArrowRightIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 27\n          }\n        })))))\n      );\n    }))))),\n    /*#__PURE__*/\n    React.createElement(TablePagination, {\n      component: \"div\",\n      count: filteredInvoices.length,\n      onChangePage: handlePageChange,\n      onChangeRowsPerPage: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  invoices: PropTypes.array\n};\nResults.defaultProps = {\n  invoices: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/InvoiceListView/Results.js"],"names":["React","useState","Link","RouterLink","clsx","moment","PropTypes","PerfectScrollbar","Avatar","Box","Button","Card","Checkbox","InputAdornment","IconButton","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","Typography","colors","makeStyles","Edit","EditIcon","ArrowRight","ArrowRightIcon","Search","SearchIcon","Label","getInitials","statusOptions","id","name","sortOptions","value","label","getStatusLabel","inventoryType","map","paid","text","color","pending","canceled","applyFilters","invoices","query","filters","filter","invoice","matches","properties","containsQuery","forEach","property","customer","toLowerCase","includes","status","applyPagination","customers","page","limit","slice","useStyles","theme","root","queryField","width","statusField","flexBasis","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","default","bulkAction","marginLeft","spacing","avatar","red","common","white","Results","className","rest","classes","selectedInvoices","setSelectedInvoices","setPage","setLimit","setQuery","sort","setSort","setFilters","handleQueryChange","event","persist","target","handleStatusChange","prevFilters","handleSortChange","handleSelectAllInvoices","checked","handleSelectOneInvoice","invoiceId","prevSelected","handlePageChange","newPage","handleLimitChange","filteredInvoices","paginatedInvoices","enableBulkOperations","length","selectedSomeInvoices","selectedAllInvoices","startAdornment","native","option","statusOption","isInvoiceSelected","email","currency","amount","toFixed","createdAt","format","propTypes","string","array","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\nimport getInitials from 'src/utils/getInitials';\n\nconst statusOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'paid',\n    name: 'Paid'\n  },\n  {\n    id: 'pending',\n    name: 'Pending'\n  },\n  {\n    id: 'canceled',\n    name: 'Canceled'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'createdAt|desc',\n    label: 'Newest first'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Oldest first'\n  }\n];\n\nfunction getStatusLabel(inventoryType) {\n  const map = {\n    paid: {\n      text: 'Paid',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    },\n    canceled: {\n      text: 'Canceled',\n      color: 'error'\n    }\n  };\n\n  const { text, color } = map[inventoryType];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n}\n\nfunction applyFilters(invoices, query, filters) {\n  return invoices.filter((invoice) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name', 'email'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  statusField: {\n    flexBasis: 200\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: colors.red[500],\n    color: colors.common.white\n  }\n}));\n\nfunction Results({ className, invoices, ...rest }) {\n  const classes = useStyles();\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllInvoices = (event) => {\n    setSelectedInvoices(event.target.checked\n      ? invoices.map((invoice) => invoice.id)\n      : []);\n  };\n\n  const handleSelectOneInvoice = (event, invoiceId) => {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\n    } else {\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredInvoices = applyFilters(invoices, query, filters);\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  const enableBulkOperations = selectedInvoices.length > 0;\n  const selectedSomeInvoices = selectedInvoices.length > 0 && selectedInvoices.length < invoices.length;\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon\n                    fontSize=\"small\"\n                    color=\"action\"\n                  >\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search invoices by customer\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.statusField}\n            label=\"Status\"\n            name=\"status\"\n            onChange={handleStatusChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.status || 'all'}\n            variant=\"outlined\"\n          >\n            {statusOptions.map((statusOption) => (\n              <option\n                key={statusOption.id}\n                value={statusOption.id}\n              >\n                {statusOption.name}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllInvoices}\n              indeterminate={selectedSomeInvoices}\n              onChange={handleSelectAllInvoices}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllInvoices}\n                    indeterminate={selectedSomeInvoices}\n                    onChange={handleSelectAllInvoices}\n                  />\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n                <TableCell>\n                  ID\n                </TableCell>\n                <TableCell>\n                  Date\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedInvoices.map((invoice) => {\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={invoice.id}\n                    selected={isInvoiceSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isInvoiceSelected}\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\n                        value={isInvoiceSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar className={classes.avatar}>\n                          {getInitials(invoice.customer.name)}\n                        </Avatar>\n                        <Box ml={2}>\n                          <Link\n                            variant=\"subtitle2\"\n                            color=\"textPrimary\"\n                            component={RouterLink}\n                            underline=\"none\"\n                            to=\"#\"\n                          >\n                            {invoice.customer.name}\n                          </Link>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            {invoice.customer.email}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusLabel(invoice.status)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.currency}\n                      {invoice.amount.toFixed(2)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.id}\n                    </TableCell>\n                    <TableCell>\n                      {moment(invoice.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/app/management/invoices/1\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredInvoices.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  invoices: PropTypes.array\n};\n\nResults.defaultProps = {\n  invoices: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}