{"ast":null,"code":"import _classCallCheck from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import jwtDecode from'jwt-decode';import axios from'src/utils/axios';var AuthService=/*#__PURE__*/function(){function AuthService(){var _this=this;_classCallCheck(this,AuthService);this.setAxiosInterceptors=function(_ref){var onLogout=_ref.onLogout;axios.interceptors.response.use(function(response){return response;},function(error){if(error.response&&error.response.status===401){_this.setSession(null);if(onLogout){onLogout();}}return Promise.reject(error);});};this.loginWithEmailAndPassword=function(email,password){return new Promise(function(resolve,reject){axios.post('/api/account/login',{email:email,password:password}).then(function(response){if(response.data.user){_this.setSession(response.data.accessToken);resolve(response.data.user);}else{reject(response.data.error);}}).catch(function(error){reject(error);});});};this.loginInWithToken=function(){return new Promise(function(resolve,reject){axios.get('/api/account/me').then(function(response){if(response.data.user){resolve(response.data.user);}else{reject(response.data.error);}}).catch(function(error){reject(error);});});};this.logout=function(){_this.setSession(null);};this.setSession=function(accessToken){if(accessToken){localStorage.setItem('accessToken',accessToken);axios.defaults.headers.common.Authorization=\"Bearer \".concat(accessToken);}else{localStorage.removeItem('accessToken');delete axios.defaults.headers.common.Authorization;}};this.getAccessToken=function(){return localStorage.getItem('accessToken');};this.isValidToken=function(accessToken){if(!accessToken){return false;}var decoded=jwtDecode(accessToken);var currentTime=Date.now()/1000;return decoded.exp>currentTime;};this.isAuthenticated=function(){return!!_this.getAccessToken();};}_createClass(AuthService,[{key:\"handleAuthentication\",value:function handleAuthentication(){var accessToken=this.getAccessToken();if(!accessToken){return;}if(this.isValidToken(accessToken)){this.setSession(accessToken);}else{this.setSession(null);}}}]);return AuthService;}();var authService=new AuthService();export default authService;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/services/authService.js"],"names":["jwtDecode","axios","AuthService","setAxiosInterceptors","onLogout","interceptors","response","use","error","status","setSession","Promise","reject","loginWithEmailAndPassword","email","password","resolve","post","then","data","user","accessToken","catch","loginInWithToken","get","logout","localStorage","setItem","defaults","headers","common","Authorization","removeItem","getAccessToken","getItem","isValidToken","decoded","currentTime","Date","now","exp","isAuthenticated","authService"],"mappings":"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","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport axios from 'src/utils/axios';\n\nclass AuthService {\n  setAxiosInterceptors = ({ onLogout }) => {\n    axios.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response && error.response.status === 401) {\n          this.setSession(null);\n\n          if (onLogout) {\n            onLogout();\n          }\n        }\n\n        return Promise.reject(error);\n      }\n    );\n  };\n\n  handleAuthentication() {\n    const accessToken = this.getAccessToken();\n\n    if (!accessToken) {\n      return;\n    }\n\n    if (this.isValidToken(accessToken)) {\n      this.setSession(accessToken);\n    } else {\n      this.setSession(null);\n    }\n  }\n\n  loginWithEmailAndPassword = (email, password) => new Promise((resolve, reject) => {\n    axios.post('/api/account/login', { email, password })\n      .then((response) => {\n        if (response.data.user) {\n          this.setSession(response.data.accessToken);\n          resolve(response.data.user);\n        } else {\n          reject(response.data.error);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  })\n\n  loginInWithToken = () => new Promise((resolve, reject) => {\n    axios.get('/api/account/me')\n      .then((response) => {\n        if (response.data.user) {\n          resolve(response.data.user);\n        } else {\n          reject(response.data.error);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  })\n\n  logout = () => {\n    this.setSession(null);\n  }\n\n  setSession = (accessToken) => {\n    if (accessToken) {\n      localStorage.setItem('accessToken', accessToken);\n      axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n    } else {\n      localStorage.removeItem('accessToken');\n      delete axios.defaults.headers.common.Authorization;\n    }\n  }\n\n  getAccessToken = () => localStorage.getItem('accessToken');\n\n  isValidToken = (accessToken) => {\n    if (!accessToken) {\n      return false;\n    }\n\n    const decoded = jwtDecode(accessToken);\n    const currentTime = Date.now() / 1000;\n\n    return decoded.exp > currentTime;\n  }\n\n  isAuthenticated = () => !!this.getAccessToken()\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}