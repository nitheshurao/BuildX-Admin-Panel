{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/components/PostCard/index.js\";\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport { Avatar, Box, Card, CardActionArea, CardHeader, CardMedia, Divider, Link, Typography, makeStyles } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {},\n    date: {\n      marginLeft: 6\n    },\n    media: {\n      height: 500,\n      backgroundPosition: 'top'\n    }\n  };\n});\n\nfunction PostCard(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      post = _ref.post,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"post\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      openedFile = _useState2[0],\n      setOpenedFile = _useState2[1];\n\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      avatar:\n      /*#__PURE__*/\n      React.createElement(Avatar, {\n        alt: \"Person\",\n        className: classes.avatar,\n        component: RouterLink,\n        src: post.author.avatar,\n        to: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }),\n      disableTypography: true,\n      subheader:\n      /*#__PURE__*/\n      React.createElement(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(AccessTimeIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        className: classes.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, moment(post.createdAt).fromNow())),\n      title:\n      /*#__PURE__*/\n      React.createElement(Link, {\n        color: \"textPrimary\",\n        component: RouterLink,\n        to: \"#\",\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, post.author.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      px: 3,\n      pb: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, post.message), post.media &&\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardActionArea, {\n      onClick: function onClick() {\n        return setOpenedFile(post.media);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardMedia, {\n      className: classes.media,\n      image: post.media,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Reactions, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      my: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })), post.comments.map(function (comment) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Comment, {\n          comment: comment,\n          key: comment.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        })\n      );\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      my: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(CommentAdd, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }))), openedFile &&\n    /*#__PURE__*/\n    React.createElement(Lightbox, {\n      large: openedFile,\n      onClose: function onClose() {\n        return setOpenedFile(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }))\n  );\n}\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/components/PostCard/index.js"],"names":["React","useState","Link","RouterLink","PropTypes","clsx","moment","Lightbox","Avatar","Box","Card","CardActionArea","CardHeader","CardMedia","Divider","Typography","makeStyles","AccessTimeIcon","Reactions","Comment","CommentAdd","useStyles","root","date","marginLeft","media","height","backgroundPosition","PostCard","className","post","rest","classes","openedFile","setOpenedFile","avatar","author","createdAt","fromNow","name","message","comments","map","comment","id","propTypes","string","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,cAJF,EAKEC,UALF,EAMEC,SANF,EAOEC,OAPF,EAQEZ,IARF,EASEa,UATF,EAUEC,UAVF,QAWO,mBAXP;AAYA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAC;AAAA,SAAO;AAClCM,IAAAA,IAAI,EAAE,EAD4B;AAElCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KAF4B;AAKlCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,GADH;AAELC,MAAAA,kBAAkB,EAAE;AAFf;AAL2B,GAAP;AAAA,CAAD,CAA5B;;AAWA,SAASC,QAAT,OAAgD;AAAA;;AAAA,MAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAARC,IAAQ;;AAC9C,MAAMC,OAAO,GAAGX,SAAS,EAAzB;;AAD8C,kBAEVpB,QAAQ,CAAC,IAAD,CAFE;AAAA;AAAA,MAEvCgC,UAFuC;AAAA,MAE3BC,aAF2B;;AAI9C;AAAA;AACE;AAAA;AACE,wBAAC,IAAD;AACE,MAAA,SAAS,EAAE7B,IAAI,CAAC2B,OAAO,CAACV,IAAT,EAAeO,SAAf;AADjB,OAEME,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,wBAAC,UAAD;AACE,MAAA,MAAM;AAAA;AACJ,0BAAC,MAAD;AACE,QAAA,GAAG,EAAC,QADN;AAEE,QAAA,SAAS,EAAEC,OAAO,CAACG,MAFrB;AAGE,QAAA,SAAS,EAAEhC,UAHb;AAIE,QAAA,GAAG,EAAE2B,IAAI,CAACM,MAAL,CAAYD,MAJnB;AAKE,QAAA,EAAE,EAAC,GALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAUE,MAAA,iBAAiB,MAVnB;AAWE,MAAA,SAAS;AAAA;AACP,0BAAC,GAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,UAAU,EAAC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,0BAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF;AAAA;AAKE,0BAAC,UAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,KAAK,EAAC,eAFR;AAGE,QAAA,SAAS,EAAEH,OAAO,CAACT,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGjB,MAAM,CAACwB,IAAI,CAACO,SAAN,CAAN,CAAuBC,OAAvB,EALH,CALF,CAZJ;AA0BE,MAAA,KAAK;AAAA;AACH,0BAAC,IAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,SAAS,EAAEnC,UAFb;AAGE,QAAA,EAAE,EAAC,GAHL;AAIE,QAAA,OAAO,EAAC,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG2B,IAAI,CAACM,MAAL,CAAYG,IANf,CA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF;AAAA;AAyCE,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,UAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGT,IAAI,CAACU,OAJR,CADF,EAOGV,IAAI,CAACL,KAAL;AAAA;AACD,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE;AAAA,eAAMS,aAAa,CAACJ,IAAI,CAACL,KAAN,CAAnB;AAAA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,SAAD;AACE,MAAA,SAAS,EAAEO,OAAO,CAACP,KADrB;AAEE,MAAA,KAAK,EAAEK,IAAI,CAACL,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CARF;AAAA;AAiBE,wBAAC,GAAD;AACE,MAAA,EAAE,EAAE,CADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGE,wBAAC,SAAD;AAAW,MAAA,IAAI,EAAEK,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAjBF;AAAA;AAsBE,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,EAyBGA,IAAI,CAACW,QAAL,CAAcC,GAAd,CAAkB,UAACC,OAAD;AAAA;AAAA;AACjB,4BAAC,OAAD;AACE,UAAA,OAAO,EAAEA,OADX;AAEE,UAAA,GAAG,EAAEA,OAAO,CAACC,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADiB;AAAA,KAAlB,CAzBH;AAAA;AA+BE,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/BF;AAAA;AAkCE,wBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,CAzCF,CADF,EA+EGX,UAAU;AAAA;AACT,wBAAC,QAAD;AACE,MAAA,KAAK,EAAEA,UADT;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhFJ;AADF;AAwFD;;AAEDN,QAAQ,CAACiB,SAAT,GAAqB;AACnBhB,EAAAA,SAAS,EAAEzB,SAAS,CAAC0C,MADF;AAEnBhB,EAAAA,IAAI,EAAE1B,SAAS,CAAC2C,MAAV,CAAiBC;AAFJ,CAArB;AAKA,eAAepB,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  }\n}));\n\nfunction PostCard({ className, post, ...rest }) {\n  const classes = useStyles();\n  const [openedFile, setOpenedFile] = useState(null);\n\n  return (\n    <>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader\n          avatar={(\n            <Avatar\n              alt=\"Person\"\n              className={classes.avatar}\n              component={RouterLink}\n              src={post.author.avatar}\n              to=\"#\"\n            />\n          )}\n          disableTypography\n          subheader={(\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          )}\n          title={(\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {post.author.name}\n            </Link>\n          )}\n        />\n        <Box px={3} pb={2}>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            {post.message}\n          </Typography>\n          {post.media && (\n          <Box mt={2}>\n            <CardActionArea onClick={() => setOpenedFile(post.media)}>\n              <CardMedia\n                className={classes.media}\n                image={post.media}\n              />\n            </CardActionArea>\n          </Box>\n          )}\n          <Box\n            mt={2}\n          >\n            <Reactions post={post} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          {post.comments.map((comment) => (\n            <Comment\n              comment={comment}\n              key={comment.id}\n            />\n          ))}\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <CommentAdd />\n        </Box>\n      </Card>\n      {openedFile && (\n        <Lightbox\n          large={openedFile}\n          onClose={() => setOpenedFile(null)}\n        />\n      )}\n    </>\n  );\n}\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}