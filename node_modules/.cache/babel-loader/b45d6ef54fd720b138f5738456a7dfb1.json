{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardAlternativeView/TopReferrals.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Avatar, Card, CardHeader, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography, makeStyles } from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    avatar: {\n      fontSize: 14,\n      fontWeight: theme.typography.fontWeightBold,\n      color: theme.palette.common.white\n    }\n  };\n});\n\nfunction TopReferrals(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      referrals = _useState2[0],\n      setReferrals = _useState2[1];\n\n  var getReferrals = useCallback(function () {\n    axios.get('/api/reports/top-referrals').then(function (response) {\n      if (isMountedRef.current) {\n        setReferrals(response.data.referrals);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getReferrals();\n  }, [getReferrals]);\n\n  if (!referrals) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      action:\n      /*#__PURE__*/\n      React.createElement(GenericMoreButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }),\n      title: \"Top Referrals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(List, {\n      disablePadding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, referrals.map(function (referral, i) {\n      return (\n        /*#__PURE__*/\n        React.createElement(ListItem, {\n          divider: i < referrals.length - 1,\n          key: referral.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(ListItemAvatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Avatar, {\n          className: classes.avatar,\n          size: \"small\",\n          style: {\n            backgroundColor: referral.color\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }\n        }, referral.initials)),\n        /*#__PURE__*/\n        React.createElement(ListItemText, {\n          primary: referral.name,\n          primaryTypographyProps: {\n            variant: 'h6'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, referral.value))\n      );\n    })))\n  );\n}\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\nexport default TopReferrals;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardAlternativeView/TopReferrals.js"],"names":["React","useState","useEffect","useCallback","clsx","PropTypes","Avatar","Card","CardHeader","Divider","List","ListItem","ListItemAvatar","ListItemText","Typography","makeStyles","GenericMoreButton","axios","useIsMountedRef","useStyles","theme","root","display","flexDirection","avatar","fontSize","fontWeight","typography","fontWeightBold","color","palette","common","white","TopReferrals","className","rest","classes","isMountedRef","referrals","setReferrals","getReferrals","get","then","response","current","data","map","referral","i","length","name","backgroundColor","initials","variant","value","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nfunction TopReferrals({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState(null);\n\n  const getReferrals = useCallback(() => {\n    axios\n      .get('/api/reports/top-referrals')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setReferrals(response.data.referrals);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  if (!referrals) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Top Referrals\"\n      />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem\n            divider={i < referrals.length - 1}\n            key={referral.name}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                size=\"small\"\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {referral.value}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n"]},"metadata":{},"sourceType":"module"}