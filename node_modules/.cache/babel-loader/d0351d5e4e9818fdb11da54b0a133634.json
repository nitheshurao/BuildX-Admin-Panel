{"ast":null,"code":"import _regeneratorRuntime from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectWithoutProperties from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{useDispatch}from'react-redux';import clsx from'clsx';import*as Yup from'yup';import{Formik}from'formik';import{Box,Button,TextField,FormHelperText,makeStyles}from'@material-ui/core';import{login}from'src/actions/accountActions';var useStyles=makeStyles(function(){return{root:{}};});function LoginForm(_ref){var className=_ref.className,onSubmitSuccess=_ref.onSubmitSuccess,rest=_objectWithoutProperties(_ref,[\"className\",\"onSubmitSuccess\"]);var classes=useStyles();var dispatch=useDispatch();return(/*#__PURE__*/React.createElement(Formik,{initialValues:{email:'admin@devias.io',password:'admin'},validationSchema:Yup.object().shape({email:Yup.string().email('Must be a valid email').max(100).required('Email is required'),password:Yup.string().max(100).required('Password is required')}),onSubmit:/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setErrors,setStatus,setSubmitting,message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setErrors=_ref2.setErrors,setStatus=_ref2.setStatus,setSubmitting=_ref2.setSubmitting;_context.prev=1;_context.next=4;return dispatch(login(values.email,values.password));case 4:onSubmitSuccess();_context.next=13;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);message=_context.t0.response&&_context.t0.response.data.message||'Something went wrong';setStatus({success:false});setErrors({submit:message});setSubmitting(false);case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}()},function(_ref4){var errors=_ref4.errors,handleBlur=_ref4.handleBlur,handleChange=_ref4.handleChange,handleSubmit=_ref4.handleSubmit,isSubmitting=_ref4.isSubmitting,touched=_ref4.touched,values=_ref4.values;return(/*#__PURE__*/React.createElement(\"form\",Object.assign({noValidate:true,className:clsx(classes.root,className),onSubmit:handleSubmit},rest),/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.email&&errors.email),fullWidth:true,autoFocus:true,helperText:touched.email&&errors.email,label:\"Email Address\",margin:\"normal\",name:\"email\",onBlur:handleBlur,onChange:handleChange,type:\"email\",value:values.email,variant:\"outlined\"}),/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.password&&errors.password),fullWidth:true,helperText:touched.password&&errors.password,label:\"Password\",margin:\"normal\",name:\"password\",onBlur:handleBlur,onChange:handleChange,type:\"password\",value:values.password,variant:\"outlined\"}),/*#__PURE__*/React.createElement(Box,{mt:2},/*#__PURE__*/React.createElement(Button,{color:\"secondary\",disabled:isSubmitting,fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\"},\"Log In\"),errors.submit&&/*#__PURE__*/React.createElement(Box,{mt:3},/*#__PURE__*/React.createElement(FormHelperText,{error:true},errors.submit)))));}));}LoginForm.defaultProps={onSubmitSuccess:function onSubmitSuccess(){}};export default LoginForm;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/auth/LoginView/LoginForm.js"],"names":["React","useDispatch","clsx","Yup","Formik","Box","Button","TextField","FormHelperText","makeStyles","login","useStyles","root","LoginForm","className","onSubmitSuccess","rest","classes","dispatch","email","password","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","message","response","data","success","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  TextField,\n  FormHelperText,\n  makeStyles\n} from '@material-ui/core';\nimport { login } from 'src/actions/accountActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction LoginForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'admin@devias.io',\n        password: 'admin'\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(100).required('Email is required'),\n        password: Yup.string().max(100).required('Password is required')\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await dispatch(login(values.email, values.password));\n          onSubmitSuccess();\n        } catch (error) {\n          const message = (error.response && error.response.data.message) || 'Something went wrong';\n\n          setStatus({ success: false });\n          setErrors({ submit: message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Log In\n            </Button>\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>\n                  {errors.submit}\n                </FormHelperText>\n              </Box>\n            )}\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\n\nLoginForm.defaultProps = {\n  onSubmitSuccess: () => {}\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}