{"ast":null,"code":"import _slicedToArray from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import{Link as RouterLink}from'react-router-dom';import clsx from'clsx';import moment from'moment';import{Button,Card,CardActions,CardHeader,Divider,Link,Table,TableBody,TableCell,TableRow,TextField,makeStyles}from'@material-ui/core';import ReceiptIcon from'@material-ui/icons/ReceiptOutlined';var useStyles=makeStyles(function(theme){return{root:{},actionIcon:{marginRight:theme.spacing(1)}};});var statusOptions=['Canceled','Completed','Rejected'];function OrderInfo(_ref){var order=_ref.order,className=_ref.className,rest=_objectWithoutProperties(_ref,[\"order\",\"className\"]);var classes=useStyles();var _useState=useState(statusOptions[0]),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var handleChange=function handleChange(event){event.persist();setStatus(event.target.value);};return(/*#__PURE__*/React.createElement(Card,Object.assign({className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(CardHeader,{title:\"Order info\"}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Customer\"),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Link,{component:RouterLink,to:\"/app/management/customers/1\"},order.customer.name),/*#__PURE__*/React.createElement(\"div\",null,order.customer.address),/*#__PURE__*/React.createElement(\"div\",null,order.customer.city),/*#__PURE__*/React.createElement(\"div\",null,order.customer.country))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"ID\"),/*#__PURE__*/React.createElement(TableCell,null,\"#\",order.id.split('-').shift())),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Ref\"),/*#__PURE__*/React.createElement(TableCell,null,order.ref)),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Date\"),/*#__PURE__*/React.createElement(TableCell,null,moment(order.createdAt).format('DD/MM/YYYY HH:MM'))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Promotion Code\"),/*#__PURE__*/React.createElement(TableCell,null,order.promoCode?order.promoCode:'N/A')),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Amount\"),/*#__PURE__*/React.createElement(TableCell,null,order.currency,order.value)),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Status\"),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(TextField,{fullWidth:true,name:\"option\",onChange:handleChange,select:true,SelectProps:{native:true},value:status,variant:\"outlined\"},statusOptions.map(function(option){return(/*#__PURE__*/React.createElement(\"option\",{key:option,value:option},option));})))))),/*#__PURE__*/React.createElement(CardActions,null,/*#__PURE__*/React.createElement(Button,null,/*#__PURE__*/React.createElement(ReceiptIcon,{className:classes.actionIcon}),\"Resend invoice\"))));}export default OrderInfo;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/OrderDetailsView/OrderInfo.js"],"names":["React","useState","Link","RouterLink","clsx","moment","Button","Card","CardActions","CardHeader","Divider","Table","TableBody","TableCell","TableRow","TextField","makeStyles","ReceiptIcon","useStyles","theme","root","actionIcon","marginRight","spacing","statusOptions","OrderInfo","order","className","rest","classes","status","setStatus","handleChange","event","persist","target","value","customer","name","address","city","country","id","split","shift","ref","createdAt","format","promoCode","currency","native","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst statusOptions = ['Canceled', 'Completed', 'Rejected'];\n\nfunction OrderInfo({ order, className, ...rest }) {\n  const classes = useStyles();\n  const [status, setStatus] = useState(statusOptions[0]);\n\n  const handleChange = (event) => {\n    event.persist();\n    setStatus(event.target.value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>Customer</TableCell>\n            <TableCell>\n              <Link\n                component={RouterLink}\n                to=\"/app/management/customers/1\"\n              >\n                {order.customer.name}\n              </Link>\n              <div>{order.customer.address}</div>\n              <div>{order.customer.city}</div>\n              <div>{order.customer.country}</div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              ID\n            </TableCell>\n            <TableCell>\n              #\n              {order.id.split('-').shift()}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Ref</TableCell>\n            <TableCell>{order.ref}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>\n              {moment(order.createdAt).format('DD/MM/YYYY HH:MM')}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Promotion Code</TableCell>\n            <TableCell>{order.promoCode ? order.promoCode : 'N/A'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Amount</TableCell>\n            <TableCell>\n              {order.currency}\n              {order.value}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Status</TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                name=\"option\"\n                onChange={handleChange}\n                select\n                SelectProps={{ native: true }}\n                value={status}\n                variant=\"outlined\"\n              >\n                {statusOptions.map((option) => (\n                  <option\n                    key={option}\n                    value={option}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <CardActions>\n        <Button>\n          <ReceiptIcon className={classes.actionIcon} />\n          Resend invoice\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderInfo;\n"]},"metadata":{},"sourceType":"module"}