{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardView/TeamTasks/index.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, CardHeader, Divider, List, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TaskItem from './TaskItem';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nfunction TeamTasks(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var getTasks = useCallback(function () {\n    axios.get('/api/reports/tasks').then(function (response) {\n      if (isMountedRef.current) {\n        setTasks(response.data.tasks);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getTasks();\n  }, [getTasks]);\n\n  if (!tasks) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      action:\n      /*#__PURE__*/\n      React.createElement(GenericMoreButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }),\n      title: \"Team Tasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      minWidth: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, tasks.map(function (task, i) {\n      return (\n        /*#__PURE__*/\n        React.createElement(TaskItem, {\n          divider: i < tasks.length - 1,\n          key: task.id,\n          task: task,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        })\n      );\n    })))))\n  );\n}\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\nexport default TeamTasks;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardView/TeamTasks/index.js"],"names":["React","useCallback","useState","useEffect","clsx","PropTypes","PerfectScrollbar","Box","Card","CardHeader","Divider","List","makeStyles","axios","useIsMountedRef","GenericMoreButton","TaskItem","useStyles","root","TeamTasks","className","rest","classes","isMountedRef","tasks","setTasks","getTasks","get","then","response","current","data","map","task","i","length","id","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,WADF,EAEEC,QAFF,EAGEC,SAHF,QAIO,OAJP;AAKA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,UANF,QAOO,mBAPP;AAQA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAC;AAAA,SAAO;AAClCM,IAAAA,IAAI,EAAE;AAD4B,GAAP;AAAA,CAAD,CAA5B;;AAIA,SAASC,SAAT,OAA2C;AAAA;;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAARC,IAAQ;;AACzC,MAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,MAAMM,YAAY,GAAGT,eAAe,EAApC;;AAFyC,kBAGfZ,QAAQ,CAAC,IAAD,CAHO;AAAA;AAAA,MAGlCsB,KAHkC;AAAA,MAG3BC,QAH2B;;AAKzC,MAAMC,QAAQ,GAAGzB,WAAW,CAAC,YAAM;AACjCY,IAAAA,KAAK,CACFc,GADH,CACO,oBADP,EAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClB,UAAIN,YAAY,CAACO,OAAjB,EAA0B;AACxBL,QAAAA,QAAQ,CAACI,QAAQ,CAACE,IAAT,CAAcP,KAAf,CAAR;AACD;AACF,KANH;AAOD,GAR2B,EAQzB,CAACD,YAAD,CARyB,CAA5B;AAUApB,EAAAA,SAAS,CAAC,YAAM;AACduB,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,MAAI,CAACF,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AAED;AAAA;AACE,wBAAC,IAAD;AACE,MAAA,SAAS,EAAEpB,IAAI,CAACkB,OAAO,CAACJ,IAAT,EAAeE,SAAf;AADjB,OAEMC,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,wBAAC,UAAD;AACE,MAAA,MAAM;AAAA;AAAE,0BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,KAAK,EAAC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF;AAAA;AAQE,wBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF;AAAA;AASE,wBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA;AAAA;AACT,4BAAC,QAAD;AACE,UAAA,OAAO,EAAEA,CAAC,GAAGV,KAAK,CAACW,MAAN,GAAe,CAD9B;AAEE,UAAA,GAAG,EAAEF,IAAI,CAACG,EAFZ;AAGE,UAAA,IAAI,EAAEH,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADS;AAAA,KAAV,CADH,CADF,CADF,CATF;AADF;AAyBD;;AAEDd,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,SAAS,EAAEf,SAAS,CAACiC;AADD,CAAtB;AAIA,eAAenB,SAAf","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TaskItem from './TaskItem';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction TeamTasks({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [tasks, setTasks] = useState(null);\n\n  const getTasks = useCallback(() => {\n    axios\n      .get('/api/reports/tasks')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setTasks(response.data.tasks);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getTasks();\n  }, [getTasks]);\n\n  if (!tasks) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Team Tasks\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={400}>\n          <List>\n            {tasks.map((task, i) => (\n              <TaskItem\n                divider={i < tasks.length - 1}\n                key={task.id}\n                task={task}\n              />\n            ))}\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TeamTasks;\n"]},"metadata":{},"sourceType":"module"}