{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerDetailsView/Details/Emails.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, Table, TableBody, TableCell, TableRow, TextField, makeStyles } from '@material-ui/core';\nimport MaiIcon from '@material-ui/icons/MailOutline';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    actionIcon: {\n      marginRight: theme.spacing(1)\n    },\n    cell: {\n      padding: theme.spacing(1)\n    }\n  };\n});\nvar emailOptions = ['Resend last invoice', 'Send password reset', 'Send verification'];\n\nfunction Emails(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(emailOptions[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      emailOption = _useState2[0],\n      setEmailOption = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emails = _useState4[0],\n      setEmails = _useState4[1];\n\n  var getMails = useCallback(function () {\n    axios.get('/api/management/customers/1/emails').then(function (response) {\n      if (isMountedRef.current) {\n        setEmails(response.data.emails);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getMails();\n  }, [getMails]);\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      title: \"Send emails\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      fullWidth: true,\n      name: \"option\",\n      onChange: function onChange(event) {\n        return setEmailOption(event.target.value);\n      },\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: emailOption,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, emailOptions.map(function (option) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: option,\n          value: option,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, option)\n      );\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(MaiIcon, {\n      className: classes.actionIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), \"Send email\")), emails &&\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, emails.map(function (email) {\n      return (\n        /*#__PURE__*/\n        React.createElement(TableRow, {\n          key: email.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          className: classes.cell,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }, moment(email.createdAt).format('DD/MM/YYYY | HH:MM')),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          className: classes.cell,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }, email.description))\n      );\n    }))))))\n  );\n}\n\nEmails.propTypes = {\n  className: PropTypes.string,\n  emails: PropTypes.array\n};\nexport default Emails;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerDetailsView/Details/Emails.js"],"names":["React","useState","useCallback","useEffect","PropTypes","clsx","moment","Box","Button","Card","CardContent","CardHeader","Divider","Table","TableBody","TableCell","TableRow","TextField","makeStyles","MaiIcon","axios","useIsMountedRef","useStyles","theme","root","actionIcon","marginRight","spacing","cell","padding","emailOptions","Emails","className","rest","classes","isMountedRef","emailOption","setEmailOption","emails","setEmails","getMails","get","then","response","current","data","event","target","value","native","map","option","email","id","createdAt","format","description","propTypes","string","array"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport MaiIcon from '@material-ui/icons/MailOutline';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  },\n  cell: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst emailOptions = [\n  'Resend last invoice',\n  'Send password reset',\n  'Send verification'\n];\n\nfunction Emails({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [emailOption, setEmailOption] = useState(emailOptions[0]);\n  const [emails, setEmails] = useState(null);\n\n  const getMails = useCallback(() => {\n    axios\n      .get('/api/management/customers/1/emails')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEmails(response.data.emails);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getMails();\n  }, [getMails]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Send emails\" />\n      <Divider />\n      <CardContent>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={(event) => setEmailOption(event.target.value)}\n          select\n          SelectProps={{ native: true }}\n          value={emailOption}\n          variant=\"outlined\"\n        >\n          {emailOptions.map((option) => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Box mt={2}>\n          <Button\n            variant=\"contained\"\n          >\n            <MaiIcon className={classes.actionIcon} />\n            Send email\n          </Button>\n        </Box>\n        {emails && (\n          <Box mt={2}>\n            <Table>\n              <TableBody>\n                {emails.map((email) => (\n                  <TableRow key={email.id}>\n                    <TableCell className={classes.cell}>\n                      {moment(email.createdAt).format('DD/MM/YYYY | HH:MM')}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {email.description}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nEmails.propTypes = {\n  className: PropTypes.string,\n  emails: PropTypes.array\n};\n\nexport default Emails;\n"]},"metadata":{},"sourceType":"module"}