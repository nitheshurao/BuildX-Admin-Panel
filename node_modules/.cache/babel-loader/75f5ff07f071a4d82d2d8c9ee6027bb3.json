{"ast":null,"code":"import _regeneratorRuntime from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerEditView/CustomerEditForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, Card, CardContent, Grid, Switch, TextField, Typography, makeStyles } from '@material-ui/core';\nimport wait from 'src/utils/wait';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nfunction CustomerEditForm(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      customer = _ref.customer,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"customer\"]);\n\n  var classes = useStyles();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Formik, {\n      initialValues: {\n        address1: customer.address1 || '',\n        address2: customer.address2 || '',\n        country: customer.country || '',\n        discountedPrices: customer.discountedPrices || false,\n        email: customer.email || '',\n        fullName: customer.fullName || '',\n        phone: customer.phone || '',\n        state: customer.state || '',\n        verified: customer.verified || false\n      },\n      validationSchema: Yup.object().shape({\n        address1: Yup.string().max(255),\n        address2: Yup.string().max(255),\n        country: Yup.string().max(255),\n        discountedPrices: Yup.bool(),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        fullName: Yup.string().max(255).required('Name is required'),\n        phone: Yup.string().max(15),\n        state: Yup.string().max(255),\n        verified: Yup.bool()\n      }),\n      onSubmit:\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var resetForm, setErrors, setStatus, setSubmitting;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  resetForm = _ref2.resetForm, setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                  _context.prev = 1;\n                  _context.next = 4;\n                  return wait(500);\n\n                case 4:\n                  resetForm();\n                  setStatus({\n                    success: true\n                  });\n                  setSubmitting(false);\n                  enqueueSnackbar('Customer updated', {\n                    variant: 'success',\n                    action:\n                    /*#__PURE__*/\n                    React.createElement(Button, {\n                      __self: _this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 21\n                      }\n                    }, \"See all\")\n                  });\n                  _context.next = 15;\n                  break;\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t0 = _context[\"catch\"](1);\n                  setStatus({\n                    success: false\n                  });\n                  setErrors({\n                    submit: _context.t0.message\n                  });\n                  setSubmitting(false);\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[1, 10]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, function (_ref4) {\n      var errors = _ref4.errors,\n          handleBlur = _ref4.handleBlur,\n          handleChange = _ref4.handleChange,\n          handleSubmit = _ref4.handleSubmit,\n          isSubmitting = _ref4.isSubmitting,\n          touched = _ref4.touched,\n          values = _ref4.values;\n      return (\n        /*#__PURE__*/\n        React.createElement(\"form\", Object.assign({\n          className: clsx(classes.root, className),\n          onSubmit: handleSubmit\n        }, rest, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Card, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(CardContent, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          container: true,\n          spacing: 3,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.email && errors.email),\n          fullWidth: true,\n          helperText: touched.email && errors.email,\n          label: \"Email address\",\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          required: true,\n          value: values.email,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.fullName && errors.fullName),\n          fullWidth: true,\n          helperText: touched.fullName && errors.fullName,\n          label: \"Full name\",\n          name: \"fullName\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          required: true,\n          value: values.fullName,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.phone && errors.phone),\n          fullWidth: true,\n          helperText: touched.phone && errors.phone,\n          label: \"Phone number\",\n          name: \"phone\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.phone,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.state && errors.state),\n          fullWidth: true,\n          helperText: touched.state && errors.state,\n          label: \"State/Region\",\n          name: \"state\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.state,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.country && errors.country),\n          fullWidth: true,\n          helperText: touched.country && errors.country,\n          label: \"Country\",\n          name: \"country\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.country,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.address1 && errors.address1),\n          fullWidth: true,\n          helperText: touched.address1 && errors.address1,\n          label: \"Address 1\",\n          name: \"address1\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.address1,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TextField, {\n          error: Boolean(touched.address2 && errors.address2),\n          fullWidth: true,\n          helperText: touched.address2 && errors.address2,\n          label: \"Address 2\",\n          name: \"address2\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.address2,\n          variant: \"outlined\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"h5\",\n          color: \"textPrimary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }\n        }, \"Email Verified\"),\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }\n        }, \"Disabling this will automatically send the user a verification email\"),\n        /*#__PURE__*/\n        React.createElement(Switch, {\n          checked: values.verified,\n          color: \"secondary\",\n          edge: \"start\",\n          name: \"verified\",\n          onChange: handleChange,\n          value: values.verified,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 19\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"h5\",\n          color: \"textPrimary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }\n        }, \"Discounted Prices\"),\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }\n        }, \"This will give the user discountedprices for all products\"),\n        /*#__PURE__*/\n        React.createElement(Switch, {\n          checked: values.discountedPrices,\n          color: \"secondary\",\n          edge: \"start\",\n          name: \"discountedPrices\",\n          onChange: handleChange,\n          value: values.discountedPrices,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }\n        }))),\n        /*#__PURE__*/\n        React.createElement(Box, {\n          mt: 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }\n        }, \"Update Customer\")))))\n      );\n    })\n  );\n}\n\nCustomerEditForm.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\nexport default CustomerEditForm;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/management/CustomerEditView/CustomerEditForm.js"],"names":["React","PropTypes","clsx","Yup","Formik","useSnackbar","Box","Button","Card","CardContent","Grid","Switch","TextField","Typography","makeStyles","wait","useStyles","root","CustomerEditForm","className","customer","rest","classes","enqueueSnackbar","address1","address2","country","discountedPrices","email","fullName","phone","state","verified","object","shape","string","max","bool","required","values","resetForm","setErrors","setStatus","setSubmitting","success","variant","action","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction CustomerEditForm({\n  className,\n  customer,\n  ...rest\n}) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        address1: customer.address1 || '',\n        address2: customer.address2 || '',\n        country: customer.country || '',\n        discountedPrices: customer.discountedPrices || false,\n        email: customer.email || '',\n        fullName: customer.fullName || '',\n        phone: customer.phone || '',\n        state: customer.state || '',\n        verified: customer.verified || false\n      }}\n      validationSchema={Yup.object().shape({\n        address1: Yup.string().max(255),\n        address2: Yup.string().max(255),\n        country: Yup.string().max(255),\n        discountedPrices: Yup.bool(),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        fullName: Yup.string().max(255).required('Name is required'),\n        phone: Yup.string().max(15),\n        state: Yup.string().max(255),\n        verified: Yup.bool()\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Customer updated', {\n            variant: 'success',\n            action: <Button>See all</Button>\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n\n          <Card>\n            <CardContent>\n\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.fullName && errors.fullName)}\n                    fullWidth\n                    helperText={touched.fullName && errors.fullName}\n                    label=\"Full name\"\n                    name=\"fullName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.fullName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address1 && errors.address1)}\n                    fullWidth\n                    helperText={touched.address1 && errors.address1}\n                    label=\"Address 1\"\n                    name=\"address1\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address1}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address2 && errors.address2)}\n                    fullWidth\n                    helperText={touched.address2 && errors.address2}\n                    label=\"Address 2\"\n                    name=\"address2\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address2}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                  >\n                    Email Verified\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Disabling this will automatically send the user a verification\n                    email\n                  </Typography>\n                  <Switch\n                    checked={values.verified}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"verified\"\n                    onChange={handleChange}\n                    value={values.verified}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                  >\n                    Discounted Prices\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    This will give the user discountedprices for all products\n                  </Typography>\n                  <Switch\n                    checked={values.discountedPrices}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"discountedPrices\"\n                    onChange={handleChange}\n                    value={values.discountedPrices}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Customer\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nCustomerEditForm.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerEditForm;\n"]},"metadata":{},"sourceType":"module"}