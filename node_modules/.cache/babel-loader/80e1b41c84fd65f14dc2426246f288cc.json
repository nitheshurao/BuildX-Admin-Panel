{"ast":null,"code":"var _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/chat/ChatView/Sidebar/index.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Drawer, Hidden, makeStyles } from '@material-ui/core';\nimport { closeSidebar } from 'src/actions/chatActions';\nimport Toolbar from './Toolbar';\nimport ThreadList from './ThreadList';\nvar useStyles = makeStyles(function () {\n  return {\n    drawerDesktopRoot: {\n      width: 280,\n      flexShrink: 0\n    },\n    drawerDesktopPaper: {\n      position: 'relative'\n    },\n    drawerMobilePaper: {\n      position: 'relative',\n      width: 280\n    },\n    drawerMobileBackdrop: {\n      position: 'absolute'\n    }\n  };\n});\n\nfunction Sidebar(_ref) {\n  var containerRef = _ref.containerRef;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var location = useLocation();\n\n  var _useSelector = useSelector(function (state) {\n    return state.chat;\n  }),\n      sidebarOpen = _useSelector.sidebarOpen;\n\n  var handleCloseSidebar = function handleCloseSidebar() {\n    dispatch(closeSidebar());\n  };\n\n  useEffect(function () {\n    if (sidebarOpen) {\n      dispatch(closeSidebar());\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [location.pathname]);\n  var content =\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  },\n  /*#__PURE__*/\n  React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }),\n  /*#__PURE__*/\n  React.createElement(PerfectScrollbar, {\n    options: {\n      suppressScrollX: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  },\n  /*#__PURE__*/\n  React.createElement(ThreadList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        root: classes.drawerDesktopRoot,\n        paper: classes.drawerDesktopPaper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, content)),\n    /*#__PURE__*/\n    React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Drawer, {\n      variant: \"temporary\",\n      open: sidebarOpen,\n      onClose: handleCloseSidebar,\n      classes: {\n        paper: classes.drawerMobilePaper\n      },\n      style: {\n        position: 'absolute',\n        zIndex: 1200\n      },\n      BackdropProps: {\n        classes: {\n          root: classes.drawerMobileBackdrop\n        }\n      },\n      ModalProps: {\n        container: function container() {\n          return containerRef.current;\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, content)))\n  );\n}\n\nSidebar.propTypes = {\n  containerRef: PropTypes.any\n};\nexport default Sidebar;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/chat/ChatView/Sidebar/index.js"],"names":["React","useEffect","PropTypes","useLocation","PerfectScrollbar","useDispatch","useSelector","Drawer","Hidden","makeStyles","closeSidebar","Toolbar","ThreadList","useStyles","drawerDesktopRoot","width","flexShrink","drawerDesktopPaper","position","drawerMobilePaper","drawerMobileBackdrop","Sidebar","containerRef","classes","dispatch","location","state","chat","sidebarOpen","handleCloseSidebar","pathname","content","suppressScrollX","root","paper","zIndex","container","current","propTypes","any"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux';\nimport {\n  Drawer,\n  Hidden,\n  makeStyles\n} from '@material-ui/core';\nimport { closeSidebar } from 'src/actions/chatActions';\nimport Toolbar from './Toolbar';\nimport ThreadList from './ThreadList';\n\nconst useStyles = makeStyles(() => ({\n  drawerDesktopRoot: {\n    width: 280,\n    flexShrink: 0\n  },\n  drawerDesktopPaper: {\n    position: 'relative'\n  },\n  drawerMobilePaper: {\n    position: 'relative',\n    width: 280\n  },\n  drawerMobileBackdrop: {\n    position: 'absolute'\n  }\n}));\n\nfunction Sidebar({ containerRef }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { sidebarOpen } = useSelector((state) => state.chat);\n\n  const handleCloseSidebar = () => {\n    dispatch(closeSidebar());\n  };\n\n  useEffect(() => {\n    if (sidebarOpen) {\n      dispatch(closeSidebar());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <div>\n      <Toolbar />\n      <PerfectScrollbar options={{ suppressScrollX: true }}>\n        <ThreadList />\n      </PerfectScrollbar>\n    </div>\n  );\n\n  return (\n    <>\n      <Hidden smDown>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            root: classes.drawerDesktopRoot,\n            paper: classes.drawerDesktopPaper\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdUp>\n        <Drawer\n          variant=\"temporary\"\n          open={sidebarOpen}\n          onClose={handleCloseSidebar}\n          classes={{\n            paper: classes.drawerMobilePaper\n          }}\n          style={{ position: 'absolute', zIndex: 1200 }}\n          BackdropProps={{ classes: { root: classes.drawerMobileBackdrop } }}\n          ModalProps={{ container: () => containerRef.current }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n}\n\nSidebar.propTypes = {\n  containerRef: PropTypes.any\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}