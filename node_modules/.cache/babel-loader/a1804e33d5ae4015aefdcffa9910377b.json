{"ast":null,"code":"import _regeneratorRuntime from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectWithoutProperties from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import clsx from'clsx';import*as Yup from'yup';import{Formik}from'formik';import{useSnackbar}from'notistack';import{Box,Button,Card,CardContent,CardHeader,Divider,FormHelperText,Grid,TextField,makeStyles}from'@material-ui/core';import wait from'src/utils/wait';var useStyles=makeStyles(function(){return{root:{}};});function Security(_ref){var className=_ref.className,rest=_objectWithoutProperties(_ref,[\"className\"]);var classes=useStyles();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;return(/*#__PURE__*/React.createElement(Formik,{initialValues:{password:'',passwordConfirm:''},validationSchema:Yup.object().shape({password:Yup.string().min(7,'Must be at least 7 characters').max(255).required('Required'),passwordConfirm:Yup.string().oneOf([Yup.ref('password'),null],'Passwords must match').required('Required')}),onSubmit:/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var resetForm,setErrors,setStatus,setSubmitting;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:resetForm=_ref2.resetForm,setErrors=_ref2.setErrors,setStatus=_ref2.setStatus,setSubmitting=_ref2.setSubmitting;_context.prev=1;_context.next=4;return wait(500);case 4:resetForm();setStatus({success:true});setSubmitting(false);enqueueSnackbar('Password updated',{variant:'success'});_context.next=15;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);setStatus({success:false});setErrors({submit:_context.t0.message});setSubmitting(false);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}()},function(_ref4){var errors=_ref4.errors,handleBlur=_ref4.handleBlur,handleChange=_ref4.handleChange,handleSubmit=_ref4.handleSubmit,isSubmitting=_ref4.isSubmitting,touched=_ref4.touched,values=_ref4.values;return(/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Card,Object.assign({className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(CardHeader,{title:\"Change Password\"}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,md:4,sm:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.password&&errors.password),fullWidth:true,helperText:touched.password&&errors.password,label:\"Password\",name:\"password\",onBlur:handleBlur,onChange:handleChange,type:\"password\",value:values.password,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:4,sm:6,xs:12},/*#__PURE__*/React.createElement(TextField,{error:Boolean(touched.passwordConfirm&&errors.passwordConfirm),fullWidth:true,helperText:touched.passwordConfirm&&errors.passwordConfirm,label:\"Password Confirmation\",name:\"passwordConfirm\",onBlur:handleBlur,onChange:handleChange,type:\"password\",value:values.passwordConfirm,variant:\"outlined\"}))),errors.submit&&/*#__PURE__*/React.createElement(Box,{mt:3},/*#__PURE__*/React.createElement(FormHelperText,{error:true},errors.submit))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Box,{p:2,display:\"flex\",justifyContent:\"flex-end\"},/*#__PURE__*/React.createElement(Button,{color:\"secondary\",disabled:isSubmitting,type:\"submit\",variant:\"contained\"},\"Change Password\")))));}));}export default Security;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/pages/AccountView/Security.js"],"names":["React","clsx","Yup","Formik","useSnackbar","Box","Button","Card","CardContent","CardHeader","Divider","FormHelperText","Grid","TextField","makeStyles","wait","useStyles","root","Security","className","rest","classes","enqueueSnackbar","password","passwordConfirm","object","shape","string","min","max","required","oneOf","ref","values","resetForm","setErrors","setStatus","setSubmitting","success","variant","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Security({ className, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        passwordConfirm: ''\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required'),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Password updated', {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Change Password\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Change Password\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n"]},"metadata":{},"sourceType":"module"}