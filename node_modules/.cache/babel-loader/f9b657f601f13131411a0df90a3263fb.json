{"ast":null,"code":"/* eslint-disable */import{Chart}from'react-chartjs-2';// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw(){var ctx=this._chart.ctx;var vm=this._view;var borderWidth=vm.borderWidth;var left;var right;var top;var bottom;var signX;var signY;var borderSkipped;var radius;// If radius is less than 0 or is large enough to cause drawing errors a max\n//      radius is imposed. If cornerRadius is not defined set it to 0.\nvar cornerRadius=this._chart.config.options.cornerRadius;if(cornerRadius<0){cornerRadius=0;}if(typeof cornerRadius==='undefined'){cornerRadius=0;}if(!vm.horizontal){// bar\nleft=vm.x-vm.width/2;right=vm.x+vm.width/2;top=vm.y;bottom=vm.base;signX=1;signY=bottom>top?1:-1;borderSkipped=vm.borderSkipped||'bottom';}else{// horizontal bar\nleft=vm.base;right=vm.x;top=vm.y-vm.height/2;bottom=vm.y+vm.height/2;signX=right>left?1:-1;signY=1;borderSkipped=vm.borderSkipped||'left';}// Canvas doesn't allow us to stroke inside the width so we can\n// adjust the sizes to fit if we're setting a stroke on the line\nif(borderWidth){// borderWidth shold be less than bar width and bar height.\nvar barSize=Math.min(Math.abs(left-right),Math.abs(top-bottom));borderWidth=borderWidth>barSize?barSize:borderWidth;var halfStroke=borderWidth/2;// Adjust borderWidth when bar top position is near vm.base(zero).\nvar borderLeft=left+(borderSkipped!=='left'?halfStroke*signX:0);var borderRight=right+(borderSkipped!=='right'?-halfStroke*signX:0);var borderTop=top+(borderSkipped!=='top'?halfStroke*signY:0);var borderBottom=bottom+(borderSkipped!=='bottom'?-halfStroke*signY:0);// not become a vertical line?\nif(borderLeft!==borderRight){top=borderTop;bottom=borderBottom;}// not become a horizontal line?\nif(borderTop!==borderBottom){left=borderLeft;right=borderRight;}}ctx.beginPath();ctx.fillStyle=vm.backgroundColor;ctx.strokeStyle=vm.borderColor;ctx.lineWidth=borderWidth;// Corner points, from bottom-left to bottom-right clockwise\n// | 1 2 |\n// | 0 3 |\nvar corners=[[left,bottom],[left,top],[right,top],[right,bottom]];// Find first (starting) corner with fallback to 'bottom'\nvar borders=['bottom','left','top','right'];var startCorner=borders.indexOf(borderSkipped,0);if(startCorner===-1){startCorner=0;}function cornerAt(index){return corners[(startCorner+index)%4];}// Draw rectangle from 'startCorner'\nvar corner=cornerAt(0);ctx.moveTo(corner[0],corner[1]);for(var i=1;i<4;i+=1){corner=cornerAt(i);var nextCornerId=i+1;if(nextCornerId===4){nextCornerId=0;}var width=corners[2][0]-corners[1][0];var height=corners[0][1]-corners[1][1];var x=corners[1][0];var y=corners[1][1];radius=cornerRadius;// Fix radius being too large\nif(radius>Math.abs(height)/2){radius=Math.floor(Math.abs(height)/2);}if(radius>Math.abs(width)/2){radius=Math.floor(Math.abs(width)/2);}if(height<0){// Negative values in a standard bar chart\nvar xTl=x;var xTr=x+width;var yTl=y+height;var yTr=y+height;var xBl=x;var xBr=x+width;var yBl=y;var yBr=y;// Draw\nctx.moveTo(xBl+radius,yBl);ctx.lineTo(xBr-radius,yBr);ctx.quadraticCurveTo(xBr,yBr,xBr,yBr-radius);ctx.lineTo(xTr,yTr+radius);ctx.quadraticCurveTo(xTr,yTr,xTr-radius,yTr);ctx.lineTo(xTl+radius,yTl);ctx.quadraticCurveTo(xTl,yTl,xTl,yTl+radius);ctx.lineTo(xBl,yBl-radius);ctx.quadraticCurveTo(xBl,yBl,xBl+radius,yBl);}else if(width<0){// Negative values in a horizontal bar chart\nvar _xTl=x+width;var _xTr=x;var _yTl=y;var _yTr=y;var _xBl=x+width;var _xBr=x;var _yBl=y+height;var _yBr=y+height;// Draw\nctx.moveTo(_xBl+radius,_yBl);ctx.lineTo(_xBr-radius,_yBr);ctx.quadraticCurveTo(_xBr,_yBr,_xBr,_yBr-radius);ctx.lineTo(_xTr,_yTr+radius);ctx.quadraticCurveTo(_xTr,_yTr,_xTr-radius,_yTr);ctx.lineTo(_xTl+radius,_yTl);ctx.quadraticCurveTo(_xTl,_yTl,_xTl,_yTl+radius);ctx.lineTo(_xBl,_yBl-radius);ctx.quadraticCurveTo(_xBl,_yBl,_xBl+radius,_yBl);}else{// Positive Value\nctx.moveTo(x+radius,y);ctx.lineTo(x+width-radius,y);ctx.quadraticCurveTo(x+width,y,x+width,y+radius);ctx.lineTo(x+width,y+height-radius);ctx.quadraticCurveTo(x+width,y+height,x+width-radius,y+height);ctx.lineTo(x+radius,y+height);ctx.quadraticCurveTo(x,y+height,x,y+height-radius);ctx.lineTo(x,y+radius);ctx.quadraticCurveTo(x,y,x+radius,y);}}ctx.fill();if(borderWidth){ctx.stroke();}}Chart.helpers.extend(Chart.elements.Rectangle.prototype,{draw:draw});","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/mixins/chartjs.js"],"names":["Chart","draw","ctx","_chart","vm","_view","borderWidth","left","right","top","bottom","signX","signY","borderSkipped","radius","cornerRadius","config","options","horizontal","x","width","y","base","height","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","borders","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","helpers","extend","elements","Rectangle","prototype"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n"]},"metadata":{},"sourceType":"module"}