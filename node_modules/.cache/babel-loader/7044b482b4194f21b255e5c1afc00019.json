{"ast":null,"code":"import _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardView/Header.js\";\nimport React, { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Breadcrumbs, Button, Grid, Link, Menu, MenuItem, SvgIcon, Typography, makeStyles } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\nvar timeRanges = [{\n  value: 'today',\n  text: 'Today'\n}, {\n  value: 'yesterday',\n  text: 'Yesterday'\n}, {\n  value: 'last_30_days',\n  text: 'Last 30 days'\n}, {\n  value: 'last_year',\n  text: 'Last year'\n}];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    actionIcon: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction Header(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var actionRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isMenuOpen = _useState2[0],\n      setMenuOpen = _useState2[1];\n\n  var _useState3 = useState(timeRanges[2].text),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeRange = _useState4[0],\n      setTimeRange = _useState4[1];\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Grid, Object.assign({\n      container: true,\n      spacing: 3,\n      justify: \"space-between\",\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Breadcrumbs, {\n      separator:\n      /*#__PURE__*/\n      React.createElement(NavigateNextIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 22\n        }\n      }),\n      \"aria-label\": \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Link, {\n      variant: \"body1\",\n      color: \"inherit\",\n      to: \"/app\",\n      component: RouterLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Dashboard\"),\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Reports\")),\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h3\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Here's what's happening\")),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      ref: actionRef,\n      onClick: function onClick() {\n        return setMenuOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      className: classes.actionIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CalendarIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })), timeRange),\n    /*#__PURE__*/\n    React.createElement(Menu, {\n      anchorEl: actionRef.current,\n      onClose: function onClose() {\n        return setMenuOpen(false);\n      },\n      open: isMenuOpen,\n      PaperProps: {\n        className: classes.menu\n      },\n      getContentAnchorEl: null,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, timeRanges.map(function (t) {\n      return (\n        /*#__PURE__*/\n        React.createElement(MenuItem, {\n          key: t.value,\n          onClick: function onClick() {\n            return setTimeRange(t.text);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        }, t.text)\n      );\n    }))))\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\nexport default Header;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardView/Header.js"],"names":["React","useRef","useState","Link","RouterLink","PropTypes","clsx","Breadcrumbs","Button","Grid","Menu","MenuItem","SvgIcon","Typography","makeStyles","NavigateNextIcon","Calendar","CalendarIcon","timeRanges","value","text","useStyles","theme","root","actionIcon","marginRight","spacing","Header","className","rest","classes","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","current","menu","vertical","horizontal","map","t","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Here&apos;s what&apos;s happening\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.value}\n              onClick={() => setTimeRange(t.text)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}