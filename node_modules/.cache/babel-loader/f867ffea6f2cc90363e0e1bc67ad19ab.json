{"ast":null,"code":"import _regeneratorRuntime from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'src/utils/axios';\nimport authService from 'src/services/authService';\nexport var LOGIN_REQUEST = '@account/login-request';\nexport var LOGIN_SUCCESS = '@account/login-success';\nexport var LOGIN_FAILURE = '@account/login-failure';\nexport var SILENT_LOGIN = '@account/silent-login';\nexport var LOGOUT = '@account/logout';\nexport var REGISTER = '@account/register';\nexport var UPDATE_PROFILE = '@account/update-profile';\nexport function login(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatch({\n                  type: LOGIN_REQUEST\n                });\n                _context.next = 4;\n                return authService.loginWithEmailAndPassword(email, password);\n\n              case 4:\n                user = _context.sent;\n                dispatch({\n                  type: LOGIN_SUCCESS,\n                  payload: {\n                    user: user\n                  }\n                });\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: LOGIN_FAILURE\n                });\n                throw _context.t0;\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function setUserData(user) {\n  return function (dispatch) {\n    return dispatch({\n      type: SILENT_LOGIN,\n      payload: {\n        user: user\n      }\n    });\n  };\n}\nexport function logout() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                authService.logout();\n                dispatch({\n                  type: LOGOUT\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function register() {\n  return true;\n}\nexport function updateProfile(update) {\n  var request = axios.post('/api/account/profile', {\n    update: update\n  });\n  return function (dispatch) {\n    request.then(function (response) {\n      return dispatch({\n        type: UPDATE_PROFILE,\n        payload: response.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/actions/accountActions.js"],"names":["axios","authService","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SILENT_LOGIN","LOGOUT","REGISTER","UPDATE_PROFILE","login","email","password","dispatch","type","loginWithEmailAndPassword","user","payload","setUserData","logout","register","updateProfile","update","request","post","then","response","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,IAAMC,aAAa,GAAG,wBAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,wBAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,wBAAtB;AACP,OAAO,IAAMC,YAAY,GAAG,uBAArB;AACP,OAAO,IAAMC,MAAM,GAAG,iBAAf;AACP,OAAO,IAAMC,QAAQ,GAAG,mBAAjB;AACP,OAAO,IAAMC,cAAc,GAAG,yBAAvB;AAEP,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEX;AAAR,iBAAD,CAAR;AAFG;AAAA,uBAIgBD,WAAW,CAACa,yBAAZ,CAAsCJ,KAAtC,EAA6CC,QAA7C,CAJhB;;AAAA;AAIGI,gBAAAA,IAJH;AAMHH,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEV,aADC;AAEPa,kBAAAA,OAAO,EAAE;AACPD,oBAAAA,IAAI,EAAJA;AADO;AAFF,iBAAD,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAaHH,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAET;AAAR,iBAAD,CAAR;AAbG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBD;AAED,OAAO,SAASa,WAAT,CAAqBF,IAArB,EAA2B;AAChC,SAAO,UAACH,QAAD;AAAA,WAAcA,QAAQ,CAAC;AAC5BC,MAAAA,IAAI,EAAER,YADsB;AAE5BW,MAAAA,OAAO,EAAE;AACPD,QAAAA,IAAI,EAAJA;AADO;AAFmB,KAAD,CAAtB;AAAA,GAAP;AAMD;AAED,OAAO,SAASG,MAAT,GAAkB;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAON,QAAP;AAAA;AAAA;AAAA;AAAA;AACLX,gBAAAA,WAAW,CAACiB,MAAZ;AAEAN,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEP;AADC,iBAAD,CAAR;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD;AAED,OAAO,SAASa,QAAT,GAAoB;AACzB,SAAO,IAAP;AACD;AAED,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,MAAMC,OAAO,GAAGtB,KAAK,CAACuB,IAAN,CAAW,sBAAX,EAAmC;AAAEF,IAAAA,MAAM,EAANA;AAAF,GAAnC,CAAhB;AAEA,SAAO,UAACT,QAAD,EAAc;AACnBU,IAAAA,OAAO,CAACE,IAAR,CAAa,UAACC,QAAD;AAAA,aAAcb,QAAQ,CAAC;AAClCC,QAAAA,IAAI,EAAEL,cAD4B;AAElCQ,QAAAA,OAAO,EAAES,QAAQ,CAACC;AAFgB,OAAD,CAAtB;AAAA,KAAb;AAID,GALD;AAMD","sourcesContent":["import axios from 'src/utils/axios';\nimport authService from 'src/services/authService';\n\nexport const LOGIN_REQUEST = '@account/login-request';\nexport const LOGIN_SUCCESS = '@account/login-success';\nexport const LOGIN_FAILURE = '@account/login-failure';\nexport const SILENT_LOGIN = '@account/silent-login';\nexport const LOGOUT = '@account/logout';\nexport const REGISTER = '@account/register';\nexport const UPDATE_PROFILE = '@account/update-profile';\n\nexport function login(email, password) {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: LOGIN_REQUEST });\n\n      const user = await authService.loginWithEmailAndPassword(email, password);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          user\n        }\n      });\n    } catch (error) {\n      dispatch({ type: LOGIN_FAILURE });\n      throw error;\n    }\n  };\n}\n\nexport function setUserData(user) {\n  return (dispatch) => dispatch({\n    type: SILENT_LOGIN,\n    payload: {\n      user\n    }\n  });\n}\n\nexport function logout() {\n  return async (dispatch) => {\n    authService.logout();\n\n    dispatch({\n      type: LOGOUT\n    });\n  };\n}\n\nexport function register() {\n  return true;\n}\n\nexport function updateProfile(update) {\n  const request = axios.post('/api/account/profile', { update });\n\n  return (dispatch) => {\n    request.then((response) => dispatch({\n      type: UPDATE_PROFILE,\n      payload: response.data\n    }));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}