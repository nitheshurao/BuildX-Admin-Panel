{"ast":null,"code":"import _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardView/PerformanceOverTime/index.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, CardHeader, CardContent, Divider, makeStyles } from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {},\n    chart: {\n      height: '100%'\n    }\n  };\n});\n\nfunction PerformanceOverTime(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var performance = {\n    thisWeek: {\n      data: [],\n      labels: []\n    },\n    thisMonth: {\n      data: [],\n      labels: []\n    },\n    thisYear: {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5],\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    }\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(Card, Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      action:\n      /*#__PURE__*/\n      React.createElement(GenericMoreButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }),\n      title: \"Performance Over Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      height: 375,\n      minWidth: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Chart, {\n      className: classes.chart,\n      data: performance.thisYear.data,\n      labels: performance.thisYear.labels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })))))\n  );\n}\n\nPerformanceOverTime.propTypes = {\n  className: PropTypes.string\n};\nexport default PerformanceOverTime;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/reports/DashboardView/PerformanceOverTime/index.js"],"names":["React","clsx","PropTypes","PerfectScrollbar","Box","Card","CardHeader","CardContent","Divider","makeStyles","GenericMoreButton","Chart","useStyles","root","chart","height","PerformanceOverTime","className","rest","classes","performance","thisWeek","data","labels","thisMonth","thisYear","propTypes","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,OALF,EAMEC,UANF,QAOO,mBAPP;AAQA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC;AAAA,SAAO;AAClCI,IAAAA,IAAI,EAAE,EAD4B;AAElCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAF2B,GAAP;AAAA,CAAD,CAA5B;;AAOA,SAASC,mBAAT,OAAqD;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAARC,IAAQ;;AACnD,MAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,MAAMQ,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,EADE;AAERC,MAAAA,MAAM,EAAE;AAFA,KADQ;AAKlBC,IAAAA,SAAS,EAAE;AACTF,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,MAAM,EAAE;AAFC,KALO;AASlBE,IAAAA,QAAQ,EAAE;AACRH,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,CAA3C,CADE;AAERC,MAAAA,MAAM,EAAE,CACN,KADM,EAEN,KAFM,EAGN,KAHM,EAIN,KAJM,EAKN,KALM,EAMN,KANM,EAON,KAPM,EAQN,KARM,EASN,KATM,EAUN,KAVM,EAWN,KAXM,EAYN,KAZM;AAFA;AATQ,GAApB;AA4BA;AAAA;AACE,wBAAC,IAAD;AACE,MAAA,SAAS,EAAEtB,IAAI,CAACkB,OAAO,CAACN,IAAT,EAAeI,SAAf;AADjB,OAEMC,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,wBAAC,UAAD;AACE,MAAA,MAAM;AAAA;AAAE,0BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,KAAK,EAAC,uBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF;AAAA;AAQE,wBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF;AAAA;AASE,wBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,GAAD;AACE,MAAA,MAAM,EAAE,GADV;AAEE,MAAA,QAAQ,EAAE,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,wBAAC,KAAD;AACE,MAAA,SAAS,EAAEC,OAAO,CAACL,KADrB;AAEE,MAAA,IAAI,EAAEM,WAAW,CAACK,QAAZ,CAAqBH,IAF7B;AAGE,MAAA,MAAM,EAAEF,WAAW,CAACK,QAAZ,CAAqBF,MAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF,CATF;AADF;AA0BD;;AAEDP,mBAAmB,CAACU,SAApB,GAAgC;AAC9BT,EAAAA,SAAS,EAAEf,SAAS,CAACyB;AADS,CAAhC;AAIA,eAAeX,mBAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: '100%'\n  }\n}));\n\nfunction PerformanceOverTime({ className, ...rest }) {\n  const classes = useStyles();\n  const performance = {\n    thisWeek: {\n      data: [],\n      labels: []\n    },\n    thisMonth: {\n      data: [],\n      labels: []\n    },\n    thisYear: {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5],\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Performance Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <PerfectScrollbar>\n          <Box\n            height={375}\n            minWidth={500}\n          >\n            <Chart\n              className={classes.chart}\n              data={performance.thisYear.data}\n              labels={performance.thisYear.labels}\n            />\n          </Box>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n}\n\nPerformanceOverTime.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PerformanceOverTime;\n"]},"metadata":{},"sourceType":"module"}