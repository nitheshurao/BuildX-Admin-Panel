{"ast":null,"code":"import _regeneratorRuntime from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch}from'react-redux';import SplashScreen from'src/components/SplashScreen';import{setUserData,logout}from'src/actions/accountActions';import authService from'src/services/authService';function Auth(_ref){var children=_ref.children;var dispatch=useDispatch();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];useEffect(function(){var initAuth=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:authService.setAxiosInterceptors({onLogout:function onLogout(){return dispatch(logout());}});authService.handleAuthentication();if(!authService.isAuthenticated()){_context.next=8;break;}_context.next=5;return authService.loginInWithToken();case 5:user=_context.sent;_context.next=8;return dispatch(setUserData(user));case 8:setLoading(false);case 9:case\"end\":return _context.stop();}}},_callee);}));return function initAuth(){return _ref2.apply(this,arguments);};}();initAuth();},[dispatch]);if(isLoading){return(/*#__PURE__*/React.createElement(SplashScreen,null));}return children;}export default Auth;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/components/Auth.js"],"names":["React","useEffect","useState","useDispatch","SplashScreen","setUserData","logout","authService","Auth","children","dispatch","isLoading","setLoading","initAuth","setAxiosInterceptors","onLogout","handleAuthentication","isAuthenticated","loginInWithToken","user"],"mappings":"idAAA,MAAOA,CAAAA,KAAP,EACEC,SADF,CAEEC,QAFF,KAGO,OAHP,CAIA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,OAASC,WAAT,CAAsBC,MAAtB,KAAoC,4BAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA,QAASC,CAAAA,IAAT,MAA4B,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC1B,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAD0B,cAEMD,QAAQ,CAAC,IAAD,CAFd,wCAEnBS,SAFmB,eAERC,UAFQ,eAI1BX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,QAAQ,2FAAG,4IACfN,WAAW,CAACO,oBAAZ,CAAiC,CAC/BC,QAAQ,CAAE,0BAAML,CAAAA,QAAQ,CAACJ,MAAM,EAAP,CAAd,EADqB,CAAjC,EAIAC,WAAW,CAACS,oBAAZ,GALe,IAOXT,WAAW,CAACU,eAAZ,EAPW,+CAQMV,CAAAA,WAAW,CAACW,gBAAZ,EARN,QAQPC,IARO,qCAUPT,CAAAA,QAAQ,CAACL,WAAW,CAACc,IAAD,CAAZ,CAVD,QAafP,UAAU,CAAC,KAAD,CAAV,CAbe,sDAAH,kBAARC,CAAAA,QAAQ,2CAAd,CAgBAA,QAAQ,GACT,CAlBQ,CAkBN,CAACH,QAAD,CAlBM,CAAT,CAoBA,GAAIC,SAAJ,CAAe,CACb,oBAAO,oBAAC,YAAD,MAAP,EACD,CAED,MAAOF,CAAAA,QAAP,CACD,CAMD,cAAeD,CAAAA,IAAf","sourcesContent":["import React, {\n  useEffect,\n  useState\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SplashScreen from 'src/components/SplashScreen';\nimport { setUserData, logout } from 'src/actions/accountActions';\nimport authService from 'src/services/authService';\n\nfunction Auth({ children }) {\n  const dispatch = useDispatch();\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      authService.setAxiosInterceptors({\n        onLogout: () => dispatch(logout())\n      });\n\n      authService.handleAuthentication();\n\n      if (authService.isAuthenticated()) {\n        const user = await authService.loginInWithToken();\n\n        await dispatch(setUserData(user));\n      }\n\n      setLoading(false);\n    };\n\n    initAuth();\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <SplashScreen />;\n  }\n\n  return children;\n}\n\nAuth.propTypes = {\n  children: PropTypes.any\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}