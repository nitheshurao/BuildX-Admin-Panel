{"ast":null,"code":"import _defineProperty from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/layouts/DashboardLayout/TopBar/Settings.js\";\nimport React, { useState, useRef } from 'react';\nimport { capitalCase } from 'change-case';\nimport { Badge, Box, Button, FormControlLabel, IconButton, Popover, SvgIcon, Switch, TextField, Tooltip, Typography, makeStyles } from '@material-ui/core';\nimport { Settings as SettingsIcon } from 'react-feather';\nimport useSettings from 'src/hooks/useSettings';\nimport { THEMES } from 'src/constants';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    badge: {\n      height: 10,\n      width: 10,\n      borderRadius: 5,\n      marginTop: 10,\n      marginRight: 5\n    },\n    popover: {\n      width: 320,\n      padding: theme.spacing(2)\n    }\n  };\n});\n\nfunction Settings() {\n  var _this = this;\n\n  var classes = useStyles();\n  var ref = useRef(null);\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      saveSettings = _useSettings.saveSettings;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState({\n    direction: settings.direction,\n    responsiveFontSizes: settings.responsiveFontSizes,\n    theme: settings.theme\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      values = _useState4[0],\n      setValues = _useState4[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleChange = function handleChange(field, value) {\n    setValues(_objectSpread({}, values, _defineProperty({}, field, value)));\n  };\n\n  var handleSave = function handleSave() {\n    saveSettings(values);\n    setOpen(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(Tooltip, {\n      title: \"Settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Badge, {\n      color: \"secondary\",\n      variant: \"dot\",\n      classes: {\n        badge: classes.badge\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: handleOpen,\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }))))),\n    /*#__PURE__*/\n    React.createElement(Popover, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      classes: {\n        paper: classes.popover\n      },\n      anchorEl: ref.current,\n      onClose: handleClose,\n      open: isOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h4\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Settings\"),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      px: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(FormControlLabel, {\n      control:\n      /*#__PURE__*/\n      React.createElement(Switch, {\n        checked: values.direction === 'rtl',\n        edge: \"start\",\n        name: \"direction\",\n        onChange: function onChange(event) {\n          return handleChange('direction', event.target.checked ? 'rtl' : 'ltr');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }),\n      label: \"RTL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      px: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(FormControlLabel, {\n      control:\n      /*#__PURE__*/\n      React.createElement(Switch, {\n        checked: values.responsiveFontSizes,\n        edge: \"start\",\n        name: \"direction\",\n        onChange: function onChange(event) {\n          return handleChange('responsiveFontSizes', event.target.checked);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }),\n      label: \"Responsive font sizes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      fullWidth: true,\n      label: \"Theme\",\n      name: \"theme\",\n      onChange: function onChange(event) {\n        return handleChange('theme', event.target.value);\n      },\n      select: true,\n      SelectProps: {\n        native: true\n      },\n      value: values.theme,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, Object.keys(THEMES).map(function (theme) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"option\", {\n          key: theme,\n          value: theme,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }\n        }, capitalCase(theme))\n      );\n    }))),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      fullWidth: true,\n      onClick: handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"Save Settings\"))))\n  );\n}\n\nexport default Settings;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/layouts/DashboardLayout/TopBar/Settings.js"],"names":["React","useState","useRef","capitalCase","Badge","Box","Button","FormControlLabel","IconButton","Popover","SvgIcon","Switch","TextField","Tooltip","Typography","makeStyles","Settings","SettingsIcon","useSettings","THEMES","useStyles","theme","badge","height","width","borderRadius","marginTop","marginRight","popover","padding","spacing","classes","ref","settings","saveSettings","isOpen","setOpen","direction","responsiveFontSizes","values","setValues","handleOpen","handleClose","handleChange","field","value","handleSave","vertical","horizontal","paper","current","event","target","checked","native","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { capitalCase } from 'change-case';\nimport {\n  Badge,\n  Box,\n  Button,\n  FormControlLabel,\n  IconButton,\n  Popover,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Settings as SettingsIcon } from 'react-feather';\nimport useSettings from 'src/hooks/useSettings';\nimport { THEMES } from 'src/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  badge: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    marginRight: 5\n  },\n  popover: {\n    width: 320,\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction Settings() {\n  const classes = useStyles();\n  const ref = useRef(null);\n  const { settings, saveSettings } = useSettings();\n  const [isOpen, setOpen] = useState(false);\n  const [values, setValues] = useState({\n    direction: settings.direction,\n    responsiveFontSizes: settings.responsiveFontSizes,\n    theme: settings.theme\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (field, value) => {\n    setValues({\n      ...values,\n      [field]: value\n    });\n  };\n\n  const handleSave = () => {\n    saveSettings(values);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Settings\">\n        <Badge\n          color=\"secondary\"\n          variant=\"dot\"\n          classes={{ badge: classes.badge }}\n        >\n          <IconButton\n            color=\"inherit\"\n            onClick={handleOpen}\n            ref={ref}\n          >\n            <SvgIcon fontSize=\"small\">\n              <SettingsIcon />\n            </SvgIcon>\n          </IconButton>\n        </Badge>\n      </Tooltip>\n      <Popover\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        classes={{ paper: classes.popover }}\n        anchorEl={ref.current}\n        onClose={handleClose}\n        open={isOpen}\n      >\n        <Typography\n          variant=\"h4\"\n          color=\"textPrimary\"\n        >\n          Settings\n        </Typography>\n        <Box\n          mt={2}\n          px={1}\n        >\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={values.direction === 'rtl'}\n                edge=\"start\"\n                name=\"direction\"\n                onChange={(event) => handleChange('direction', event.target.checked ? 'rtl' : 'ltr')}\n              />\n            )}\n            label=\"RTL\"\n          />\n        </Box>\n        <Box\n          mt={2}\n          px={1}\n        >\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={values.responsiveFontSizes}\n                edge=\"start\"\n                name=\"direction\"\n                onChange={(event) => handleChange('responsiveFontSizes', event.target.checked)}\n              />\n            )}\n            label=\"Responsive font sizes\"\n          />\n        </Box>\n        <Box mt={2}>\n          <TextField\n            fullWidth\n            label=\"Theme\"\n            name=\"theme\"\n            onChange={(event) => handleChange('theme', event.target.value)}\n            select\n            SelectProps={{ native: true }}\n            value={values.theme}\n            variant=\"outlined\"\n          >\n            {Object.keys(THEMES).map((theme) => (\n              <option\n                key={theme}\n                value={theme}\n              >\n                {capitalCase(theme)}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box mt={2}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            fullWidth\n            onClick={handleSave}\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Popover>\n    </>\n  );\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}