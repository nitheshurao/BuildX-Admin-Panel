{"ast":null,"code":"import _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/projects/ProjectDetailsView/Activities/Activity.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Avatar, Card, Typography, Link, makeStyles, colors } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    card: {\n      marginLeft: theme.spacing(2),\n      flexGrow: 1,\n      display: 'flex',\n      padding: theme.spacing(2),\n      alignItems: 'center'\n    },\n    date: {\n      marginLeft: 'auto',\n      flexShrink: 0\n    },\n    avatar: {\n      color: colors.common.white\n    },\n    avatarBlue: {\n      backgroundColor: colors.blue[500]\n    },\n    avatarGreen: {\n      backgroundColor: colors.green[500]\n    },\n    avatarOrange: {\n      backgroundColor: colors.orange[500]\n    },\n    avatarIndigo: {\n      backgroundColor: colors.indigo[500]\n    }\n  };\n});\nvar avatarsMap = {\n  upload_file: {\n    icon: GetAppIcon,\n    className: 'avatarBlue'\n  },\n  join_team: {\n    icon: PersonAddIcon,\n    className: 'avatarOrange'\n  },\n  price_change: {\n    icon: AttachMoneyIcon,\n    className: 'avatarGreen'\n  },\n  contest_created: {\n    icon: DashboardIcon,\n    className: 'avatarIndigo'\n  }\n};\n\nfunction Activity(_ref) {\n  var activity = _ref.activity,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"activity\", \"className\"]);\n\n  var classes = useStyles();\n  var avatar = avatarsMap[activity.type];\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", Object.assign({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Avatar, {\n      className: clsx(classes.avatar, classes[avatar.className]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(avatar.icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Link, {\n      color: \"textPrimary\",\n      component: RouterLink,\n      to: \"#\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, activity.subject), ' ', activity.description),\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      className: classes.date,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, moment(activity.createdAt).fromNow())))\n  );\n}\n\nActivity.propTypes = {\n  activity: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\nexport default Activity;","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/projects/ProjectDetailsView/Activities/Activity.js"],"names":["React","Link","RouterLink","PropTypes","clsx","moment","Avatar","Card","Typography","makeStyles","colors","GetAppIcon","PersonAddIcon","AttachMoneyIcon","DashboardIcon","useStyles","theme","root","display","alignItems","card","marginLeft","spacing","flexGrow","padding","date","flexShrink","avatar","color","common","white","avatarBlue","backgroundColor","blue","avatarGreen","green","avatarOrange","orange","avatarIndigo","indigo","avatarsMap","upload_file","icon","className","join_team","price_change","contest_created","Activity","activity","rest","classes","type","subject","description","createdAt","fromNow","propTypes","object","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  Typography,\n  Link,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  card: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    padding: theme.spacing(2),\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: 'auto',\n    flexShrink: 0\n  },\n  avatar: {\n    color: colors.common.white\n  },\n  avatarBlue: {\n    backgroundColor: colors.blue[500]\n  },\n  avatarGreen: {\n    backgroundColor: colors.green[500]\n  },\n  avatarOrange: {\n    backgroundColor: colors.orange[500]\n  },\n  avatarIndigo: {\n    backgroundColor: colors.indigo[500]\n  }\n}));\n\nconst avatarsMap = {\n  upload_file: {\n    icon: GetAppIcon,\n    className: 'avatarBlue'\n  },\n  join_team: {\n    icon: PersonAddIcon,\n    className: 'avatarOrange'\n  },\n  price_change: {\n    icon: AttachMoneyIcon,\n    className: 'avatarGreen'\n  },\n  contest_created: {\n    icon: DashboardIcon,\n    className: 'avatarIndigo'\n  }\n};\n\nfunction Activity({ activity, className, ...rest }) {\n  const classes = useStyles();\n  const avatar = avatarsMap[activity.type];\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar className={clsx(classes.avatar, classes[avatar.className])}>\n        <avatar.icon />\n      </Avatar>\n      <Card className={classes.card}>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {activity.subject}\n          </Link>\n          {' '}\n          {activity.description}\n        </Typography>\n        <Typography\n          className={classes.date}\n          variant=\"caption\"\n        >\n          {moment(activity.createdAt).fromNow()}\n        </Typography>\n      </Card>\n    </div>\n  );\n}\n\nActivity.propTypes = {\n  activity: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Activity;\n"]},"metadata":{},"sourceType":"module"}