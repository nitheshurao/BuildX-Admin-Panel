{"ast":null,"code":"import _regeneratorRuntime from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/Users/redhan/Desktop/work/Ecom-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/redhan/Desktop/work/Ecom-Admin/src/views/extra/forms/ReduxFormView/BasicForm.js\";\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Field, SubmissionError, reduxForm } from 'redux-form';\nimport { Box, Button, Card, CardContent, CardHeader, Checkbox, CircularProgress, Divider, FormHelperText, Grid, Link, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  firstName: Yup.string().required('Required'),\n  lastName: Yup.string().required('Required'),\n  password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n  policy: Yup.boolean().oneOf([true], 'This field must be checked')\n});\n\nfunction validate(values) {\n  var formErrors = {};\n\n  try {\n    validationSchema.validateSync(values, {\n      abortEarly: false\n    });\n  } catch (errors) {\n    errors.inner.forEach(function (error) {\n      formErrors[error.path] = error.message;\n    });\n  }\n\n  return formErrors;\n}\n\nfunction submit() {\n  return _submit.apply(this, arguments);\n}\n\nfunction _submit() {\n  _submit = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return wait(1000);\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            throw new SubmissionError({\n              _error: 'Login failed!'\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 5]]);\n  }));\n  return _submit.apply(this, arguments);\n}\n\nfunction renderTextField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      invalid = _ref$meta.invalid,\n      error = _ref$meta.error,\n      rest = _objectWithoutProperties(_ref, [\"input\", \"label\", \"meta\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(TextField, Object.assign({\n      error: touched && invalid,\n      fullWidth: true,\n      helperText: touched && error,\n      label: label,\n      variant: \"outlined\"\n    }, input, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }))\n  );\n}\n\nfunction renderCheckbox(_ref2) {\n  var input = _ref2.input,\n      label = _ref2.label,\n      _ref2$meta = _ref2.meta,\n      touched = _ref2$meta.touched,\n      invalid = _ref2$meta.invalid,\n      error = _ref2$meta.error,\n      rest = _objectWithoutProperties(_ref2, [\"input\", \"label\", \"meta\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      alignItems: \"center\",\n      display: \"flex\",\n      ml: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Checkbox, Object.assign({\n      checked: !!input.value,\n      onChange: input.onChange\n    }, input, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    })), label), Boolean(touched && invalid) &&\n    /*#__PURE__*/\n    React.createElement(FormHelperText, {\n      error: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, error))\n  );\n}\n\nfunction BasicForm(_ref3) {\n  var handleSubmit = _ref3.handleSubmit,\n      submitting = _ref3.submitting;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlertVisible = _useState2[0],\n      setAlertVisible = _useState2[1];\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      onSubmit: handleSubmit(submit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardHeader, {\n      title: \"Basic Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, isAlertVisible &&\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mb: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Alert, {\n      onClose: function onClose() {\n        return setAlertVisible(false);\n      },\n      severity: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"This is an info alert - check it out!\")), submitting ?\n    /*#__PURE__*/\n    React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      my: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    })) :\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Field, {\n      name: \"firstName\",\n      label: \"First Name\",\n      component: renderTextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Field, {\n      name: \"lastName\",\n      label: \"Last Name\",\n      component: renderTextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Field, {\n      name: \"email\",\n      label: \"Email Address\",\n      type: \"email\",\n      component: renderTextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Field, {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      component: renderTextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Field, {\n      name: \"policy\",\n      label:\n      /*#__PURE__*/\n      React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, \"I have read the\", ' ',\n      /*#__PURE__*/\n      React.createElement(Link, {\n        component: \"a\",\n        href: \"#\",\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 23\n        }\n      }, \"Terms and Conditions\")),\n      component: renderCheckbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      mt: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      color: \"secondary\",\n      disabled: submitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, \"Sign up\"))))))\n  );\n}\n\nBasicForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport default reduxForm({\n  form: 'BasicForm',\n  validate: validate,\n  initialValues: {\n    email: 'johnnydoe@yahoo.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    password: 'thisisasecuredpassword',\n    policy: false\n  }\n})(BasicForm);","map":{"version":3,"sources":["/Users/redhan/Desktop/work/Ecom-Admin/src/views/extra/forms/ReduxFormView/BasicForm.js"],"names":["React","useState","PropTypes","Yup","Field","SubmissionError","reduxForm","Box","Button","Card","CardContent","CardHeader","Checkbox","CircularProgress","Divider","FormHelperText","Grid","Link","TextField","Typography","Alert","wait","validationSchema","object","shape","email","string","required","firstName","lastName","password","min","max","policy","boolean","oneOf","validate","values","formErrors","validateSync","abortEarly","errors","inner","forEach","error","path","message","submit","_error","renderTextField","input","label","meta","touched","invalid","rest","renderCheckbox","value","onChange","Boolean","BasicForm","handleSubmit","submitting","isAlertVisible","setAlertVisible","propTypes","func","isRequired","bool","form","initialValues"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,EAAgBC,eAAhB,EAAiCC,SAAjC,QAAkD,YAAlD;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,gBAPF,EAQEC,OARF,EASEC,cATF,EAUEC,IAVF,EAWEC,IAXF,EAYEC,SAZF,EAaEC,UAbF,QAcO,mBAdP;AAeA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,IAAMC,gBAAgB,GAAGnB,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,KAAK,EAAEtB,GAAG,CAACuB,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,CAA8B,UAA9B,CADmC;AAE1CC,EAAAA,SAAS,EAAEzB,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAF+B;AAG1CE,EAAAA,QAAQ,EAAE1B,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAHgC;AAI1CG,EAAAA,QAAQ,EAAE3B,GAAG,CAACuB,MAAJ,GAAaK,GAAb,CAAiB,CAAjB,EAAoB,+BAApB,EAAqDC,GAArD,CAAyD,GAAzD,EAA8DL,QAA9D,CAAuE,UAAvE,CAJgC;AAK1CM,EAAAA,MAAM,EAAE9B,GAAG,CAAC+B,OAAJ,GAAcC,KAAd,CAAoB,CAAC,IAAD,CAApB,EAA4B,4BAA5B;AALkC,CAAnB,CAAzB;;AAQA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,MAAMC,UAAU,GAAG,EAAnB;;AAEA,MAAI;AACFhB,IAAAA,gBAAgB,CAACiB,YAAjB,CAA8BF,MAA9B,EAAsC;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAAtC;AACD,GAFD,CAEE,OAAOC,MAAP,EAAe;AACfA,IAAAA,MAAM,CAACC,KAAP,CAAaC,OAAb,CAAqB,UAACC,KAAD,EAAW;AAC9BN,MAAAA,UAAU,CAACM,KAAK,CAACC,IAAP,CAAV,GAAyBD,KAAK,CAACE,OAA/B;AACD,KAFD;AAGD;;AAED,SAAOR,UAAP;AACD;;SAEcS,M;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGU1B,IAAI,CAAC,IAAD,CAHd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAKU,IAAIhB,eAAJ,CAAoB;AACxB2C,cAAAA,MAAM,EAAE;AADgB,aAApB,CALV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWA,SAASC,eAAT,OAKG;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,uBAFDC,IAEC;AAAA,MAFOC,OAEP,aAFOA,OAEP;AAAA,MAFgBC,OAEhB,aAFgBA,OAEhB;AAAA,MAFyBV,KAEzB,aAFyBA,KAEzB;AAAA,MADEW,IACF;;AACD;AAAA;AACE,wBAAC,SAAD;AACE,MAAA,KAAK,EAAEF,OAAO,IAAIC,OADpB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,UAAU,EAAED,OAAO,IAAIT,KAHzB;AAIE,MAAA,KAAK,EAAEO,KAJT;AAKE,MAAA,OAAO,EAAC;AALV,OAMMD,KANN,EAOMK,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAWD;;AAED,SAASC,cAAT,QAKG;AAAA,MAJDN,KAIC,SAJDA,KAIC;AAAA,MAHDC,KAGC,SAHDA,KAGC;AAAA,yBAFDC,IAEC;AAAA,MAFOC,OAEP,cAFOA,OAEP;AAAA,MAFgBC,OAEhB,cAFgBA,OAEhB;AAAA,MAFyBV,KAEzB,cAFyBA,KAEzB;AAAA,MADEW,IACF;;AACD;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,GAAD;AACE,MAAA,UAAU,EAAC,QADb;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,EAAE,EAAE,CAAC,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKE,wBAAC,QAAD;AACE,MAAA,OAAO,EAAE,CAAC,CAACL,KAAK,CAACO,KADnB;AAEE,MAAA,QAAQ,EAAEP,KAAK,CAACQ;AAFlB,OAGMR,KAHN,EAIMK,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,EAWGJ,KAXH,CADF,EAcGQ,OAAO,CAACN,OAAO,IAAIC,OAAZ,CAAP;AAAA;AACC,wBAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,KADH,CAfJ;AADF;AAsBD;;AAED,SAASgB,SAAT,QAAiD;AAAA,MAA5BC,YAA4B,SAA5BA,YAA4B;AAAA,MAAdC,UAAc,SAAdA,UAAc;;AAAA,kBACL7D,QAAQ,CAAC,IAAD,CADH;AAAA;AAAA,MACxC8D,cADwC;AAAA,MACxBC,eADwB;;AAG/C;AAAA;AACE;AAAM,MAAA,QAAQ,EAAEH,YAAY,CAACd,MAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAAA;AAEE,wBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAAA;AAGE,wBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgB,cAAc;AAAA;AACb,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,KAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMC,eAAe,CAAC,KAAD,CAArB;AAAA,OADX;AAEE,MAAA,QAAQ,EAAC,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,CAFJ,EAWIF,UAAD;AAAA;AACC,wBAAC,GAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,cAAc,EAAC,QAFjB;AAGE,MAAA,EAAE,EAAE,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKE,wBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADD;AAAA;AASC;AAAA;AACE,wBAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAE,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,wBAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKE,wBAAC,KAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,SAAS,EAAEb,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAJF;AAAA;AAeE,wBAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKE,wBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,SAAS,EAAEA,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAfF,CADF;AAAA;AA4BE,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,EAAEA,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF;AAAA;AAoCE,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,SAAS,EAAEA,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApCF;AAAA;AA4CE,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK;AAAA;AACH,0BAAC,UAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,KAAK,EAAC,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAKG,GALH;AAAA;AAME,0BAAC,IAAD;AACE,QAAA,SAAS,EAAC,GADZ;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,KAAK,EAAC,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANF,CAHJ;AAkBE,MAAA,SAAS,EAAEO,cAlBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5CF;AAAA;AAkEE,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,MAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,QAAQ,EAAEM,UAFZ;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,OAAO,EAAC,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAlEF,CApBJ,CAHF,CADF;AADF;AA6GD;;AAEDF,SAAS,CAACK,SAAV,GAAsB;AACpBJ,EAAAA,YAAY,EAAE3D,SAAS,CAACgE,IAAV,CAAeC,UADT;AAEpBL,EAAAA,UAAU,EAAE5D,SAAS,CAACkE,IAAV,CAAeD;AAFP,CAAtB;AAKA,eAAe7D,SAAS,CAAC;AACvB+D,EAAAA,IAAI,EAAE,WADiB;AAEvBjC,EAAAA,QAAQ,EAARA,QAFuB;AAGvBkC,EAAAA,aAAa,EAAE;AACb7C,IAAAA,KAAK,EAAE,qBADM;AAEbG,IAAAA,SAAS,EAAE,MAFE;AAGbC,IAAAA,QAAQ,EAAE,KAHG;AAIbC,IAAAA,QAAQ,EAAE,wBAJG;AAKbG,IAAAA,MAAM,EAAE;AALK;AAHQ,CAAD,CAAT,CAUZ2B,SAVY,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Field, SubmissionError, reduxForm } from 'redux-form';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  firstName: Yup.string().required('Required'),\n  lastName: Yup.string().required('Required'),\n  password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n  policy: Yup.boolean().oneOf([true], 'This field must be checked')\n});\n\nfunction validate(values) {\n  const formErrors = {};\n\n  try {\n    validationSchema.validateSync(values, { abortEarly: false });\n  } catch (errors) {\n    errors.inner.forEach((error) => {\n      formErrors[error.path] = error.message;\n    });\n  }\n\n  return formErrors;\n}\n\nasync function submit() {\n  try {\n    // Make API request\n    await wait(1000);\n  } catch (error) {\n    throw new SubmissionError({\n      _error: 'Login failed!'\n    });\n  }\n}\n\nfunction renderTextField({\n  input,\n  label,\n  meta: { touched, invalid, error },\n  ...rest\n}) {\n  return (\n    <TextField\n      error={touched && invalid}\n      fullWidth\n      helperText={touched && error}\n      label={label}\n      variant=\"outlined\"\n      {...input}\n      {...rest}\n    />\n  );\n}\n\nfunction renderCheckbox({\n  input,\n  label,\n  meta: { touched, invalid, error },\n  ...rest\n}) {\n  return (\n    <div>\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        ml={-1}\n      >\n        <Checkbox\n          checked={!!input.value}\n          onChange={input.onChange}\n          {...input}\n          {...rest}\n        />\n        {label}\n      </Box>\n      {Boolean(touched && invalid) && (\n        <FormHelperText error>\n          {error}\n        </FormHelperText>\n      )}\n    </div>\n  );\n}\n\nfunction BasicForm({ handleSubmit, submitting }) {\n  const [isAlertVisible, setAlertVisible] = useState(true);\n\n  return (\n    <form onSubmit={handleSubmit(submit)}>\n      <Card>\n        <CardHeader title=\"Basic Form\" />\n        <Divider />\n        <CardContent>\n          {isAlertVisible && (\n            <Box mb={3}>\n              <Alert\n                onClose={() => setAlertVisible(false)}\n                severity=\"info\"\n              >\n                This is an info alert - check it out!\n              </Alert>\n            </Box>\n          )}\n          {(submitting) ? (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              my={5}\n            >\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Grid\n                container\n                spacing={2}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Field\n                    name=\"firstName\"\n                    label=\"First Name\"\n                    component={renderTextField}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Field\n                    name=\"lastName\"\n                    label=\"Last Name\"\n                    component={renderTextField}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Field\n                  name=\"email\"\n                  label=\"Email Address\"\n                  type=\"email\"\n                  component={renderTextField}\n                />\n              </Box>\n              <Box mt={2}>\n                <Field\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  component={renderTextField}\n                />\n              </Box>\n              <Box mt={2}>\n                <Field\n                  name=\"policy\"\n                  label={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      I have read the\n                      {' '}\n                      <Link\n                        component=\"a\"\n                        href=\"#\"\n                        color=\"secondary\"\n                      >\n                        Terms and Conditions\n                      </Link>\n                    </Typography>\n                )}\n                  component={renderCheckbox}\n                />\n              </Box>\n              <Box mt={2}>\n                <Button\n                  color=\"secondary\"\n                  disabled={submitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Sign up\n                </Button>\n              </Box>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </form>\n  );\n}\n\nBasicForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\n\nexport default reduxForm({\n  form: 'BasicForm',\n  validate,\n  initialValues: {\n    email: 'johnnydoe@yahoo.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    password: 'thisisasecuredpassword',\n    policy: false\n  }\n})(BasicForm);\n"]},"metadata":{},"sourceType":"module"}